piece base, body, head,tail,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,rsack,lsack, aimy1;


static-var isMoving,maxSpeed, animFramesPerKeyframe, animSpeed,gun_1,isDying;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
#define SIGNAL_MOVE 1
#define SIGNAL_IDLE 8

#include "../recoil_common_includes.h"

// For N:\animations\raptor_2legged_fast_anim_walk.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 2, 8))
#define MOVESCALE 55 //How much extra body sway the raptor should have. Scale this with size of raptor
#define MOVESPEED  3  //How many frames per animation cycle, valid 2-10
#define animAmplitude 80 //How big steps the raptor should take, valid 20-200
#define LUHAND lsack  //define these as the left and right head thingies
#define RUHAND rsack  
#define LLHAND lsack  //define these as the left and right head thingies
#define RLHAND rsack  
#define SIGNAL_MOVE 1
#include "raptor_walk_2legged_v2.h"

#define IDLEMOVESCALE 55
#define IDLEAMPLITUDE 100
#define IDLESPEED 14
#include "raptor_idle_2legged_v2.h"

#define DEATHSCALE 55 //Higher values are bigger, 100 is default
#define DEATHAMPLIDUTE 100 //Higher values are bigger, 100 is default
#define DEATHSPEED 12
#include "raptor_death_2legged_v2.h"
//use call-script DeathAnim(); from Killed()

#define BASEPIECE base //needed for HitByWeapon
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 2
#define MAXTILT 200
#include "raptor_hitbyweapon.h"

#include "raptor_death_2legged_ptaq.h"

#include "raptor_killed_2legged.h"

#include "raptor_swim_2legged_v1.h"
#include "raptor_create_move_swim.h"

AimFromWeapon1(pieceIndex)
	{	pieceIndex=head;	}

QueryWeapon1(pieceIndex)
	{	pieceIndex=head; }

AimFromWeapon2(pieceIndex)
	{	pieceIndex=head;	}

QueryWeapon2(pieceIndex)
	{	pieceIndex=head; }



AimWeapon1(heading,pitch)
{
    signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;

	if (heading > <60>) heading = <60>;
	if (heading < <-60>) heading = <-60>;
	turn aimy1 to y-axis heading speed <175>;
	turn aimy1 to x-axis 0 -pitch speed <175>;
	wait-for-turn aimy1 around y-axis;
	wait-for-turn aimy1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(heading,pitch)
	{
  	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	
	if (heading > <60>) heading = <60>;
	if (heading < <-60>) heading = <-60>;
	turn aimy1 to y-axis heading speed <175>;
	turn aimy1 to x-axis 0 -pitch speed <175>;
	wait-for-turn aimy1 around y-axis;
	wait-for-turn aimy1 around x-axis;
	
	start-script RestoreAfterDelay();
	return(1);
	}

Shot1()
	{ }
Shot2()
	{
	turn lsack to y-axis <40> speed [1];
	turn rsack to y-axis <-40> speed [1];
	wait-for-turn lsack around y-axis;
	turn lsack to y-axis <0> speed [0.3];
	turn rsack to y-axis <0> speed [0.3];
	return (head);
	}
