
#include "../recoil_common_includes.h"

piece  base, wingl, wingr, flarel, flarer, thrust, turretmisl, misboxl, misflarel, turretmisr, misboxr, misflarer;

static-var  gun_1;

// Signal definitions
#define SIGNAL_AIM1 256


#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100



#define BARRELROLLSPEEED <200>
#include "../air_barrelroll.h"

Create()
{
	hide flarel;
	hide flarer;
	hide thrust;
	hide misflarel;
	hide misflarer;
	gun_1=0;
	start-script BarrelRoll();
}

Activate()
{
	show thrust;
	turn wingl to z-axis <90> speed <90.0>;
	turn wingr to z-axis <-90> speed <90.0>;
}

Deactivate()
{
	hide thrust;
	turn wingl to z-axis <0> speed <90.0>;
	turn wingr to z-axis <0> speed <90.0>;
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;

	turn turretmisl to x-axis 0-pitch speed <720.0>;
	turn turretmisl to y-axis heading speed <360.0>;
	turn turretmisr to x-axis 0-pitch speed <720.0>;
	turn turretmisr to y-axis heading speed <360.0>;
	wait-for-turn turretmisl around x-axis;
	wait-for-turn turretmisl around y-axis;
	return (1);
}

FireWeapon1()
{
	sleep 1000;
	gun_1 = !gun_1;
}

QueryWeapon1(pieceIndex)
{

	if (gun_1 == 0)	{
		pieceIndex = misflarel;
	}else{
		pieceIndex = misflarer;
	}
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode wingr type BITMAPONLY | NOHEATCLOUD;
		explode turretmisr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretmisl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode wingl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode wingr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretmisr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretmisl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode wingl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode wingr type BITMAPONLY | NOHEATCLOUD;
		explode turretmisr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretmisl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode wingl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode wingr type NOHEATCLOUD | NOHEATCLOUD;
		explode turretmisr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretmisl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode wingl type FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
