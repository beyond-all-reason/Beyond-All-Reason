
#include "../recoil_common_includes.h"

piece  lega2, lega3, lega5, lega6, legb2, legb3, legb5, legb6,
       lega1, lega4, legb1, legb4, base;

static-var  isMoving;

movelegs(){
	if (isMoving){
		move lega6 to z-axis [-0.83] now;
		move lega5 to z-axis [-0.83] now;
		move legb6 to z-axis [-0.83] now;
		move legb5 to z-axis [-0.83] now;
	
		move lega2 to z-axis [0.83] now;
		move lega3 to z-axis [0.83] now;
		move legb2 to z-axis [0.83] now;
		move legb3 to z-axis [0.83] now;
		
		turn lega1 to x-axis <60> now;
		turn legb1 to x-axis <60> now;
		
		turn lega4 to x-axis <60> now;
		turn legb4 to x-axis <60> now;
		sleep 30;
		
		move lega6 to z-axis [-1.66] now;
		move lega5 to z-axis [-1.66] now;
		move legb6 to z-axis [-1.66] now;
		move legb5 to z-axis [-1.66] now;
	
		move lega2 to z-axis [1.66] now;
		move lega3 to z-axis [1.66] now;
		move legb2 to z-axis [1.66] now;
		move legb3 to z-axis [1.66] now;
		
		turn lega1 to x-axis <120> now;
		turn legb1 to x-axis <120> now;
		
		turn lega4 to x-axis <120> now;
		turn legb4 to x-axis <120> now;
		sleep 30;
		
		move lega6 to z-axis [0] now;
		move lega5 to z-axis [0] now;
		move legb6 to z-axis [0] now;
		move legb5 to z-axis [0] now;
	
		move lega2 to z-axis [0] now;
		move lega3 to z-axis [0] now;
		move legb2 to z-axis [0] now;
		move legb3 to z-axis [0] now;
		
		turn lega1 to x-axis <0> now;
		turn legb1 to x-axis <0> now;
		
		turn lega4 to x-axis <0> now;
		turn legb4 to x-axis <0> now;
		sleep 30;
	}

}

walkscr()
{
	while (isMoving){
		if (isMoving){ 
			turn base to y-axis <-18> speed <60>;
			move base to x-axis [0] speed [10];
			
			call-script movelegs();
			call-script movelegs();
			call-script movelegs();
			}
		
		if (isMoving){ 
			turn base to y-axis <0> speed <60>;
			move base to x-axis [3] speed [10];
			
			call-script movelegs();
			call-script movelegs();
			call-script movelegs();
			call-script movelegs();
			}
		if (isMoving){ 
			turn base to y-axis <18> speed <60>;
			move base to x-axis [0] speed [10];
			
			call-script movelegs();
			call-script movelegs();
			call-script movelegs();
		}
		if (isMoving){ 
			turn base to y-axis <0> speed <60>;
			move base to x-axis [-3] speed [10];
			
			call-script movelegs();
			call-script movelegs();
			call-script movelegs();
			call-script movelegs();
		}
		
	}
	
	return (0);
}


Movement(myMoving)
{
	while( TRUE )
	{
		myMoving = isMoving;
		if( myMoving )
		{
			call-script walkscr();
		}
		if( !myMoving )
		{
			sleep 100;
		}
	}
}

Create()
{
	isMoving = FALSE;
	start-script Movement();
}


#define BASEPIECE base
#include "../unit_hitbyweaponid_and_smoke.h"

StartMoving(reversing)
{
	isMoving = TRUE;
}

StopMoving()
{
	isMoving = FALSE;
}

AimWeapon1()
{
	return (TRUE);
}

AimWeapon2()
{
	return (TRUE);
}

FireWeapon1()
{
	get KILL_UNIT(get MY_ID,TRUE,FALSE);
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = base;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;

		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;

	return corpsetype;
}
