
#include "../recoil_common_includes.h"

piece  base, lbLeg, lbFoot, rbLeg, rbFoot, lfLeg, lfFoot, rfLeg,
       rfFoot;

static-var  isMoving;


Movement()
{
	while( TRUE )
	{
		if( isMoving )
		{
		turn base to y-axis <-18> speed <60>;
		move base to x-axis [0] speed [10];
		
		turn rfleg to y-axis <0> speed <255.0>;
		turn rfleg to z-axis <0> speed <135.0>;
		turn rffoot to z-axis <0> speed <285.0>;
		
		turn lfleg to y-axis <19> speed <405.0>;
		turn lfleg to z-axis <-24> speed <300.0>;
		turn lffoot to z-axis <13> speed <30.0>;
		
		turn lbleg to y-axis <0> speed <405.0>;
		turn lbleg to z-axis <0> speed <75.0>;
		turn lbfoot to z-axis <0> speed <180.0>;
		
		
		turn rbleg to y-axis <19> speed <285.0>;
		turn rbleg to z-axis <24> speed <15.0>;
		turn rbfoot to z-axis <-13> speed <90.0>;
		
		
		sleep 60;
		}
		if( isMoving )
		{
		//step 1
		turn base to y-axis <-12> speed <60>;
		move base to x-axis [2] speed [10];
		
		turn rfleg to y-axis <-27> speed <405.0>;
		turn rfleg to z-axis <5> speed <75.0>;
		turn rffoot to z-axis <-12> speed <180.0>;
		
		turn lfleg to y-axis <0> speed <285.0>;
		turn lfleg to z-axis <-23> speed <15.0>;
		turn lffoot to z-axis <7> speed <90.0>;
		
		turn lbleg to y-axis <17> speed <255.0>;
		turn lbleg to z-axis <9> speed <135.0>;
		turn lbfoot to z-axis <-19> speed <285.0>;
		
		
		turn rbleg to y-axis <46> speed <405.0>;
		turn rbleg to z-axis <4> speed <300.0>;
		turn rbfoot to z-axis <-11> speed <30.0>;
		
		sleep 60;
		}
		if( isMoving )
		{
		turn base to y-axis <12> speed <60>;
		move base to x-axis [2] speed [10];
		//step 2 
		turn rfleg to y-axis <-46> speed <285.0>;
		turn rfleg to z-axis <4> speed <15.0>;
		turn rffoot to z-axis <-11> speed <15.0>;
		
		turn lfleg to y-axis <-17> speed <255.0>;
		turn lfleg to z-axis <9> speed <480.0>;
		turn lffoot to z-axis <-19> speed <390.0>;
		
		turn lbleg to y-axis <0> speed <255.0>;
		turn lbleg to z-axis <-23> speed <480.0>;
		turn lbfoot to z-axis <7> speed <390.0>;
		
		
		turn rbleg to y-axis <27> speed <285.0>;
		turn rbleg to z-axis <5> speed <15.0>;
		turn rbfoot to z-axis <-12> speed <15.0>;
		
		sleep 60;
		}
		if( isMoving )
		{
		
		turn base to y-axis <18> speed <60>;
		move base to x-axis [0] speed [10];
		//step 3 
		turn rfleg to y-axis <-19> speed <405.0>;
		turn rfleg to z-axis <24> speed <300.0>;
		turn rffoot to z-axis <-13> speed <30.0>;
		
		turn lfleg to y-axis <0> speed <255.0>;
		turn lfleg to z-axis <0> speed <135.0>;
		turn lffoot to z-axis <0> speed <285.0>;
		
		turn lbleg to y-axis <-19> speed <285.0>;
		turn lbleg to z-axis <-24> speed <15.0>;
		turn lbfoot to z-axis <13> speed <90.0>;
		
		
		turn rbleg to y-axis <0> speed <405.0>;
		turn rbleg to z-axis <0> speed <75.0>;
		turn rbfoot to z-axis <0> speed <180.0>;
		
		
		sleep 60;
		}
		if( isMoving )
		{
			
		turn base to y-axis <12> speed <60>;
		move base to x-axis [-2] speed [10];
		//step 4 
		turn rfleg to y-axis <0> speed <285.0>;
		turn rfleg to z-axis <23> speed <15.0>;
		turn rffoot to z-axis <-7> speed <90.0>;
		
		turn lfleg to y-axis <27> speed <405.0>;
		turn lfleg to z-axis <-5> speed <75.0>;
		turn lffoot to z-axis <12> speed <180.0>;
		
		turn lbleg to y-axis <-46> speed <405.0>;
		turn lbleg to z-axis <-4> speed <300.0>;
		turn lbfoot to z-axis <11> speed <30.0>;
		
		turn rbleg to y-axis <-17> speed <255.0>;
		turn rbleg to z-axis <-9> speed <135.0>;
		turn rbfoot to z-axis <19> speed <285.0>;
		
		sleep 60;
		}
		if( isMoving )
		{
	
		turn base to y-axis <-12> speed <60>;
		move base to x-axis [-2] speed [10];
		//step 5 
		turn rfleg to y-axis <17> speed <255.0>;
		turn rfleg to z-axis <-9> speed <480.0>;
		turn rffoot to z-axis <19> speed <390.0>;
		
		
		turn lfleg to y-axis <46> speed <285.0>;
		turn lfleg to z-axis <-4> speed <15.0>;
		turn lffoot to z-axis <11> speed <15.0>;
		
		turn lbleg to y-axis <-27> speed <285.0>;
		turn lbleg to z-axis <-5> speed <15.0>;
		turn lbfoot to z-axis <12> speed <15.0>;
		
		turn rbleg to y-axis <0> speed <255.0>;
		turn rbleg to z-axis <23> speed <480.0>;
		turn rbfoot to z-axis <-7> speed <390.0>;
		
		sleep 60;
		}
		if( !isMoving )
		{
			sleep 100;
		}
	}
	return (0);
}

Create()
{
	isMoving = FALSE;
	start-script Movement();
}


#define BASEPIECE base
#include "../unit_hitbyweaponid_and_smoke.h"

StartMoving(reversing)
{
	isMoving = TRUE;
}

StopMoving()
{
	isMoving = FALSE;
	
	turn rfleg to y-axis <0> speed <255.0>;
	turn rfleg to z-axis <0> speed <135.0>;
	turn rffoot to z-axis <0> speed <285.0>;
	
	turn lfleg to y-axis <0> speed <405.0>;
	turn lfleg to z-axis <0> speed <300.0>;
	turn lffoot to z-axis <0> speed <30.0>;
	
	turn lbleg to y-axis <0> speed <405.0>;
	turn lbleg to z-axis <0> speed <75.0>;
	turn lbfoot to z-axis <0> speed <180.0>;
	
	turn rbleg to y-axis <0> speed <285.0>;
	turn rbleg to z-axis <0> speed <15.0>;
	turn rbfoot to z-axis <0> speed <90.0>;
	
	turn base to y-axis <0> speed <60>;
	move base to x-axis [0] speed [10];
		
	sleep 150;
}

AimWeapon1()
{
	return (TRUE);
}

AimWeapon2()
{
	return (TRUE);
}

FireWeapon1()
{

	get KILL_UNIT(get MY_ID,TRUE,FALSE);
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = base;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
