
#include "../recoil_common_includes.h"

piece  flare1, flare6, flare5, flare4, flare3, flare2, base, turret, spindle, aimy1, aimx1;

static-var  gun_1;

// Signal definitions
#define SIGNAL_AIM1 256
#define DELAY_UNIT_VAR 1024

#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	spin aimy1 around y-axis speed <22.0>;
	turn aimx1 to x-axis <-15> speed <22.0>;
	turn spindle to z-axis <0> speed <60>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 1000;
	start-script ExecuteRestoreAfterDelay();
}

Create()
{
	hide flare6;
	hide flare5;
	hide flare4;
	hide flare3;
	hide flare2;
	hide flare1;
	gun_1 = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
    signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	stop-spin aimy1 around y-axis;
	turn aimy1 to y-axis heading speed <250>;
	turn aimx1 to x-axis 0 - pitch speed <250>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	spin spindle around z-axis speed <-240>;
	if (gun_1 % 2 == 0){
		wait-for-turn spindle around z-axis;
	}
	sleep 50;
	gun_1 = (gun_1 + 1) % 6;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare1 + gun_1;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = spindle;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode spindle type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode flare3 type BITMAPONLY | NOHEATCLOUD;
		explode flare4 type BITMAPONLY | NOHEATCLOUD;
		explode flare5 type BITMAPONLY | NOHEATCLOUD;
		explode flare6 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode spindle type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type FALL | NOHEATCLOUD;
		explode flare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare3 type FALL | NOHEATCLOUD;
		explode flare4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare5 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare6 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode spindle type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare4 type SMOKE | FALL | NOHEATCLOUD;
		explode flare5 type SMOKE | FALL | NOHEATCLOUD;
		explode flare6 type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode spindle type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare5 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare6 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
