
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base,pad, nc1,nc2,nc3,nc4,nt1,nt2,nt3,nt4,nano1,nano2,nano3,nano4,beam1,beam2,beam3,beam4,cagelight,cagelight_emit;

static-var  spray;

// Signal definitions
#define SIGNAL_BUILD 2
#define SIGNAL_TURNON 4


#define WATER_ROCK_UNITSIZE 27
#define WATER_ROCK_AMPLITUDE <1.2>
#include "../floatmotion.h"


#define BASEPIECE base
#define HITSPEED <10.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 15
#define MAXTILT 100
#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide beam3;
	hide beam1;
	hide beam4;
	hide beam2;
	hide pad;
	hide cagelight_emit;

	spray = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex=beam1+spray;
	spray=spray+1;
	if (spray>3) spray=0;
}

StartBuilding()
{
	show beam1;
	show beam2;
	show beam3;
	show beam4;
	show cagelight_emit;
	spin cagelight_emit around z-axis speed <250> accelerate <2>;
}

StopBuilding()
{
	hide beam1;
	hide beam2;
	hide beam3;
	hide beam4;
	hide cagelight_emit;
	stop-spin cagelight_emit around z-axis decelerate <2>;
}

Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	move nt1 to y-axis [5] speed [10];
	move nt2 to y-axis [5] speed [10];
	move nt3 to y-axis [5] speed [10];
	move nt4 to y-axis [5] speed [10];
	wait-for-move nt1 along y-axis;
	turn nc1 to z-axis <90> speed <180>;
	turn nc2 to z-axis <90> speed <180>;
	turn nc3 to z-axis <-90> speed <180>;
	turn nc4 to z-axis <-90> speed <180>;
	wait-for-turn nc1 around z-axis;
	
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	sleep 5000;

	turn nc1 to z-axis <0> speed <180>;
	turn nc2 to z-axis <0> speed <180>;
	turn nc3 to z-axis <0> speed <180>;
	turn nc4 to z-axis <0> speed <180>;
	wait-for-turn nc1 around z-axis;
	move nt1 to y-axis [0] speed [10];
	move nt2 to y-axis [0] speed [10];
	move nt3 to y-axis [0] speed [10];
	move nt4 to y-axis [0] speed [10];
	wait-for-move nt1 along y-axis;

	FACTORY_CLOSE_BUILD;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode nt2 type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type BITMAPONLY | NOHEATCLOUD;
		explode nc2 type BITMAPONLY | NOHEATCLOUD;
		explode nt4 type BITMAPONLY | NOHEATCLOUD;
		explode nc4 type BITMAPONLY | NOHEATCLOUD;
		explode nano4 type BITMAPONLY | NOHEATCLOUD;
		explode beam4 type BITMAPONLY | NOHEATCLOUD;
		explode nt1 type BITMAPONLY | NOHEATCLOUD;
		explode nc1 type BITMAPONLY | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		explode beam1 type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		explode nt3 type BITMAPONLY | NOHEATCLOUD;
		explode nano3 type BITMAPONLY | NOHEATCLOUD;
		explode beam3 type BITMAPONLY | NOHEATCLOUD;
		explode nc3 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode nt2 type FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type FALL | NOHEATCLOUD;
		explode nc2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nt4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc4 type FALL | NOHEATCLOUD;
		explode nano4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nt1 type FALL | NOHEATCLOUD;
		explode nc1 type FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nt3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc3 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode nt2 type SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc2 type SMOKE | FALL | NOHEATCLOUD;
		explode nt4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type SMOKE | FALL | NOHEATCLOUD;
		explode nt1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nc1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nt3 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type SMOKE | FALL | NOHEATCLOUD;
		explode nc3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode nt2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode beam2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nc2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nt4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nc4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode beam4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nt1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nc1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode beam1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nt3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
