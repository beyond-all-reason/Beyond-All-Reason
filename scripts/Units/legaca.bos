
#include "../recoil_common_includes.h"

piece chassis, airjet1, airjet2, fanPivot, fan, nanoPivot, nanoBarrels, nanoFlare1, nanoFlare2;

#define SIGNAL_BUILD 2

#define chassisPIECE chassis
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE chassis
#include "../idlehover.h"

static-var whichNano, addNum;

Create()
{
	hide airjet1;
	hide airjet2;
	hide nanoFlare1;
	hide nanoFlare2;
	turn fanPivot to x-axis <-7> now;
	move nanoBarrels to z-axis [-2.5] now;
	move fan to y-axis [-0.5] now;

	addNum = 0;

	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
	whichNano = nanoFlare1;
}

Activate()
{
	show airjet1;
	show airjet2;
	spin fan around y-axis speed <-180> accelerate <5>;
}

Deactivate()
{
	hide airjet1;
	hide airjet2;
	stop-spin fan around y-axis decelerate <10>;
}

StartBuilding(heading, pitch)
{
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	turn nanoPivot to x-axis <25> speed <50>;
	wait-for-turn nanoPivot around x-axis;

	move nanoBarrels to z-axis [0] speed [10];

	set INBUILDSTANCE to 1;
	show nanoFlare1;
	show nanoFlare2;
}


StopBuilding()
{
	hide nanoFlare1;
	hide nanoFlare2;
	
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	sleep 6000;

	set INBUILDSTANCE to 0;
	move nanoBarrels to z-axis [0] speed [5];
	wait-for-move nanoBarrels along y-axis;

	turn nanoPivot to x-axis <0> speed <25>;
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = nanoFlare1 + addnum;
	addnum = !addnum;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode airjet1 type BITMAPONLY | NOHEATCLOUD;
		explode nanoPivot type BITMAPONLY | NOHEATCLOUD;
		explode nanoBarrels type BITMAPONLY | NOHEATCLOUD;
		explode nanoFlare1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanoFlare2 type BITMAPONLY | NOHEATCLOUD;
		explode fan type BITMAPONLY | NOHEATCLOUD;
		explode fanpivot type BITMAPONLY | NOHEATCLOUD;
		explode fan type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode airjet1 type BITMAPONLY | NOHEATCLOUD;
		explode nanoPivot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanoBarrels type BITMAPONLY | NOHEATCLOUD;
		explode nanoFlare1 type BITMAPONLY | NOHEATCLOUD;
		explode nanoFlare2 type BITMAPONLY | NOHEATCLOUD;
		explode fan type BITMAPONLY | NOHEATCLOUD;
		explode fanpivot type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode airjet1 type BITMAPONLY | NOHEATCLOUD;
		explode nanoPivot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanoBarrels type BITMAPONLY | NOHEATCLOUD;
		explode nanoFlare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanoFlare2 type BITMAPONLY | NOHEATCLOUD;
		explode fan type BITMAPONLY | NOHEATCLOUD;
		explode fanpivot type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
    explode chassis type BITMAPONLY | NOHEATCLOUD;
    explode airjet1 type BITMAPONLY | NOHEATCLOUD;
    explode nanoPivot type FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode nanoBarrels type BITMAPONLY | NOHEATCLOUD;
    explode nanoFlare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode nanoFlare2 type BITMAPONLY | NOHEATCLOUD;
    explode fanpivot type BITMAPONLY | NOHEATCLOUD;
    explode fan type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
