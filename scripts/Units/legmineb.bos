
#include "../recoil_common_includes.h"

piece  base, factorydeco, lthruster, rthruster, lwing, rwing, lpivot, rpivot, lthrusttrail, rthrusttrail, flare, mine1, mine2, mine3, mine4, mine5, mine6;

static-var  isMoving, mineCounter;

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide lthrusttrail;
	hide rthrusttrail;
	hide lpivot;
	hide rpivot;
	
	spin factorydeco around z-axis speed <120> accelerate 60;
	turn rpivot to x-axis <6> now;
	turn rpivot to y-axis <-5> now;
	turn lpivot to x-axis <6> now;
	turn lpivot to y-axis <5> now;
	
	mineCounter = 0;
	isMoving = FALSE;
}

Activate()
{
	show lthrusttrail;
	show rthrusttrail;
	turn lwing to z-axis <0> speed <60>;
	turn rwing to z-axis <0> speed <60>;
	
	sleep 150;
	
	move base to y-axis [0] speed [2];
	turn lthruster to x-axis <0> speed <30>;
	turn rthruster to x-axis <0> speed <30>;
}

Deactivate()
{
	turn lthruster to x-axis <-90> speed <90>;
	turn rthruster to x-axis <-90> speed <90>;
	move base to y-axis [8] speed [21];
	
	sleep 150;
	
	hide lthrusttrail;
	hide rthrusttrail;
	turn lwing to z-axis <-120> speed <60>;
	turn rwing to z-axis <120> speed <60>;
}

StartMoving()
{
	isMoving = TRUE;
}

StopMoving()
{
	isMoving = FALSE;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = base;
}

QueryWeapon1(piecenum)
{
	piecenum = flare;
	return (0);
}

Shot1(zero) // Animate mines droping one by one
{
	++mineCounter;
	if(mineCounter == 1)
	{
		move mine1 to z-axis [20] now;
		hide mine1;
	}
	else if(mineCounter == 2)
	{
		move mine2 to z-axis [16.5] now;
		hide mine2;
	}
	else if(mineCounter == 3)
	{
		move mine3 to z-axis [13] now;
		hide mine3;
	}
	else if(mineCounter == 4)
	{
		move mine4 to z-axis [9.5] now;
		hide mine4;
	}
	else if(mineCounter == 5)
	{
		move mine5 to z-axis [6] now;
		hide mine5;
	}
	else if(mineCounter == 6)
	{
		move mine6 to z-axis [2.5] now;
		hide mine6;
		
		mineCounter = 0;
	}
	return(1);
}

AimWeapon1(heading, pitch)
{
	return (1);
}

FireWeapon1()
{
	move flare to z-axis [20] speed [15];
	start-script RebuildMines();
	return (0);
}

RebuildMines()
{
	sleep 5000;
	
	// Animate mines reloading
	move flare to z-axis [0] now;
	
	move mine1 to z-axis [0] speed [9.5];
	show mine1;
	sleep 400;
	
	move mine2 to z-axis [0] speed [9.5];
	show mine2;
	sleep 400;
	
	move mine3 to z-axis [0] speed [9.5];
	show mine3;
	sleep 400;
	
	move mine4 to z-axis [0] speed [9.5];
	show mine4;
	sleep 400;
	
	move mine5 to z-axis [0] speed [9.5];
	show mine5;
	sleep 400;
	
	move mine6 to z-axis [0] speed [9.5];
	show mine6;
	
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode mine2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mine1 type BITMAPONLY | NOHEATCLOUD;
		explode mine3 type BITMAPONLY | NOHEATCLOUD;
		explode rthrusttrail type BITMAPONLY | NOHEATCLOUD;
		explode lthrusttrail type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode mine2 type FALL | NOHEATCLOUD;
		explode mine1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mine3 type BITMAPONLY | NOHEATCLOUD;
		explode rthrusttrail type FALL | NOHEATCLOUD;
		explode lthrusttrail type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode mine3 type BITMAPONLY | NOHEATCLOUD;
		explode mine2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mine1 type BITMAPONLY | NOHEATCLOUD;
		explode rthrusttrail type SMOKE | FALL | NOHEATCLOUD;
		explode lthrusttrail type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode mine2 type BITMAPONLY | NOHEATCLOUD;
		explode mine1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mine3 type BITMAPONLY | NOHEATCLOUD;
		explode rthrusttrail type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthrusttrail type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
