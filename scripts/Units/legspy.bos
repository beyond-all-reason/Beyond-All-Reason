
#include "../recoil_common_includes.h"

piece 
    chassis,
    lUpperLeg,
    lMidLeg,
    lLowerLeg,
    rUpperLeg,
    rMidLeg,
    rLowerLeg,
    rFoot,
    lFoot;

static-var isMoving, buildDelay, isCloaked, animSpeed, maxSpeed, animFramesPerKeyframe;

// Signal definitions
#define SIGNAL_TURNON 4


#define SIGNAL_MOVE 1
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from C:\Users\ptasz\Documents\GitHub\support\Animation_sources\armspy_anim_walk.blend 
	set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:1
			move chassis to y-axis [0.440581] speed [4.289237] / animSpeed; 
			turn lFoot to x-axis <-23.210890> speed <47.526181> / animSpeed; 
			turn lFoot to y-axis <-2.733417> speed <4.119994> / animSpeed; 
			turn lLowerLeg to x-axis <1.688865> speed <14.744065> / animSpeed; 
			turn lUpperLeg to x-axis <15.497798> speed <64.484636> / animSpeed; 
			turn lUpperLeg to y-axis <-0.593752> speed <3.101279> / animSpeed; 
			turn rLowerLeg to x-axis <10.486728> speed <43.353379> / animSpeed; 
			turn rMidLeg to x-axis <6.593861> speed <40.213149> / animSpeed; 
			turn rUpperLeg to x-axis <-31.169589> speed <84.588853> / animSpeed; 
			turn rUpperLeg to y-axis <1.276585> speed <3.509077> / animSpeed; 
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:6
			move chassis to y-axis [-0.274292] speed [21.446180] / animSpeed; 
			turn chassis to z-axis <-2.251313> speed <4.638546> / animSpeed; 
			turn chassis to y-axis <2.912348> speed <12.866239> / animSpeed; 
			turn lFoot to x-axis <-31.131924> speed <237.631007> / animSpeed; 
			turn lFoot to y-axis <-2.046752> speed <20.599962> / animSpeed; 
			turn lLowerLeg to x-axis <-0.768479> speed <73.720312> / animSpeed; 
			turn lMidLeg to x-axis <5.624692> speed <11.091122> / animSpeed; 
			turn lUpperLeg to x-axis <26.245238> speed <322.423178> / animSpeed; 
			turn lUpperLeg to z-axis <0.258916> speed <5.038524> / animSpeed; 
			turn lUpperLeg to y-axis <-1.110632> speed <15.506400> / animSpeed; 
			turn rFoot to x-axis <13.839771> speed <4.846839> / animSpeed; 
			turn rFoot to y-axis <-3.557627> speed <12.442731> / animSpeed; 
			turn rLowerLeg to x-axis <3.261167> speed <216.766813> / animSpeed; 
			turn rLowerLeg to y-axis <-0.128339> speed <7.754662> / animSpeed; 
			turn rMidLeg to x-axis <-0.108330> speed <201.065745> / animSpeed; 
			turn rMidLeg to y-axis <0.004259> speed <7.293972> / animSpeed; 
			turn rUpperLeg to x-axis <-17.071448> speed <422.944216> / animSpeed; 
			turn rUpperLeg to z-axis <0.103820> speed <8.052566> / animSpeed; 
			turn rUpperLeg to y-axis <0.691739> speed <17.545377> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:12
			move chassis to y-axis [-0.748184] speed [14.216766] / animSpeed; 
			turn chassis to z-axis <-1.572927> speed <20.351600> / animSpeed; 
			turn chassis to y-axis <1.279919> speed <48.972882> / animSpeed; 
			turn lFoot to x-axis <-12.186048> speed <568.376275> / animSpeed; 
			turn lFoot to z-axis <1.346847> speed <14.442714> / animSpeed; 
			turn lFoot to y-axis <-0.965807> speed <32.428331> / animSpeed; 
			turn lLowerLeg to x-axis <-27.737883> speed <809.082120> / animSpeed; 
			turn lLowerLeg to z-axis <0.205999> speed <6.173902> / animSpeed; 
			turn lLowerLeg to y-axis <0.834308> speed <24.125282> / animSpeed; 
			turn lMidLeg to x-axis <-12.154451> speed <533.374262> / animSpeed; 
			turn lMidLeg to y-axis <0.337755> speed <16.795407> / animSpeed; 
			turn lUpperLeg to x-axis <52.056017> speed <774.323383> / animSpeed; 
			turn lUpperLeg to z-axis <0.985663> speed <21.802399> / animSpeed; 
			turn lUpperLeg to y-axis <-2.018248> speed <27.228494> / animSpeed; 
			turn rFoot to x-axis <8.993222> speed <145.396457> / animSpeed; 
			turn rFoot to z-axis <1.791466> speed <37.469269> / animSpeed; 
			turn rFoot to y-axis <-1.544906> speed <60.381617> / animSpeed; 
			turn rLowerLeg to x-axis <-2.274994> speed <166.084835> / animSpeed; 
			turn rLowerLeg to y-axis <0.062341> speed <5.720399> / animSpeed; 
			turn rMidLeg to x-axis <-3.829236> speed <111.627167> / animSpeed; 
			turn rMidLeg to y-axis <0.105443> speed <3.035522> / animSpeed; 
			turn rUpperLeg to x-axis <-2.909188> speed <424.867806> / animSpeed; 
			turn rUpperLeg to z-axis <0.002029> speed <3.053727> / animSpeed; 
			turn rUpperLeg to y-axis <0.079956> speed <18.353471> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:18
			move chassis to y-axis [-0.174767] speed [17.202530] / animSpeed; 
			turn chassis to z-axis <-0.289339> speed <38.507640> / animSpeed; 
			turn chassis to y-axis <-0.845185> speed <63.753124> / animSpeed; 
			turn lFoot to x-axis <27.533719> speed <1191.592993> / animSpeed; 
			turn lFoot to z-axis <-0.089077> speed <43.077698> / animSpeed; 
			turn lFoot to y-axis <0.794849> speed <52.819696> / animSpeed; 
			turn lLowerLeg to x-axis <-23.312310> speed <132.767198> / animSpeed; 
			turn lLowerLeg to z-axis <0.027910> speed <5.342670> / animSpeed; 
			turn lLowerLeg to y-axis <0.135272> speed <20.971067> / animSpeed; 
			turn lMidLeg to x-axis <-21.872574> speed <291.543713> / animSpeed; 
			turn lMidLeg to y-axis <0.111054> speed <6.801024> / animSpeed; 
			turn lUpperLeg to x-axis <17.650947> speed <1032.152096> / animSpeed; 
			turn lUpperLeg to z-axis <0.014291> speed <29.141168> / animSpeed; 
			turn lUpperLeg to y-axis <-0.092066> speed <57.785456> / animSpeed; 
			turn rFoot to x-axis <-1.496548> speed <314.693114> / animSpeed; 
			turn rFoot to z-axis <0.310383> speed <44.432506> / animSpeed; 
			turn rFoot to y-axis <0.852997> speed <71.937081> / animSpeed; 
			turn rLowerLeg to x-axis <-1.376149> speed <26.965363> / animSpeed; 
			turn rMidLeg to x-axis <-1.100867> speed <81.851064> / animSpeed; 
			turn rUpperLeg to x-axis <3.975845> speed <206.550978> / animSpeed; 
			turn rUpperLeg to y-axis <-0.020104> speed <3.001825> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:24
			move chassis to y-axis [0.643288] speed [24.541626] / animSpeed; 
			turn chassis to z-axis <1.104986> speed <41.829728> / animSpeed; 
			turn chassis to y-axis <-2.645397> speed <54.006344> / animSpeed; 
			turn lFoot to x-axis <35.483960> speed <238.507235> / animSpeed; 
			turn lFoot to z-axis <-3.237925> speed <94.465466> / animSpeed; 
			turn lFoot to y-axis <4.034333> speed <97.184509> / animSpeed; 
			turn lLowerLeg to x-axis <0.670883> speed <719.495797> / animSpeed; 
			turn lLowerLeg to y-axis <0.012848> speed <3.672732> / animSpeed; 
			turn lMidLeg to x-axis <-7.348416> speed <435.724746> / animSpeed; 
			turn lMidLeg to y-axis <-0.142931> speed <7.619554> / animSpeed; 
			turn lUpperLeg to x-axis <-28.887216> speed <1396.144898> / animSpeed; 
			turn lUpperLeg to z-axis <-0.157049> speed <5.140203> / animSpeed; 
			turn lUpperLeg to y-axis <-0.609742> speed <15.530279> / animSpeed; 
			turn rFoot to x-axis <-12.940206> speed <343.309722> / animSpeed; 
			turn rFoot to z-axis <-0.521981> speed <24.970914> / animSpeed; 
			turn rFoot to y-axis <2.461571> speed <48.257214> / animSpeed; 
			turn rLowerLeg to x-axis <1.967590> speed <100.312169> / animSpeed; 
			turn rMidLeg to x-axis <4.292787> speed <161.809613> / animSpeed; 
			turn rUpperLeg to x-axis <6.667236> speed <80.741749> / animSpeed; 
			turn rUpperLeg to y-axis <0.129190> speed <4.478825> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			turn chassis to z-axis <2.073994> speed <29.070240> / animSpeed; 
			turn chassis to y-axis <-3.428910> speed <23.505402> / animSpeed; 
			turn lFoot to x-axis <13.835358> speed <649.458065> / animSpeed; 
			turn lFoot to z-axis <-2.994493> speed <7.302979> / animSpeed; 
			turn lLowerLeg to x-axis <11.382558> speed <321.350242> / animSpeed; 
			turn lLowerLeg to y-axis <0.419324> speed <12.194269> / animSpeed; 
			turn lMidLeg to x-axis <7.391577> speed <442.199791> / animSpeed; 
			turn lMidLeg to y-axis <0.268705> speed <12.349090> / animSpeed; 
			turn lUpperLeg to x-axis <-32.699022> speed <114.354169> / animSpeed; 
			turn lUpperLeg to z-axis <-0.390798> speed <7.012472> / animSpeed; 
			turn lUpperLeg to y-axis <-1.332121> speed <21.671368> / animSpeed; 
			turn rFoot to x-axis <-22.434327> speed <284.823627> / animSpeed; 
			turn rFoot to z-axis <-0.822960> speed <9.029378> / animSpeed; 
			turn rFoot to y-axis <2.856732> speed <11.854850> / animSpeed; 
			turn rLowerLeg to x-axis <2.113215> speed <4.368749> / animSpeed; 
			turn rMidLeg to x-axis <6.164792> speed <56.160163> / animSpeed; 
			turn rMidLeg to y-axis <0.224453> speed <4.239875> / animSpeed; 
			turn rUpperLeg to x-axis <14.127317> speed <223.802435> / animSpeed; 
			turn rUpperLeg to y-axis <0.522240> speed <11.791512> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:36
			move chassis to y-axis [-0.306656] speed [26.025696] / animSpeed; 
			turn chassis to z-axis <2.247724> speed <5.211910> / animSpeed; 
			turn chassis to y-axis <-2.896932> speed <15.959328> / animSpeed; 
			turn lFoot to x-axis <13.447275> speed <11.642484> / animSpeed; 
			turn lFoot to y-axis <3.519409> speed <15.870918> / animSpeed; 
			turn lLowerLeg to x-axis <2.710111> speed <260.173423> / animSpeed; 
			turn lLowerLeg to y-axis <0.106427> speed <9.386901> / animSpeed; 
			turn lMidLeg to x-axis <-0.510610> speed <237.065594> / animSpeed; 
			turn lMidLeg to y-axis <-0.020045> speed <8.662498> / animSpeed; 
			turn lUpperLeg to x-axis <-15.724320> speed <509.241061> / animSpeed; 
			turn lUpperLeg to z-axis <-0.087430> speed <9.101047> / animSpeed; 
			turn lUpperLeg to y-axis <-0.633163> speed <20.968737> / animSpeed; 
			turn rFoot to x-axis <-30.457398> speed <240.692144> / animSpeed; 
			turn rFoot to y-axis <2.042104> speed <24.438850> / animSpeed; 
			turn rLowerLeg to x-axis <-2.906810> speed <150.600753> / animSpeed; 
			turn rLowerLeg to y-axis <-0.113980> speed <5.708960> / animSpeed; 
			turn rMidLeg to x-axis <3.878474> speed <68.589549> / animSpeed; 
			turn rUpperLeg to x-axis <29.454146> speed <459.804852> / animSpeed; 
			turn rUpperLeg to z-axis <-0.333859> speed <8.074260> / animSpeed; 
			turn rUpperLeg to y-axis <1.270088> speed <22.435438> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:42
			move chassis to y-axis [-0.744923] speed [13.148003] / animSpeed; 
			turn chassis to z-axis <1.558873> speed <20.665519> / animSpeed; 
			turn chassis to y-axis <-1.253064> speed <49.316058> / animSpeed; 
			turn lFoot to x-axis <8.239404> speed <156.236121> / animSpeed; 
			turn lFoot to z-axis <-1.752829> speed <37.641147> / animSpeed; 
			turn lFoot to y-axis <1.491985> speed <60.822699> / animSpeed; 
			turn lLowerLeg to x-axis <-2.587143> speed <158.917612> / animSpeed; 
			turn lLowerLeg to y-axis <-0.070264> speed <5.300723> / animSpeed; 
			turn lMidLeg to x-axis <-3.935382> speed <102.743165> / animSpeed; 
			turn lUpperLeg to x-axis <-1.736188> speed <419.643964> / animSpeed; 
			turn lUpperLeg to y-axis <-0.047260> speed <17.577105> / animSpeed; 
			turn rFoot to x-axis <-9.210640> speed <637.402747> / animSpeed; 
			turn rFoot to z-axis <-1.391023> speed <14.714597> / animSpeed; 
			turn rFoot to y-axis <1.013039> speed <30.871937> / animSpeed; 
			turn rLowerLeg to x-axis <-29.265083> speed <790.748187> / animSpeed; 
			turn rLowerLeg to z-axis <-0.230231> speed <6.820138> / animSpeed; 
			turn rLowerLeg to y-axis <-0.881789> speed <23.034255> / animSpeed; 
			turn rMidLeg to x-axis <-13.100763> speed <509.377105> / animSpeed; 
			turn rMidLeg to y-axis <-0.361558> speed <15.424187> / animSpeed; 
			turn rUpperLeg to x-axis <51.554712> speed <663.016981> / animSpeed; 
			turn rUpperLeg to z-axis <-0.948787> speed <18.447829> / animSpeed; 
			turn rUpperLeg to y-axis <1.964498> speed <20.832289> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:48
			move chassis to y-axis [-0.140444] speed [18.134365] / animSpeed; 
			turn chassis to z-axis <0.270215> speed <38.659762> / animSpeed; 
			turn chassis to y-axis <0.873169> speed <63.786986> / animSpeed; 
			turn lFoot to x-axis <-2.413093> speed <319.574899> / animSpeed; 
			turn lFoot to z-axis <-0.306271> speed <43.396737> / animSpeed; 
			turn lFoot to y-axis <-0.885289> speed <71.318241> / animSpeed; 
			turn lLowerLeg to x-axis <-1.398494> speed <35.659485> / animSpeed; 
			turn lMidLeg to x-axis <-0.947852> speed <89.625880> / animSpeed; 
			turn lMidLeg to y-axis <-0.004479> speed <3.087968> / animSpeed; 
			turn lUpperLeg to x-axis <4.761766> speed <194.938618> / animSpeed; 
			turn rFoot to x-axis <30.772799> speed <1199.503171> / animSpeed; 
			turn rFoot to z-axis <0.179318> speed <47.110220> / animSpeed; 
			turn rFoot to y-axis <-0.846194> speed <55.776994> / animSpeed; 
			turn rLowerLeg to x-axis <-20.849762> speed <252.459621> / animSpeed; 
			turn rLowerLeg to z-axis <-0.020686> speed <6.286331> / animSpeed; 
			turn rLowerLeg to y-axis <-0.112426> speed <23.080870> / animSpeed; 
			turn rMidLeg to x-axis <-22.204764> speed <273.120029> / animSpeed; 
			turn rMidLeg to y-axis <-0.105081> speed <7.694300> / animSpeed; 
			turn rUpperLeg to x-axis <12.280856> speed <1178.215674> / animSpeed; 
			turn rUpperLeg to z-axis <-0.006333> speed <28.273601> / animSpeed; 
			turn rUpperLeg to y-axis <0.058828> speed <57.170087> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:54
			move chassis to y-axis [0.660629] speed [24.032192] / animSpeed; 
			turn chassis to z-axis <-1.121804> speed <41.760571> / animSpeed; 
			turn chassis to y-axis <2.663733> speed <53.716929> / animSpeed; 
			turn lFoot to x-axis <-13.800504> speed <341.622340> / animSpeed; 
			turn lFoot to z-axis <0.496670> speed <24.088238> / animSpeed; 
			turn lFoot to y-axis <-2.468608> speed <47.499551> / animSpeed; 
			turn lLowerLeg to x-axis <1.994668> speed <101.794841> / animSpeed; 
			turn lMidLeg to x-axis <4.475423> speed <162.698247> / animSpeed; 
			turn lUpperLeg to x-axis <7.318224> speed <76.693735> / animSpeed; 
			turn lUpperLeg to y-axis <-0.144088> speed <4.997857> / animSpeed; 
			turn rFoot to x-axis <33.213663> speed <73.225912> / animSpeed; 
			turn rFoot to z-axis <3.082034> speed <87.081489> / animSpeed; 
			turn rFoot to y-axis <-3.917385> speed <92.135746> / animSpeed; 
			turn rLowerLeg to x-axis <1.953618> speed <684.101397> / animSpeed; 
			turn rMidLeg to x-axis <-5.559863> speed <499.347024> / animSpeed; 
			turn rMidLeg to y-axis <0.109452> speed <6.436006> / animSpeed; 
			turn rUpperLeg to x-axis <-29.684217> speed <1258.952199> / animSpeed; 
			turn rUpperLeg to z-axis <0.169479> speed <5.274367> / animSpeed; 
			turn rUpperLeg to y-axis <0.639549> speed <17.421632> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:60
			move chassis to y-axis [0.536953] speed [3.710289] / animSpeed; 
			turn chassis to z-axis <-2.082070> speed <28.807961> / animSpeed; 
			turn chassis to y-axis <3.430579> speed <23.005375> / animSpeed; 
			turn lFoot to x-axis <-23.245547> speed <283.351277> / animSpeed; 
			turn lFoot to z-axis <0.787108> speed <8.713132> / animSpeed; 
			turn lFoot to y-axis <-2.842816> speed <11.226238> / animSpeed; 
			turn lMidLeg to x-axis <6.267357> speed <53.758041> / animSpeed; 
			turn lMidLeg to y-axis <-0.229110> speed <4.233327> / animSpeed; 
			turn lUpperLeg to x-axis <14.899506> speed <227.438461> / animSpeed; 
			turn lUpperLeg to y-axis <-0.554231> speed <12.304286> / animSpeed; 
			turn rFoot to x-axis <13.631829> speed <587.455017> / animSpeed; 
			turn rFoot to y-axis <-4.041004> speed <3.708549> / animSpeed; 
			turn rLowerLeg to x-axis <10.813301> speed <265.790496> / animSpeed; 
			turn rLowerLeg to y-axis <-0.399269> speed <10.836047> / animSpeed; 
			turn rMidLeg to x-axis <6.872300> speed <372.964892> / animSpeed; 
			turn rMidLeg to y-axis <-0.250644> speed <10.802889> / animSpeed; 
			turn rUpperLeg to x-axis <-31.407020> speed <51.684076> / animSpeed; 
			turn rUpperLeg to z-axis <0.357608> speed <5.643884> / animSpeed; 
			turn rUpperLeg to y-axis <1.271912> speed <18.970869> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	animSpeed = 10; // tune restore speed here, higher values are slower restore speeds
	move chassis to y-axis [0.583555] speed [43.376160] / animSpeed;
	turn chassis to y-axis <3.426998> speed <106.311644> / animSpeed;
	turn chassis to z-axis <-2.065772> speed <69.716213> / animSpeed;
	turn lFoot to x-axis <-21.626684> speed <1985.988321> / animSpeed;
	turn lFoot to y-axis <-2.870750> speed <161.974182> / animSpeed;
	turn lFoot to z-axis <0.858550> speed <157.442444> / animSpeed;
	turn lLowerLeg to x-axis <2.180333> speed <1348.470201> / animSpeed;
	turn lLowerLeg to y-axis <0.000000> speed <40.208804> / animSpeed;
	turn lLowerLeg to z-axis <0.000000> speed <10.289836> / animSpeed;
	turn lMidLeg to x-axis <6.068336> speed <888.957103> / animSpeed;
	turn lMidLeg to y-axis <-0.220037> speed <27.992344> / animSpeed;
	turn lUpperLeg to x-axis <13.348310> speed <2326.908163> / animSpeed;
	turn lUpperLeg to y-axis <-0.490376> speed <96.309094> / animSpeed;
	turn lUpperLeg to z-axis <0.000000> speed <48.568614> / animSpeed;
	turn rFoot to x-axis <14.033644> speed <1999.171952> / animSpeed;
	turn rFoot to y-axis <-4.055336> speed <153.559576> / animSpeed;
	turn rFoot to z-axis <3.000617> speed <145.135814> / animSpeed;
	turn rLowerLeg to x-axis <11.931840> speed <1317.913644> / animSpeed;
	turn rLowerLeg to y-axis <-0.438526> speed <38.468116> / animSpeed;
	turn rLowerLeg to z-axis <0.000000> speed <11.366896> / animSpeed;
	turn rMidLeg to x-axis <7.934299> speed <848.961842> / animSpeed;
	turn rMidLeg to y-axis <-0.287500> speed <25.706979> / animSpeed;
	turn rUpperLeg to x-axis <-33.989217> speed <2098.253664> / animSpeed;
	turn rUpperLeg to y-axis <1.393554> speed <95.283478> / animSpeed;
	turn rUpperLeg to z-axis <0.425922> speed <47.122669> / animSpeed;
}
// REMEMBER TO animspeed = 5 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 5; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 5) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>11) animSpeed = 11;
		sleep 193;
	}
}
StartMoving(){
	signal SIGNAL_MOVE;
	isMoving=TRUE;
    animSpeed = 5;
	start-script Walk();
}
StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}

#define SMOKE_PIECE chassis
#include "../damagedsmoke.h"

Create()
{
	// hide aimy1;
	isMoving = FALSE;
	buildDelay = 1;
	animSpeed = 5;
	isCloaked = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script DamagedSmoke();
}

Activate()
{
	if( isCloaked )
	{
		set ACTIVATION to 0;
		return (0);
	}
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	return (0);
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = chassis;
}



Reload()
{
	sleep 5000;
	buildDelay = 1;
}



StartBuilding(heading)
{
	while( !buildDelay )
	{
		sleep 100;
	}
	buildDelay = 0;
	set INBUILDSTANCE to 1;
	start-script Reload();
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	return (0);
}

HitByWeapon(anglex, anglez)
{
	turn chassis to z-axis anglez speed <105.0>;
	turn chassis to x-axis <0> - anglex speed <105.0>;
	wait-for-turn chassis around z-axis;
	wait-for-turn chassis around x-axis;
	turn chassis to z-axis <0.0> speed <30.0>;
	turn chassis to x-axis <0.0> speed <30.0>;
	if( get ACTIVATION )
	{
		isCloaked = 1;
	}
	if( isCloaked )
	{
		signal SIGNAL_TURNON;
		set-signal-mask SIGNAL_TURNON;
		set ACTIVATION to 0;
		sleep 8000;
		isCloaked = 0;
		set ACTIVATION to 100;
	}
	return (0);
}

AimWeapon1()
{
	return (TRUE);
}

FireWeapon1()
{
	get KILL_UNIT(get MY_ID,TRUE,FALSE);
}

QueryWeapon1(piecenum)
{
	piecenum = chassis;
}

AimFromWeapon1(piecenum)
{
	piecenum = chassis;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode lFoot type BITMAPONLY | NOHEATCLOUD;
		explode rLowerLeg type BITMAPONLY | NOHEATCLOUD;
		explode rFoot type BITMAPONLY | NOHEATCLOUD;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode lFoot type FALL | NOHEATCLOUD;
		explode rLowerLeg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rUpperLeg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rFoot type FALL | NOHEATCLOUD;
		explode chassis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode lFoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rLowerLeg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rUpperLeg type SMOKE | FALL | NOHEATCLOUD;
		explode rFoot type SMOKE | FALL | NOHEATCLOUD;
		explode chassis type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode lFoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rLowerLeg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rUpperLeg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rFoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode chassis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
