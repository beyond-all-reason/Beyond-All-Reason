#include "../recoil_common_includes.h"

piece  base, duct1, fan1, duct2, fan2, door1, door2, support, beam, nano, thrust;

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "../idlehover.h"

Create()
{
	hide nano;
	hide thrust;
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
}

Activate()
{
	show thrust;
	spin fan1 around y-axis speed <-720> accelerate <720>;
	spin fan2 around y-axis speed <720> accelerate <720>;
}

Deactivate()
{
	hide thrust;
	stop-spin fan1 around y-axis decelerate <720>;
	stop-spin fan2 around y-axis decelerate <720>;
}

StartBuilding()
{
	show nano;
	turn support to x-axis <-90> speed <90>;
	turn beam to x-axis <135> speed <135>;
	turn door1 to z-axis <-130> speed <280>;
	turn door2 to z-axis <130> speed <280>;
	set INBUILDSTANCE to 1;
	return (0);
}

StopBuilding()
{
	hide nano;
	turn support to x-axis <0> speed <90>;
	turn beam to x-axis <0> speed <135>;
	turn door1 to z-axis <0> speed <280>;
	turn door2 to z-axis <0> speed <280>;
	set INBUILDSTANCE to 0;
	return (0);
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = nano;
	return (0);
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode door1 type BITMAPONLY | NOHEATCLOUD;
		explode support type BITMAPONLY | NOHEATCLOUD;
		explode beam type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type BITMAPONLY | NOHEATCLOUD;
		explode duct1 type BITMAPONLY | NOHEATCLOUD;
		explode fan1 type BITMAPONLY | NOHEATCLOUD;
		explode door2 type BITMAPONLY | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type FALL | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode support type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type BITMAPONLY | NOHEATCLOUD;
		explode nano type BITMAPONLY | NOHEATCLOUD;
		explode duct1 type BITMAPONLY | NOHEATCLOUD;
		explode fan1 type BITMAPONLY | NOHEATCLOUD;
		explode door2 type BITMAPONLY | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode support type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type BITMAPONLY | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode duct1 type BITMAPONLY | NOHEATCLOUD;
		explode fan1 type BITMAPONLY | NOHEATCLOUD;
		explode door2 type BITMAPONLY | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode support type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type BITMAPONLY | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode duct1 type BITMAPONLY | NOHEATCLOUD;
		explode fan1 type BITMAPONLY | NOHEATCLOUD;
		explode door2 type BITMAPONLY | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
