#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

//piece  base, turret, barrel, flare, sleeve;

piece base, lTrack, rTrack, turretBase, turret, barrelPivot, barrelSleeve, barrel, flare, cannisterPivot, cannister;


static-var  open, restore_delay;

// Signal definitions
#define SIG_AIM				2
#define SIG_DEPLOY			4


#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 2
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

deploy(){
	signal SIG_DEPLOY;
	set-signal-mask SIG_DEPLOY;
	open = 1;
	move turret to y-axis [0] speed [17];
	move turretBase to y-axis [0] speed [7];
	wait-for-move turret along y-axis;
	move barrelPivot to z-axis [0] speed [5];
	move barrelSleeve to z-axis [0] speed [10];
	turn barrelSleeve to z-axis <30> speed <20>;
	move barrel to z-axis [0] speed [20];
}

undeploy(){
	signal SIG_DEPLOY;
	set-signal-mask SIG_DEPLOY;
	open = 0;
	turn barrelPivot to x-axis <0.000000> speed <64>;
	move barrel to z-axis [-6] speed [10];
	wait-for-move barrel along z-axis;
	move barrelSleeve to z-axis [-2] speed [3.333];
	wait-for-move barrelSleeve along z-axis;
	move barrelPivot to z-axis [-1] speed [1.667];
	wait-for-turn turret around y-axis;
	wait-for-turn barrelPivot around x-axis;
	turn barrelSleeve to z-axis <0> speed <30>;
	move turret to y-axis [-4] speed [10];
	move turretBase to y-axis [-3] speed [4.3];
}

//rock the unit
RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.000000>;
	turn base to z-axis <0> - anglez speed <50.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

Create()
{
	hide flare;
	turn cannisterPivot to z-axis <25> now;
	turn barrelSleeve to z-axis <30> now;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}

	restore_delay = 3000;
	start-script ExecuteRestoreAfterDelay();

}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0> speed <75>;
	start-script undeploy();
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	if (open == 0)
	{
		start-script deploy();
	}
	turn turret to y-axis heading speed <130.000000>;
	turn barrelPivot to x-axis <0.000000> - pitch speed <130.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn barrelPivot around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	move barrel to z-axis [-2.700000] speed [1000.000000];
	sleep 50;
	move barrel to z-axis [0.000000] speed [6.000000];
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = barrelPivot;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode barrelPivot type FIRE | SMOKE | FALL | SHATTER | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelPivot type FIRE | SMOKE | FALL | SHATTER | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelPivot type EXPLODE_ON_HIT | SMOKE | FALL | SHATTER | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelPivot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | SHATTER | NOHEATCLOUD;
	return corpsetype;
}
