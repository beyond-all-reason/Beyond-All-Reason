#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, tailfins, barrel, lblades, rblades,
       flare, lthrust, rthrust;

static-var  isFlying;


activatescr()
{
	sleep 15;
}

deactivatescr()
{
	sleep 9;
}

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

static-var maxSpeed, currentSpeed;
BarrelRoll() // remember to start-script BarrelRoll(); in Create()!
{
	currentSpeed = (get CURRENT_SPEED);
	maxSpeed = (get MAX_SPEED);
	
	while (TRUE){
		sleep 2000;
		currentSpeed = (get CURRENT_SPEED);
		//get PRINT(maxSpeed, currentSpeed, Static_Var_1);
		if( Rand( 1, 5 ) == 1 AND (maxSpeed < (currentSpeed+100) ) )
		{
			turn base to z-axis <240.054945> speed <120.027473>;
			wait-for-turn base around z-axis;
			turn base to z-axis <120.027473> speed <180.043956>;
			wait-for-turn base around z-axis;
			turn base to z-axis <0.000000> speed <120.027473>;
		}
	}
}

Create()
{
	hide lthrust;
	hide rthrust;
	hide flare;
	
	isFlying = 0;
	
	start-script BarrelRoll();
}

Activate()
{
	show lthrust;
	show rthrust;
	
	isFlying = 1;
	
	move tailfins to z-axis [-8] speed [6];
	move barrel to z-axis [8] speed [6];
	move base to y-axis [0] speed [6];
}

Deactivate()
{
	hide lthrust;
	hide rthrust;
	
	isFlying = 0;
	
	move tailfins to z-axis [0] speed [6];
	move barrel to z-axis [0] speed [6];
	move base to y-axis [2] speed [6];
}

AimPrimary(heading, pitch)
{
	return (1);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

FirePrimary()
{
	return (0);
}


SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;

		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;

		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;

		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;

	return corpsetype;
}
