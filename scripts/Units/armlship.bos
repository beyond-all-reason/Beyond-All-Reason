
#include "../recoil_common_includes.h"

piece  base, ground, wake1, wake2, turret, sleeve, flare, turretmis, misbox, misflare, spark_emit;
		
static-var  restore_delay;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512


#define RB_MASS 30
#define RB_LENGTH 7
#define RB_WIDTH 3
#define RB_PITCH_SPEED 100
#define RB_PITCH_ACCELERATION 20
#define RB_ROLL_ACCELERATION 8
#define RB_ROCKUNIT 5
#define RB_WAKE_PIECE wake1
#define RB_WAKE_CEG 1024 + 0
#define RB_BOWSPLASH_PIECE wake2
#define RB_BOWSPLASH_CEG 1024 + 1
#define RB_IDLE_KICK 10000

#include "../bar_ships_common.h"


Create()
{
	hide wake2;
	hide wake1;
	hide flare;
	hide ground;	
	hide spark_emit;
	restore_delay = 3000;
	start-script InitRockBoat();
	SLEEP_UNTIL_UNITFINISHED;
	start-script BoatPhysics();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn turret to y-axis <0.0> speed <180.0>;
	turn sleeve to x-axis <0.0> speed <90.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

StartMoving(reversing)
{
}

StopMoving()
{
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret to y-axis heading speed <150.0>;
	turn sleeve to x-axis RB_AIMPITCHCORRECTION(heading) - pitch speed <150.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn turretmis to y-axis heading speed <300.0>;
	turn misbox to x-axis RB_AIMPITCHCORRECTION(heading) - pitch speed <300.0>;
	wait-for-turn turretmis around y-axis;
	wait-for-turn misbox around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSparks()
{
		show spark_emit;
		sleep 150;
		hide spark_emit;
		return (1);
}

FireWeapon1()
{
	emit-sfx 1024 + 2 from flare;
	start-script FireSparks();
}

FireWeapon2()
{
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = sleeve;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = turretmis;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = misflare;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode sleeve type BITMAPONLY | BITMAP1 | NOHEATCLOUD;
		explode turret type BITMAPONLY | BITMAP1 | NOHEATCLOUD;
		explode wake2 type BITMAPONLY | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode sleeve type FALL | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	return corpsetype;
}
