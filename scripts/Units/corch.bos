
#include "../recoil_common_includes.h"

piece  ground, base, turret, nano, wake, cagelight, cagelight_emit;

static-var  terrain;
 
// Signal definitions
#define SIGNAL_MOVE 1
#define SIGNAL_BUILD 2
#define SIGNAL_IDLE 8


#define HOVER_BASE base
#define HOVER_BANKSPEED <12>
#define HOVER_ROCKBASE ground
#define HOVER_WOBBLE_PERIOD 38
#define HOVER_WOBBLE_AMPLITUDE [0.6]
#define HOVER_WAKEPIECE wake
#define HOVER_IDLE_SFX 1024 + 2
#define HOVER_WAKE_SFX_1 1024 + 0
#define HOVER_WAKE_SFX_2 1024 + 1
#include "../bar_hovercraft_common.h"

#define BASEPIECE base
#define HITSPEED <30.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 2
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"


Create()
{
	hide nano;
	hide wake;
	hide cagelight_emit;
	SLEEP_UNTIL_UNITFINISHED;
	start-script HoverCraftMotion();
}

StartBuilding(heading, pitch)
{
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	show nano;

	turn turret to y-axis heading speed <160.0>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;

	show cagelight_emit;
	spin cagelight around y-axis speed <225>;
}

StopBuilding()
{
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	hide nano;
	hide cagelight_emit;
	turn cagelight to y-axis <0> speed <-400>;

	sleep 6000;
	
	set INBUILDSTANCE to 0;
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = nano;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		
		explode turret type FALL | NOHEATCLOUD;
		explode nano type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
