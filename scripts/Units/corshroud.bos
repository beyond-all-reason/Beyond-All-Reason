


#include "../recoil_common_includes.h"

piece  base, tower, jam;

static-var  recentlyDamaged;

#define SIGNAL_TURNON 4


#include "../damagedsmoke.h"
Create()
{	
	recentlyDamaged = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script DamagedSmoke();
}

Activate()
{
	// prevent manual reactivation
	if( recentlyDamaged ) 
	{
		set ACTIVATION to 0;
		return (0);
	}
	show jam;
	spin tower around y-axis speed <60> accelerate <1>;
}

Deactivate()
{
	hide jam;
	stop-spin tower around y-axis decelerate <4>;
}

TurnOffWhileDamaged(){
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	recentlyDamaged = 1;
	set ACTIVATION to 0;

	sleep 8000;

	recentlyDamaged = 0;
	set ACTIVATION to 100;
}

HitByWeapon(anglex, anglez)
{
	start-script TurnOffWhileDamaged();
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode tower type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode tower type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode tower type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode tower type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
