#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, platform, pad0, pad1, pad2, pad3, pad4, pad5, nano;

Create()
{
	hide nano;
	hide pad5;
	hide pad4;
	hide pad3;
	hide pad2;
	hide pad1;
	hide pad0;
	spin platform around y-axis speed <10> accelerate <1>;
}

#define SMOKEPIECE base
#include "smokeunit_thread_nohit.h"

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad1 type BITMAPONLY | NOHEATCLOUD;
		explode pad2 type BITMAPONLY | NOHEATCLOUD;
		explode pad3 type BITMAPONLY | NOHEATCLOUD;
		explode pad0 type BITMAPONLY | NOHEATCLOUD;
		explode nano type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad0 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad0 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode pad2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode pad3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad0 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}


Dronedocked(arg1, dockpiece, arg2, arg3)
{
	var piece_xz;
	var piece_angle;
	var base_xz;
	
	base_xz = get PIECE_XZ(base);
	
	if(dockpiece == 4){piece_xz = get PIECE_XZ(pad0);}
	if(dockpiece == 5){piece_xz = get PIECE_XZ(pad1);}
	if(dockpiece == 6){piece_xz = get PIECE_XZ(pad2);}
	if(dockpiece == 7){piece_xz = get PIECE_XZ(pad3);}
	if(dockpiece == 8){piece_xz = get PIECE_XZ(pad4);}
	if(dockpiece == 9){piece_xz = get PIECE_XZ(pad5);}
	
	piece_angle = get XZ_ATAN(piece_xz-base_xz);
	
	arg1 = piece_angle + <180>;
	return 1234;
}
