
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, pad, nano1, nano2, nano3, nano4, head1, head2, head3, head4, cil, dish, blink, cagelight, cagelight_emit;

static-var  spray;
static-var  Stunned;



#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

// Signal definitions
#define SIGNAL_TURNON 4

DishSpin()
{
	show blink;
	spin dish around y-axis speed <60>;
}
DishStopSpin()
{
	hide blink;
	spin dish around y-axis speed <0.0>;
}

Lights()
{
	while( TRUE )
	{
	    if (!Stunned) {
		    emit-sfx 1024 + 1 from blink;
		}
		sleep 2500;
	}
}

SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
	    call-script DishStopSpin();
	} else {
	    call-script DishSpin();
	}
}

Create()
{
	hide nano1;
	hide nano2;
	hide nano3;
	hide nano4;
	hide cagelight_emit;
	hide blink;
	hide pad;
	spray = 0;
	call-script SetStunned(0);
	SLEEP_UNTIL_UNITFINISHED;
	start-script Lights();
}


QueryNanoPiece(pieceIndex)
{
	spray = (spray + 1) % 4;
	pieceIndex = nano1 + spray;
}


Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	turn head1 to y-axis <-30> speed <30>;
	turn head2 to y-axis <30> speed <30>;
	turn head3 to y-axis <30> speed <30>;
	turn head4 to y-axis <-30> speed <30>;
	
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
    sleep 5000;
	turn head1 to y-axis <0> speed <30>;
	turn head2 to y-axis <0> speed <30>;
	turn head3 to y-axis <0> speed <30>;
	turn head4 to y-axis <0> speed <30>;

	FACTORY_CLOSE_BUILD;
}

StartBuilding()
{
	show nano1;
	show nano2;
	show nano3;
	show nano4;
	show cagelight_emit;
	spin cagelight_emit around y-axis speed <175> accelerate <1>;
	spin pad around y-axis speed <30.005495> accelerate <1>;
	return (0);
}

StopBuilding()
{
	hide nano1;
	hide nano2;
	hide nano3;
	hide nano4;
	hide cagelight_emit;
	stop-spin pad around y-axis decelerate <1>;
	stop-spin cagelight_emit around y-axis decelerate <1>;
	return (0);
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		explode head4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type BITMAPONLY | NOHEATCLOUD;
		explode head3 type BITMAPONLY | NOHEATCLOUD;
		explode nano3 type BITMAPONLY | NOHEATCLOUD;
		explode head2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode head1 type BITMAPONLY | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type FALL | NOHEATCLOUD;
		explode head4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type FALL | NOHEATCLOUD;
		explode head3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FALL | NOHEATCLOUD;
		explode head2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type FALL | NOHEATCLOUD;
		explode head1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type SMOKE | FALL | NOHEATCLOUD;
		explode head4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode head1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode head1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
