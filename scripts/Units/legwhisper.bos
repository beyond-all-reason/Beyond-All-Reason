#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  chassis, bigAirJet1, bigAirJet2, light1, light2, light3, littleAirJet, radarBlink, smallLight1, wingL, wingR;


#define BASEPIECE chassis
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100
static-var maxSpeed, currentSpeed, Stunned;

Lights()
{
	if (!Stunned) {
	    emit-sfx 1024 + 0 from radarBlink;
	}
	sleep 2500;
	start-script Lights();
}

BarrelRoll() // remember to start-script BarrelRoll(); in Create()!
{
	currentSpeed = (get CURRENT_SPEED);
	maxSpeed = (get MAX_SPEED);
	
	while (TRUE){
		sleep 2000;
		currentSpeed = (get CURRENT_SPEED);
		//get PRINT(maxSpeed, currentSpeed, Static_Var_1);
		if( Rand( 1, 5 ) == 1 AND (maxSpeed < (currentSpeed+100) ) )
		{
			turn chassis to z-axis <240.054945> speed <120.027473>;
			wait-for-turn chassis around z-axis;
			turn chassis to z-axis <120.027473> speed <180.043956>;
			wait-for-turn chassis around z-axis;
			turn chassis to z-axis <0.000000> speed <120.027473>;
		}
	}
}

Create()
{
	start-script BarrelRoll();
	hide bigAirJet1;
	hide bigAirJet2;
	hide littleAirJet;
}

Activate()
{
	show bigAirJet1;
	show bigAirJet2;
	show littleAirJet;
	start-script Lights();

	move wingR to x-axis [5] speed [10];
	move wingR to z-axis [-6] speed [12];
	move wingL to x-axis [-5] speed [10];
	move wingL to z-axis [-6] speed [12];
	wait-for-move wingR along z-axis;
	move wingR to y-axis [2] speed [4];
	move wingL to y-axis [2] speed [4];



}

Deactivate()
{
	hide bigAirJet1;
	hide bigAirJet2;
	hide littleAirJet;

	move wingR to y-axis [0] speed [4];
	move wingL to y-axis [0] speed [4];
	wait-for-move wingR along y-axis;
	move wingR to x-axis [0] speed [10];
	move wingR to z-axis [0] speed [12];
	move wingL to x-axis [0] speed [10];
	move wingL to z-axis [0] speed [12];
}

SweetSpot(piecenum)
{
	piecenum = chassis;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
	corpsetype = 1 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
	corpsetype = 2 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
	corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		return corpsetype;
}
