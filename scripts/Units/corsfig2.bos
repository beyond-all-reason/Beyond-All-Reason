
#include "../recoil_common_includes.h"

piece  flare1, flare2, base, thrust, turret, sleeve, flare3, flare4;

static-var gun_1, gun_2;

// Signal definitions
#define SIGNAL_AIM1 256


#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100


#define BARRELROLLSPEEED <200>
#include "../air_barrelroll.h"


Create()
{
	hide thrust;
	hide flare2;
	hide flare1;
	gun_1 = 0;
	gun_2 = 0;
	start-script BarrelRoll();
	
}

Activate()
{
	show thrust;
}

Deactivate()
{
	hide thrust;
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;

	turn turret to x-axis 0-pitch speed <720.0>;
	turn turret to y-axis heading speed <360.0>;
	wait-for-turn turret around x-axis;
	wait-for-turn turret around y-axis;
	return (1);
}

FireWeapon1()
{
	gun_1 = !gun_1;
	sleep 100;
}

AimWeapon2(heading, pitch)
{
	return (1);
}

FireWeapon2()
{
	gun_2 = !gun_2;
	sleep 100;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare3 + gun_1;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flare1 + gun_2;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
