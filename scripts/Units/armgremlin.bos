
#include "../recoil_common_includes.h"

piece  base, blleg, bltrack, frleg, frtrack, flleg, fltrack, brleg, brtrack, rdoor, ldoor, turret, sleeve, barrel, flare;

#include "../opencloseanim.h"

static-var  isOpen, restore_delay;

// Signal definitions
#define SIGNAL_MOVE 1
#define SIGNAL_AIM1 256


Open()
{
	turn frleg   to x-axis <90>  speed <90>;
	turn frtrack to x-axis <-90> speed <90>;
	turn flleg   to x-axis <90>  speed <90>;
	turn fltrack to x-axis <-90> speed <90>;
	turn brleg   to x-axis <-90>  speed <90>;
	turn brtrack to x-axis <90> speed <90>;
	turn blleg   to x-axis <-90>  speed <90>;
	turn bltrack to x-axis <90> speed <90>;
	move barrel to z-axis [1.6] speed [1.5];
	
	turn rdoor to z-axis <-90> speed <180>;
	turn ldoor to z-axis <90> speed <180>;
	move base to y-axis [1.8] speed [3.6];
	wait-for-turn rdoor around z-axis;

	turn rdoor to z-axis <-180> speed <180>;
	turn ldoor to z-axis <180> speed <180>;
	move base to y-axis [8] speed [8];

	wait-for-turn rdoor around z-axis;
//	isOpen = TRUE;
}

Close()
{

//	isOpen = FALSE;
	move barrel to z-axis [0] speed [1.6];
	turn turret to y-axis <0> speed <360>;
	turn sleeve to x-axis <0> speed <360>;
//	wait-for-turn turret around y-axis;
	
	turn frleg   to x-axis <0>  speed <90>;
	turn frtrack to x-axis <0> speed <90>;
	turn flleg   to x-axis <0>  speed <90>;
	turn fltrack to x-axis <0> speed <90>;
	turn brleg   to x-axis <0>  speed <90>;
	turn brtrack to x-axis <0> speed <90>;
	turn blleg   to x-axis <0>  speed <90>;
	turn bltrack to x-axis <0> speed <90>;
	
	
	turn rdoor to z-axis <-90> speed <180>;
	turn ldoor to z-axis <90> speed <180>;
	move base to y-axis [1.8] speed [3.6];
	wait-for-turn rdoor around z-axis;
	turn rdoor to z-axis <0> speed <180>;
	turn ldoor to z-axis <0> speed <180>;
	move base to y-axis [0] speed [8];

	wait-for-turn rdoor around z-axis;
}

#define BASEPIECE base
#define HITSPEED <65.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100
#define RECOIL_POWER 10000
#include "../unit_hitbyweaponid_and_smoke.h"


#define TB_BASE base 
#define TB_TURNRATE <20.0> 
#define TB_TILT_X <0.15>
#define TB_BANK_Z <0.10> // Do not define this if you dont want banking
#include "../tilt_bank_mobileunit.h"


Create()
{
	hide flare;
	isOpen = 0;
	restore_delay = 6000;
	call-script TB_Init();
	SLEEP_UNTIL_UNITFINISHED;
	//start-script Movement();
}

StartMoving(reversing)
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	START_TILTBANK;
}

StopMoving()
{
  	signal SIGNAL_MOVE;
	STOP_TILTBANK;
}


static-var  Stunned;

ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.0> speed <360.0>;
	turn sleeve to x-axis <0.0> speed <360.0>;
	start-script OpenCloseAnim(0);
}

SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	start-script OpenCloseAnim(1);
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;

	while( !IsOpen )
	{
		sleep 200;
	}
	turn turret to y-axis heading speed <360.0>;
	turn sleeve to x-axis <0> - pitch speed <3600.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{	
	show flare;
	move barrel to z-axis [0.4] now;
	move barrel to z-axis [1.6] speed [3.6];
	sleep 150;
	hide flare;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode blleg type BITMAPONLY | NOHEATCLOUD;
		explode bltrack type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode blleg type FALL | NOHEATCLOUD;
		explode bltrack type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode blleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode bltrack type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode frleg type SMOKE | FALL | NOHEATCLOUD;
		explode frtrack type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode blleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode bltrack type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode frleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode frtrack type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
