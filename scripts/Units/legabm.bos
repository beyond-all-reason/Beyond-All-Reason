
#include "../recoil_common_includes.h"

piece  	base, flare, panelf, panell, panelr, flare, lpanelpivot, rpanelpivot, vent1, vent2, vent3;
		
static-var  restore_delay;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_SMOKE 512

Create()
{
	hide flare;
	hide vent1;
	hide vent2;
	hide vent3;
	
	turn panell to y-axis <-30> now;
	turn lpanelpivot to y-axis <30> now;
	turn panelr to y-axis <30> now;
	turn rpanelpivot to y-axis <-30> now;
	
	restore_delay = 12000;
	
	// Reset model
	start-script Deactivate();
}

#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

Activate()
{
	move lpanelpivot to x-axis [-8.66] speed [17.32];
	move lpanelpivot to z-axis [-5] speed [10];
	move rpanelpivot to x-axis [8.66] speed [17.32];
	move rpanelpivot to z-axis [-5] speed [10];
	move panelf to z-axis [10] speed [20];
	
	turn panelf to x-axis <60> speed <180>;
	turn lpanelpivot to z-axis <60> speed <180>;
	turn rpanelpivot to z-axis <-60> speed <180>;
	
	move panelf to y-axis [-15] speed [5];
	move lpanelpivot to y-axis [-15] speed [5];
	move rpanelpivot to y-axis [-15] speed [5];
	
	start-script RestoreAfterDelay();
}

Deactivate()
{
	move panelf to y-axis [0] speed [8];
	move lpanelpivot to y-axis [0] speed [8];
	move rpanelpivot to y-axis [0] speed [8];
	
	wait-for-move panelf along y-axis;
	
	move lpanelpivot to x-axis [0] speed [8.66];
	move lpanelpivot to z-axis [0] speed [5];
	move rpanelpivot to x-axis [0] speed [8.66];
	move rpanelpivot to z-axis [0] speed [5];
	move panelf to z-axis [0] speed [10];
	
	turn panelf to x-axis <0> speed <120>;
	turn lpanelpivot to z-axis <0> speed <120>;
	turn rpanelpivot to z-axis <0> speed <120>;
}

AimWeapon1(heading, pitch)
{	
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	call-script Activate();
	return (1);
}

FireWeapon1()
{	
	set-signal-mask SIGNAL_SMOKE;
	
	emit-sfx 257 from vent1;
	emit-sfx 257 from vent2;
	emit-sfx 257 from vent3;
	sleep(166);
	emit-sfx 257 from vent1;
	emit-sfx 257 from vent2;
	emit-sfx 257 from vent3;
	sleep(166);
	emit-sfx 257 from vent1;
	emit-sfx 257 from vent2;
	emit-sfx 257 from vent3;
	sleep(166);
	emit-sfx 257 from vent1;
	emit-sfx 257 from vent2;
	emit-sfx 257 from vent3;
	sleep(166);
	emit-sfx 257 from vent1;
	emit-sfx 257 from vent2;
	emit-sfx 257 from vent3;
	sleep(166);
	emit-sfx 257 from vent1;
	emit-sfx 257 from vent2;
	emit-sfx 257 from vent3;
}

ExecuteRestoreAfterDelay()
{
	start-script Deactivate();
}

RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode panelf type BITMAPONLY | NOHEATCLOUD;
		explode panell type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode panelf type FALL | NOHEATCLOUD;
		explode panell type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode panelf type SMOKE | FALL | NOHEATCLOUD;
		explode panell type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode panelf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode panell type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
