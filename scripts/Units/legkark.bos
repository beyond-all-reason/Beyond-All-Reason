
#include "../recoil_common_includes.h"

piece 	base, torso, lshoulder, rshoulder, lsleeve, rsleeve, lbarrel, heatraycoil, torsocoil,
		flthigh, frthigh, blthigh, brthigh, flleg, frleg, blleg, brleg, flfoot, frfoot, blfoot, brfoot,
		armorlshoulder, armorrshoulder, armorlsleeve, armortorso, armorflleg, armorfrleg, armorblleg, armorbrleg, 
		torsopivot, aimx, lflare1, lflare2, rflare;

static-var  isMoving, isAiming, restore_delay, gun_1, wpn1_lasthead, moveSpeed, tdamage, shieldup, torsoHeading, shotcount;

// signal definitions
#define SIGNAL_AIM1			2
#define SIGNAL_MOVE			4
#define SIGNAL_AIM2			8
#define SIGNAL_REPAIR		16

#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 3
#define MAXTILT 100
// For C:\Users\logst\Downloads\BAR\legkark anim.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 4, 2))

static-var animSpeed, maxSpeed, animFramesPerKeyframe;

Walk() {// For C:\Users\logst\Downloads\BAR\legkark anim.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 4, 2)) 
	set-signal-mask SIGNAL_MOVE;
	while(isMoving) {
		if (isMoving) { //Frame:10
			move base to x-axis [0.025220] speed [39.408668] / animSpeed; 
			move base to z-axis [0.008407] speed [13.325839] / animSpeed; 
			move base to y-axis [-0.193496] speed [12.566786] / animSpeed; 
			turn base to y-axis <3.314208> speed <171.578267> / animSpeed; 
			turn blfoot to x-axis <0.287883> speed <51.111999> / animSpeed; 
			turn blfoot to z-axis <-6.754895> speed <61.766651> / animSpeed; 
			turn blfoot to y-axis <6.026833> speed <115.859758> / animSpeed; 
			turn blleg to z-axis <46.591893> speed <1476.990054> / animSpeed; 
			turn blthigh to x-axis <-0.000725> speed <140.665060> / animSpeed; 
			turn blthigh to z-axis <-37.826725> speed <548.090101> / animSpeed; 
			turn blthigh to y-axis <19.466731> speed <1420.158153> / animSpeed; 
			turn brfoot to x-axis <-8.151582> speed <258.573945> / animSpeed; 
			turn brfoot to z-axis <-21.164337> speed <899.299401> / animSpeed; 
			turn brfoot to y-axis <-0.457838> speed <16.163049> / animSpeed; 
			turn brleg to z-axis <36.129566> speed <1547.182152> / animSpeed; 
			turn brthigh to x-axis <1.936255> speed <171.200132> / animSpeed; 
			turn brthigh to z-axis <-14.894409> speed <691.161365> / animSpeed; 
			turn brthigh to y-axis <-64.805586> speed <825.846813> / animSpeed; 
			turn flfoot to x-axis <-0.808804> speed <56.098599> / animSpeed; 
			turn flfoot to z-axis <-28.422193> speed <691.547843> / animSpeed; 
			turn flfoot to y-axis <-2.699505> speed <188.701510> / animSpeed; 
			turn flleg to z-axis <33.317936> speed <781.619306> / animSpeed; 
			turn flthigh to x-axis <-0.209189> speed <163.393752> / animSpeed; 
			turn flthigh to z-axis <-3.439032> speed <50.128768> / animSpeed; 
			turn flthigh to y-axis <-35.966796> speed <543.369791> / animSpeed; 
			turn frfoot to x-axis <1.899252> speed <20.813076> / animSpeed; 
			turn frfoot to z-axis <-31.363604> speed <849.012091> / animSpeed; 
			turn frfoot to y-axis <1.817666> speed <114.815015> / animSpeed; 
			turn frleg to z-axis <20.941568> speed <1754.440093> / animSpeed; 
			turn frthigh to x-axis <1.697621> speed <3.694094> / animSpeed; 
			turn frthigh to z-axis <10.549810> speed <793.563335> / animSpeed; 
			turn frthigh to y-axis <58.128270> speed <707.800653> / animSpeed; 
			turn lshoulder to z-axis <9.884431> speed <99.413190> / animSpeed; 
			turn lsleeve to y-axis <-0.881992> speed <45.661243> / animSpeed; 
			turn rshoulder to z-axis <-9.884431> speed <99.413190> / animSpeed; 
			turn rsleeve to y-axis <-0.793367> speed <41.073085> / animSpeed; 
			turn torsopivot to y-axis <-2.485658> speed <128.683927> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:15
			move base to x-axis [1.313500] speed [38.648378] / animSpeed; 
			move base to z-axis [0.427300] speed [12.566783] / animSpeed; 
			move base to y-axis [-1.060643] speed [26.014423] / animSpeed; 
			turn base to z-axis <0.024084> speed <74.909924> / animSpeed; 
			turn base to y-axis <5.703177> speed <71.669090> / animSpeed; 
			turn blfoot to x-axis <8.742383> speed <253.634986> / animSpeed; 
			turn blfoot to z-axis <-20.031758> speed <398.305884> / animSpeed; 
			turn blfoot to y-axis <1.028910> speed <149.937675> / animSpeed; 
			turn blleg to z-axis <31.978584> speed <438.399278> / animSpeed; 
			turn blthigh to x-axis <-7.292062> speed <218.740122> / animSpeed; 
			turn blthigh to z-axis <-11.461739> speed <790.949583> / animSpeed; 
			turn blthigh to y-axis <0.001186> speed <583.966336> / animSpeed; 
			turn brfoot to x-axis <-3.829998> speed <129.647535> / animSpeed; 
			turn brfoot to z-axis <8.048922> speed <876.397760> / animSpeed; 
			turn brfoot to y-axis <-5.397338> speed <148.184999> / animSpeed; 
			turn brleg to z-axis <67.310080> speed <935.415410> / animSpeed; 
			turn brthigh to x-axis <8.391794> speed <193.666170> / animSpeed; 
			turn brthigh to z-axis <-21.655234> speed <202.824756> / animSpeed; 
			turn brthigh to y-axis <-78.362904> speed <406.719528> / animSpeed; 
			turn flfoot to x-axis <-8.801873> speed <239.792070> / animSpeed; 
			turn flfoot to z-axis <-24.964097> speed <103.742872> / animSpeed; 
			turn flfoot to y-axis <-3.060232> speed <10.821818> / animSpeed; 
			turn flleg to z-axis <37.236689> speed <117.562582> / animSpeed; 
			turn flthigh to x-axis <7.974359> speed <245.506446> / animSpeed; 
			turn flthigh to z-axis <-12.053703> speed <258.440113> / animSpeed; 
			turn flthigh to y-axis <3.065890> speed <1170.980589> / animSpeed; 
			turn frfoot to x-axis <2.724330> speed <24.752343> / animSpeed; 
			turn frfoot to z-axis <-18.981010> speed <371.477801> / animSpeed; 
			turn frfoot to y-axis <2.372971> speed <16.659139> / animSpeed; 
			turn frleg to z-axis <47.874145> speed <807.977296> / animSpeed; 
			turn frthigh to x-axis <-3.874551> speed <167.165152> / animSpeed; 
			turn frthigh to z-axis <-17.702853> speed <847.579903> / animSpeed; 
			turn frthigh to y-axis <61.625990> speed <104.931582> / animSpeed; 
			turn lshoulder to z-axis <3.209974> speed <200.233717> / animSpeed; 
			turn lsleeve to y-axis <-1.517756> speed <19.072924> / animSpeed; 
			turn rshoulder to z-axis <-3.209974> speed <200.233717> / animSpeed; 
			turn rsleeve to y-axis <-1.365250> speed <17.156483> / animSpeed; 
			turn torsopivot to z-axis <-0.036128> speed <112.364915> / animSpeed; 
			turn torsopivot to y-axis <-4.277389> speed <53.751926> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:20
			move base to z-axis [-0.439848] speed [26.014423] / animSpeed; 
			move base to y-axis [-0.603984] speed [13.699780] / animSpeed; 
			turn base to z-axis <2.496880> speed <74.183876> / animSpeed; 
			turn base to y-axis <2.361266> speed <100.257324> / animSpeed; 
			turn blfoot to x-axis <1.604439> speed <214.138299> / animSpeed; 
			turn blfoot to z-axis <-14.499214> speed <165.976312> / animSpeed; 
			turn blfoot to y-axis <1.614392> speed <17.564470> / animSpeed; 
			turn blleg to z-axis <22.924721> speed <271.615894> / animSpeed; 
			turn blthigh to x-axis <-4.621681> speed <80.111434> / animSpeed; 
			turn blthigh to z-axis <-10.400280> speed <31.843751> / animSpeed; 
			turn blthigh to y-axis <29.023567> speed <870.671433> / animSpeed; 
			turn brfoot to x-axis <1.958118> speed <173.643479> / animSpeed; 
			turn brfoot to z-axis <13.181518> speed <153.977881> / animSpeed; 
			turn brfoot to y-axis <-1.808234> speed <107.673111> / animSpeed; 
			turn brleg to z-axis <23.722608> speed <1307.624161> / animSpeed; 
			turn brthigh to x-axis <5.587306> speed <84.134654> / animSpeed; 
			turn brthigh to z-axis <9.501847> speed <934.712430> / animSpeed; 
			turn brthigh to y-axis <-70.398220> speed <238.940508> / animSpeed; 
			turn flfoot to x-axis <1.358054> speed <304.797800> / animSpeed; 
			turn flfoot to z-axis <1.042584> speed <780.200449> / animSpeed; 
			turn flfoot to y-axis <2.663401> speed <171.708996> / animSpeed; 
			turn flleg to z-axis <41.330475> speed <122.813597> / animSpeed; 
			turn flthigh to x-axis <0.821861> speed <214.574958> / animSpeed; 
			turn flthigh to z-axis <-39.250549> speed <815.905404> / animSpeed; 
			turn flthigh to y-axis <-24.708745> speed <833.239073> / animSpeed; 
			turn frfoot to z-axis <-3.057465> speed <477.706346> / animSpeed; 
			turn frfoot to y-axis <-2.026409> speed <131.981391> / animSpeed; 
			turn frleg to z-axis <5.445056> speed <1272.872658> / animSpeed; 
			turn frthigh to x-axis <-6.682300> speed <84.232458> / animSpeed; 
			turn frthigh to z-axis <-2.197972> speed <465.146435> / animSpeed; 
			turn frthigh to y-axis <58.865555> speed <82.813038> / animSpeed; 
			turn lshoulder to z-axis <12.835100> speed <288.753788> / animSpeed; 
			turn lsleeve to y-axis <-0.628391> speed <26.680950> / animSpeed; 
			turn rshoulder to z-axis <-12.835100> speed <288.753788> / animSpeed; 
			turn rsleeve to y-axis <-0.565250> speed <24.000017> / animSpeed; 
			turn torsopivot to z-axis <-3.745321> speed <111.275798> / animSpeed; 
			turn torsopivot to y-axis <-1.770952> speed <75.193112> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:25
			move base to x-axis [-0.037829] speed [39.591825] / animSpeed; 
			move base to z-axis [0.016812] speed [13.699788] / animSpeed; 
			move base to y-axis [-0.197922] speed [12.181864] / animSpeed; 
			turn base to y-axis <-3.353382> speed <171.439443> / animSpeed; 
			turn blfoot to x-axis <-6.817576> speed <252.660457> / animSpeed; 
			turn blfoot to z-axis <7.482568> speed <659.453467> / animSpeed; 
			turn blfoot to y-axis <-4.332972> speed <178.420922> / animSpeed; 
			turn blleg to z-axis <-13.374361> speed <1088.972440> / animSpeed; 
			turn blthigh to x-axis <1.179567> speed <174.037423> / animSpeed; 
			turn blthigh to z-axis <5.098641> speed <464.967629> / animSpeed; 
			turn blthigh to y-axis <60.740278> speed <951.501325> / animSpeed; 
			turn brfoot to x-axis <1.527127> speed <12.929740> / animSpeed; 
			turn brfoot to z-axis <3.736551> speed <283.349010> / animSpeed; 
			turn brfoot to y-axis <-7.482225> speed <170.219735> / animSpeed; 
			turn brleg to z-axis <-41.098201> speed <1944.624269> / animSpeed; 
			turn brthigh to x-axis <0.165724> speed <162.647446> / animSpeed; 
			turn brthigh to z-axis <35.995370> speed <794.805703> / animSpeed; 
			turn brthigh to y-axis <-31.033665> speed <1180.936668> / animSpeed; 
			turn flfoot to x-axis <1.715019> speed <10.708937> / animSpeed; 
			turn flfoot to z-axis <23.071950> speed <660.880980> / animSpeed; 
			turn flfoot to y-axis <-0.936149> speed <107.986514> / animSpeed; 
			turn flleg to z-axis <-4.634683> speed <1378.954759> / animSpeed; 
			turn flthigh to x-axis <2.098519> speed <38.299754> / animSpeed; 
			turn flthigh to z-axis <-18.878508> speed <611.161246> / animSpeed; 
			turn flthigh to y-axis <-53.791322> speed <872.477300> / animSpeed; 
			turn frfoot to x-axis <0.894216> speed <54.172364> / animSpeed; 
			turn frfoot to z-axis <23.657284> speed <801.442483> / animSpeed; 
			turn frfoot to y-axis <2.639885> speed <139.988810> / animSpeed; 
			turn frleg to z-axis <-28.371166> speed <1014.486678> / animSpeed; 
			turn frthigh to x-axis <-2.163676> speed <135.558711> / animSpeed; 
			turn frthigh to z-axis <3.665889> speed <175.915825> / animSpeed; 
			turn frthigh to y-axis <44.783792> speed <422.452903> / animSpeed; 
			turn lshoulder to z-axis <10.508868> speed <69.786980> / animSpeed; 
			turn lsleeve to y-axis <0.892419> speed <45.624301> / animSpeed; 
			turn rshoulder to z-axis <-10.508868> speed <69.786980> / animSpeed; 
			turn rsleeve to y-axis <0.802747> speed <41.039903> / animSpeed; 
			turn torsopivot to y-axis <2.515043> speed <128.579832> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			move base to x-axis [-1.319544] speed [38.451445] / animSpeed; 
			move base to z-axis [0.422874] speed [12.181861] / animSpeed; 
			move base to y-axis [-1.064579] speed [25.999718] / animSpeed; 
			turn base to z-axis <-0.048168> speed <75.264970> / animSpeed; 
			turn base to y-axis <-5.698356> speed <70.349228> / animSpeed; 
			turn blfoot to x-axis <-3.592476> speed <96.752989> / animSpeed; 
			turn blfoot to z-axis <4.642244> speed <85.209705> / animSpeed; 
			turn blfoot to y-axis <4.491722> speed <264.740809> / animSpeed; 
			turn blleg to z-axis <-59.374363> speed <1380.000073> / animSpeed; 
			turn blthigh to x-axis <7.824688> speed <199.353634> / animSpeed; 
			turn blthigh to z-axis <16.033483> speed <328.045277> / animSpeed; 
			turn blthigh to y-axis <76.246898> speed <465.198584> / animSpeed; 
			turn brfoot to x-axis <5.167447> speed <109.209596> / animSpeed; 
			turn brfoot to z-axis <20.176594> speed <493.201288> / animSpeed; 
			turn brfoot to y-axis <-2.158194> speed <159.720939> / animSpeed; 
			turn brleg to z-axis <-31.675405> speed <282.683874> / animSpeed; 
			turn brthigh to x-axis <-5.353968> speed <165.590763> / animSpeed; 
			turn brthigh to z-axis <11.582485> speed <732.386568> / animSpeed; 
			turn brthigh to y-axis <-10.777297> speed <607.691015> / animSpeed; 
			turn flfoot to x-axis <2.946788> speed <36.953090> / animSpeed; 
			turn flfoot to z-axis <26.406753> speed <100.044069> / animSpeed; 
			turn flfoot to y-axis <-1.641211> speed <21.151856> / animSpeed; 
			turn flleg to z-axis <-40.800941> speed <1084.987729> / animSpeed; 
			turn flthigh to x-axis <-3.169018> speed <158.026113> / animSpeed; 
			turn flthigh to z-axis <14.238825> speed <993.520000> / animSpeed; 
			turn flthigh to y-axis <-58.632448> speed <145.233762> / animSpeed; 
			turn frfoot to x-axis <-5.131538> speed <180.772611> / animSpeed; 
			turn frfoot to z-axis <28.550356> speed <146.792172> / animSpeed; 
			turn frfoot to y-axis <3.688442> speed <31.456722> / animSpeed; 
			turn frleg to z-axis <-40.851901> speed <374.422040> / animSpeed; 
			turn frthigh to x-axis <5.901373> speed <241.951462> / animSpeed; 
			turn frthigh to z-axis <12.475922> speed <264.300992> / animSpeed; 
			turn frthigh to y-axis <7.140637> speed <1129.294637> / animSpeed; 
			turn lshoulder to z-axis <3.081701> speed <222.814995> / animSpeed; 
			turn lsleeve to y-axis <1.516475> speed <18.721681> / animSpeed; 
			turn rshoulder to z-axis <-3.081701> speed <222.814995> / animSpeed; 
			turn rsleeve to y-axis <1.364097> speed <16.840490> / animSpeed; 
			turn torsopivot to z-axis <0.072250> speed <112.897525> / animSpeed; 
			turn torsopivot to y-axis <4.273777> speed <52.762020> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:5
			move base to z-axis [-0.435788] speed [26.021776] / animSpeed; 
			move base to y-axis [-0.612389] speed [13.325844] / animSpeed; 
			turn base to z-axis <-2.484985> speed <74.549532> / animSpeed; 
			turn base to y-axis <-2.405068> speed <99.075736> / animSpeed; 
			turn blfoot to x-axis <1.991616> speed <282.901195> / animSpeed; 
			turn blfoot to z-axis <-8.813784> speed <358.511204> / animSpeed; 
			turn blfoot to y-axis <2.164841> speed <36.550476> / animSpeed; 
			turn blleg to z-axis <-2.641109> speed <1697.960373> / animSpeed; 
			turn blthigh to x-axis <4.688111> speed <126.836933> / animSpeed; 
			turn blthigh to z-axis <-19.557055> speed <1068.784057> / animSpeed; 
			turn blthigh to y-axis <66.805336> speed <271.564770> / animSpeed; 
			turn brfoot to x-axis <0.467549> speed <100.079085> / animSpeed; 
			turn brfoot to z-axis <8.812310> speed <412.831967> / animSpeed; 
			turn brfoot to y-axis <-0.996606> speed <390.337096> / animSpeed; 
			turn brleg to z-axis <-15.443172> speed <487.470550> / animSpeed; 
			turn brthigh to x-axis <-3.770416> speed <104.697054> / animSpeed; 
			turn brthigh to z-axis <8.144303> speed <96.388244> / animSpeed; 
			turn brthigh to y-axis <-37.277359> speed <763.364234> / animSpeed; 
			turn flfoot to x-axis <1.061150> speed <84.399370> / animSpeed; 
			turn flfoot to z-axis <-5.370598> speed <949.356526> / animSpeed; 
			turn flfoot to y-axis <3.590545> speed <143.642134> / animSpeed; 
			turn flleg to z-axis <7.263959> speed <1440.191781> / animSpeed; 
			turn flthigh to x-axis <-5.655647> speed <70.718647> / animSpeed; 
			turn flthigh to z-axis <-1.768073> speed <479.840461> / animSpeed; 
			turn flthigh to y-axis <-54.079122> speed <132.911861> / animSpeed; 
			turn frfoot to x-axis <1.205482> speed <422.770795> / animSpeed; 
			turn frfoot to z-axis <-3.063201> speed <899.673533> / animSpeed; 
			turn frfoot to y-axis <-2.009501> speed <11.992322> / animSpeed; 
			turn frleg to z-axis <-37.539768> speed <100.309012> / animSpeed; 
			turn frthigh to x-axis <1.820757> speed <101.558956> / animSpeed; 
			turn frthigh to z-axis <37.001921> speed <738.571006> / animSpeed; 
			turn frthigh to y-axis <34.534915> speed <834.748133> / animSpeed; 
			turn lshoulder to z-axis <13.198204> speed <294.338114> / animSpeed; 
			turn lsleeve to y-axis <0.640050> speed <26.366505> / animSpeed; 
			turn rshoulder to z-axis <-13.198204> speed <294.338114> / animSpeed; 
			turn rsleeve to y-axis <0.575735> speed <23.717177> / animSpeed; 
			turn torsopivot to z-axis <3.727476> speed <111.824314> / animSpeed; 
			turn torsopivot to y-axis <1.803806> speed <74.306924> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	animSpeed = 10; // tune restore speed here, higher values are slower restore speeds
	move base to x-axis [0] speed [79.183650] / animSpeed;
	move base to y-axis [-0.5] speed [52.028847] / animSpeed;
	move base to z-axis [0] speed [52.043552] / animSpeed;
	turn base to y-axis <0> speed <343.156533> / animSpeed;
	turn base to z-axis <0> speed <150.529940> / animSpeed;
	turn blfoot to x-axis <0> speed <565.802391> / animSpeed;
	turn blfoot to y-axis <0> speed <529.481618> / animSpeed;
	turn blfoot to z-axis <0> speed <1318.906933> / animSpeed;
	turn blleg to z-axis <0> speed <3395.920746> / animSpeed;
	turn blthigh to x-axis <0> speed <437.480244> / animSpeed;
	turn blthigh to y-axis <50> speed <2840.316305> / animSpeed;
	turn blthigh to z-axis <0> speed <2137.568114> / animSpeed;
	turn brfoot to x-axis <0> speed <517.147890> / animSpeed;
	turn brfoot to y-axis <0> speed <780.674191> / animSpeed;
	turn brfoot to z-axis <0> speed <1798.598803> / animSpeed;
	turn brleg to z-axis <0> speed <3889.248537> / animSpeed;
	turn brthigh to x-axis <0> speed <387.332340> / animSpeed;
	turn brthigh to y-axis <-50> speed <2361.873336> / animSpeed;
	turn brthigh to z-axis <0> speed <1869.424859> / animSpeed;
	turn flfoot to x-axis <0> speed <609.595600> / animSpeed;
	turn flfoot to y-axis <0> speed <377.403020> / animSpeed;
	turn flfoot to z-axis <0> speed <1898.713052> / animSpeed;
	turn flleg to z-axis <0> speed <2880.383561> / animSpeed;
	turn flthigh to x-axis <0> speed <491.012893> / animSpeed;
	turn flthigh to y-axis <-50> speed <2341.961179> / animSpeed;
	turn flthigh to z-axis <0> speed <1987.039999> / animSpeed;
	turn frfoot to x-axis <0> speed <845.541591> / animSpeed;
	turn frfoot to y-axis <0> speed <279.977620> / animSpeed;
	turn frfoot to z-axis <0> speed <1799.347067> / animSpeed;
	turn frleg to z-axis <0> speed <3508.880186> / animSpeed;
	turn frthigh to x-axis <0> speed <483.902924> / animSpeed;
	turn frthigh to y-axis <50> speed <2258.589273> / animSpeed;
	turn frthigh to z-axis <0> speed <1695.159805> / animSpeed;
	turn lshoulder to z-axis <20> speed <905.655985> / animSpeed;
	turn lsleeve to y-axis <0> speed <91.322486> / animSpeed;
	turn rshoulder to z-axis <-20> speed <452.827865> / animSpeed;
	turn rsleeve to y-axis <0> speed <82.146170> / animSpeed;
	turn torsopivot to y-axis <0> speed <257.367854> / animSpeed;
	turn torsopivot to z-axis <0> speed <225.795051> / animSpeed;
}

// REMEMBER TO animspeed = 5 in Create() !!
UnitSpeed()
{
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 5; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE)
	{
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 5) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>10) animSpeed = 10;
		sleep 164;
	}
}

StartMoving()
{
	signal SIGNAL_MOVE;
	isMoving=TRUE;
	start-script Walk();
}

StopMoving()
{
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}

HitByWeapon(anglex, anglez, damage)	// angle[x|z] is always [-500;500], damage is multiplied by 100
{
	var amount;//, speedz, speedx;
	amount = damage / (100 * UNITSIZE);
	if (amount < 3  ) return (0);
	if (amount > MAXTILT) amount = MAXTILT;
	//get PRINT(anglex, anglez, amount, damage);
	//speedz = HITSPEED * get ABS(anglez) / 500; //nevermind this, the random error this produces actually looks better than the accurate version
	turn BASEPIECE to z-axis (anglez * amount) / 100  speed HITSPEED;
	turn BASEPIECE to x-axis <0> - (anglex * amount) /100 speed HITSPEED;
	wait-for-turn BASEPIECE around z-axis;
	wait-for-turn BASEPIECE around x-axis;
	turn BASEPIECE to z-axis <0.000000> speed HITSPEED / 4;
	turn BASEPIECE to x-axis <0.000000> speed HITSPEED / 4;
}

// Disable armored state when 1500 damage is taken
HitByWeaponId(anglex, anglez, weaponid, dmg) //weaponID is always 0,lasers and flamers give angles of 0
{
	start-script HitByWeapon(dmg, anglez,anglex); //I dont know why param order must be switched, and this also runs a frame later :(
	tdamage = dmg + tdamage;
	if ((tdamage > 30000) AND (shieldup == 1))
	{
		// Start Animation: Break Shield; Only explode 2 pieces to reduce clutter
		explode armortorso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode armorlsleeve type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		hide armortorso;
		hide armorflleg;
		hide armorfrleg;
		hide armorrshoulder;
		hide armorlsleeve;
		// End Animation
		
		set ARMORED to 0;
		shieldup = 0;
		start-script repairShield();
	}
	return (100); //return damage percent
}

// Restore this units hume shield after 15000ms / 15 seconds, restore armored state
repairShield()
{
	set-signal-mask SIGNAL_REPAIR;
	sleep 11000;
	
	// Start Animation: 5 second countdown
	show armorflleg;
	emit-sfx 1024 + 1 from armorflleg;
	sleep 1000;
	
	show armorfrleg;
	emit-sfx 1024 + 1 from armorfrleg;
	sleep 1000;
	
	show armorrshoulder;
	emit-sfx 1024 + 1 from armorrshoulder;
	sleep 1000;
	
	show armorlsleeve;
	emit-sfx 1024 + 1 from armorlsleeve;
	sleep 1000;
	
	show armortorso;
	emit-sfx 1024 + 1 from armortorso;
	// End Animation
	
	// Reset shield status 
	shieldup = 1;
	set ARMORED to 1;
	tdamage = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	// hide rflare; // dont hide this; used for lights
	hide lflare1;
	hide lflare2;
	hide aimx;
	hide torsopivot;
	
	
	moveSpeed = (get MAX_SPEED);
	isMoving = FALSE;
	isAiming = FALSE;
	
	restore_delay = 6000;
	
	torsoHeading = 0;
	gun_1 = 0;
	tdamage = 0;
	shieldup = 1;
	set ARMORED to 1;
	animSpeed = 5;
	shotcount = 0;
	
	turn blthigh to y-axis <50> now;
	turn brthigh to y-axis <-50> now;
	turn flthigh to y-axis <-50> now;
	turn frthigh to y-axis <50> now;
	turn lshoulder to z-axis <20> now;
	turn rshoulder to z-axis <-20> now;
	
	start-script SmokeUnit();
	start-script UnitSpeed();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = 10000;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn torso to y-axis <0.0> speed <90.0>;
	turn aimx to x-axis <0.0> speed <45.0>;
	turn rshoulder to y-axis <0.0> speed <90>;
	turn lshoulder to y-axis <0.0> speed <90>;
	turn lsleeve to y-axis <0.0> speed <90>;
	
	wait-for-turn torso around y-axis;
	wpn1_lasthead = 1000000;
	torsoHeading = 0;
	isAiming = FALSE;
}

SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}

RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimFromWeapon1(piecenum)
{
	piecenum = aimx;
}

QueryWeapon1(piecenum)
{
	piecenum = rflare;
}

// Heatray

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	isAiming = TRUE;
	
	turn rshoulder to y-axis <5> speed <25>;
	
	torsoHeading = heading;
	
	turn torso to y-axis heading speed <200.000000>;
	turn aimx to x-axis <0.000000> - pitch speed <200.000000>;
	
	if (((get ABS(wpn1_lasthead - heading)) > 65536) OR(((get ABS(wpn1_lasthead - heading)) > 1300) AND ((get ABS(wpn1_lasthead - heading)) < 64236)))
	{
		wpn1_lasthead = 1000000;
		wait-for-turn torso around y-axis;
		wait-for-turn aimx around x-axis;
	}
	start-script RestoreAfterDelay();
	wpn1_lasthead = heading;
	return (1);
}

FireWeapon1()
{
	++shotcount;
	call-script lua_UnitScriptLight(1, shotcount);
}

lua_UnitScriptLight(lightIndex, count)
{
	return 0;
}

// Shotgun

AimFromWeapon2(piecenum)
{
	piecenum = lsleeve;
}

QueryWeapon2(piecenum)
{
	piecenum = lflare1 + gun_1;
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	isAiming = TRUE;
	
	// Restrict secondary weapons firing angles relative to the primary weapons heading
	if (heading-torsoHeading < 12000 AND heading-torsoHeading > -6000)
	{
		turn lshoulder to y-axis (heading-torsoHeading)/2 speed <90>;
		turn lsleeve to y-axis (heading-torsoHeading)/2 speed <90>;
		
		return (1);
	}
	else
	{
		turn lshoulder to y-axis <0.0> speed <90>;
		turn lsleeve to y-axis <0.0> speed <90>;
	}
}

FireWeapon2()
{
	if(gun_1)
	{
		emit-sfx 1024 + 0 from lflare1;
	}
	else
	{
		emit-sfx 1024 + 0 from lflare2;
	}
	move lbarrel to z-axis [-6] now;
	move lbarrel to z-axis [0] speed [3];
	
	gun_1 = !gun_1;
	
}

//use call-script DeathAnim(); from Killed()
DeathAnim() {// For C:\Users\logst\Downloads\BAR\legkark anim.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 4, 2)) 
	signal SIGNAL_MOVE;
	signal SIGNAL_AIM1;
	signal SIGNAL_AIM2;
	signal SIGNAL_REPAIR;
	
	call-script StopWalking();
	turn torso to y-axis <0> speed <120>;
	turn aimx to x-axis <0> speed <120>;
		if (TRUE) { //Frame:5
			move base to z-axis [-11.641865] speed [71.176970] ; 
			move base to y-axis [1.239842] speed [10.108039] ; 
			turn base to x-axis <-6.770442> speed <40.622650> ; 
			turn blfoot to x-axis <1.712365> speed <20.143948> ; 
			turn blfoot to z-axis <-12.794368> speed <10.742201> ; 
			turn blfoot to y-axis <-1.370913> speed <32.939175> ; 
			turn blleg to x-axis <-5.785328> speed <34.712027> ; 
			turn blleg to z-axis <-3.079085> speed <142.916780> ; 
			turn blleg to y-axis <-1.745074> speed <10.470436> ; 
			turn blthigh to x-axis <10.128146> speed <43.893416> ; 
			turn blthigh to z-axis <2.736050> speed <38.951590> ; 
			turn blthigh to y-axis <58.154635> speed <61.708471> ; 
			turn brfoot to x-axis <-2.723130> speed <1.541842> ; 
			turn brfoot to z-axis <-17.556631> speed <86.269690> ; 
			turn brfoot to y-axis <0.909766> speed <10.145189> ; 
			turn brleg to x-axis <-0.203568> speed <1.221397> ; 
			turn brleg to z-axis <35.840062> speed <195.063438> ; 
			turn brthigh to x-axis <2.248306> speed <22.416323> ; 
			turn brthigh to z-axis <-11.217069> speed <74.592083> ; 
			turn brthigh to y-axis <-55.593563> speed <43.829508> ; 
			turn flfoot to z-axis <-17.539957> speed <17.692324> ; 
			turn flleg to z-axis <20.159715> speed <14.844996> ; 
			turn flthigh to x-axis <2.889351> speed <38.198489> ; 
			turn flthigh to z-axis <-11.295967> speed <53.157058> ; 
			turn flthigh to y-axis <-78.097421> speed <168.584525> ; 
			turn frfoot to z-axis <-13.663795> speed <4.317404> ; 
			turn frleg to x-axis <-1.565623> speed <9.393719> ; 
			turn frleg to z-axis <-3.729375> speed <62.507152> ; 
			turn frleg to y-axis <0.826128> speed <4.956730> ; 
			turn frthigh to x-axis <1.509983> speed <1.295814> ; 
			turn frthigh to z-axis <20.411660> speed <71.653097> ; 
			turn frthigh to y-axis <41.661979> speed <54.748686> ; 
			turn lshoulder to x-axis <-6.139439> speed <36.836633> ; 
			turn lshoulder to z-axis <11.764640> speed <0.648332> ; 
			turn lshoulder to y-axis <8.709331> speed <52.255988> ; 
			turn lsleeve to x-axis <-4.227365> speed <25.364190> ; 
			turn lsleeve to z-axis <-0.136980> speed <0.821882> ; 
			turn lsleeve to y-axis <3.892118> speed <23.165313> ; 
			turn rshoulder to x-axis <-13.154072> speed <78.924431> ; 
			turn rshoulder to z-axis <-7.865947> speed <24.040487> ; 
			turn rshoulder to y-axis <-15.872516> speed <95.235097> ; 
			turn rsleeve to x-axis <-0.187218> speed <1.123306> ; 
			turn rsleeve to z-axis <2.689121> speed <16.134729> ; 
			turn rsleeve to y-axis <-5.779129> speed <34.843340> ; 
			turn torso to x-axis <-4.517908> speed <27.107446> ; 
			turn torso to z-axis <0.702218> speed <18.108093> ; 
			turn torso to y-axis <10.959879> speed <65.231149> ; 
		sleep 164;
		}
		if (TRUE) { //Frame:10
			move base to z-axis [-13.976490] speed [14.007751] ; 
			move base to y-axis [3.664019] speed [14.545062] ; 
			turn base to x-axis <-14.323427> speed <45.317910> ; 
			turn blfoot to x-axis <-9.031909> speed <64.465645> ; 
			turn blfoot to z-axis <8.438265> speed <127.395800> ; 
			turn blfoot to y-axis <2.924154> speed <25.770401> ; 
			turn blleg to x-axis <15.054804> speed <125.040791> ; 
			turn blleg to z-axis <-34.151595> speed <186.435057> ; 
			turn blleg to y-axis <2.952571> speed <28.185865> ; 
			turn blthigh to x-axis <-0.157732> speed <61.715270> ; 
			turn blthigh to z-axis <14.005238> speed <67.615128> ; 
			turn brfoot to x-axis <-3.132669> speed <2.457235> ; 
			turn brfoot to z-axis <-18.436916> speed <5.281710> ; 
			turn brfoot to y-axis <5.519242> speed <27.656854> ; 
			turn brleg to x-axis <-0.407135> speed <1.221397> ; 
			turn brleg to z-axis <61.131798> speed <151.750418> ; 
			turn brthigh to x-axis <6.219244> speed <23.825625> ; 
			turn brthigh to z-axis <-23.156039> speed <71.633820> ; 
			turn brthigh to y-axis <-61.992108> speed <38.391271> ; 
			turn flfoot to z-axis <-10.193015> speed <44.081650> ; 
			turn flleg to z-axis <22.633883> speed <14.845006> ; 
			turn flthigh to x-axis <7.107266> speed <25.307488> ; 
			turn flthigh to z-axis <-13.961766> speed <15.994794> ; 
			turn flthigh to y-axis <-63.719060> speed <86.270166> ; 
			turn frfoot to z-axis <1.077559> speed <88.448124> ; 
			turn frleg to x-axis <-0.170177> speed <8.372677> ; 
			turn frleg to z-axis <32.391489> speed <216.725188> ; 
			turn frleg to y-axis <-1.382282> speed <13.250461> ; 
			turn frthigh to z-axis <15.327926> speed <30.502402> ; 
			turn frthigh to y-axis <33.186349> speed <50.853777> ; 
			turn lshoulder to x-axis <-8.139875> speed <12.002619> ; 
			turn lshoulder to z-axis <14.269895> speed <15.031532> ; 
			turn lshoulder to y-axis <11.788070> speed <18.472431> ; 
			turn lsleeve to x-axis <-5.164105> speed <5.620437> ; 
			turn lsleeve to z-axis <8.626470> speed <52.580702> ; 
			turn lsleeve to y-axis <11.098094> speed <43.235856> ; 
			turn rshoulder to x-axis <-7.006992> speed <36.882479> ; 
			turn rshoulder to z-axis <14.006095> speed <131.232255> ; 
			turn rshoulder to y-axis <-4.503466> speed <68.214298> ; 
			turn rsleeve to x-axis <2.090242> speed <13.664760> ; 
			turn rsleeve to z-axis <8.051770> speed <32.175892> ; 
			turn rsleeve to y-axis <-10.909673> speed <30.783266> ; 
			turn torso to x-axis <-15.217264> speed <64.196136> ; 
			turn torso to z-axis <-8.347971> speed <54.301134> ; 
			turn torso to y-axis <7.000264> speed <23.757686> ; 
		sleep 164;
		}
		if (TRUE) { //Frame:15
			move base to z-axis [-15.801824] speed [10.952002] ; 
			move base to y-axis [0.511539] speed [18.914879] ; 
			turn base to x-axis <4.400031> speed <112.340745> ; 
			turn blfoot to x-axis <-1.744115> speed <43.726765> ; 
			turn blfoot to z-axis <1.905093> speed <39.199035> ; 
			turn blfoot to y-axis <-2.322562> speed <31.480297> ; 
			turn blleg to x-axis <10.605427> speed <26.696264> ; 
			turn blleg to z-axis <-17.072024> speed <102.477426> ; 
			turn blleg to y-axis <2.004941> speed <5.685779> ; 
			turn blthigh to x-axis <-8.309856> speed <48.912740> ; 
			turn blthigh to z-axis <17.650527> speed <21.871734> ; 
			turn blthigh to y-axis <66.010445> speed <46.571822> ; 
			turn brfoot to x-axis <-2.920720> speed <1.271696> ; 
			turn brfoot to z-axis <-10.763780> speed <46.038817> ; 
			turn brfoot to y-axis <4.567487> speed <5.710529> ; 
			turn brleg to x-axis <-0.610701> speed <1.221396> ; 
			turn brleg to z-axis <35.097012> speed <156.208714> ; 
			turn brthigh to x-axis <-1.202243> speed <44.528921> ; 
			turn brthigh to z-axis <-23.580776> speed <2.548422> ; 
			turn brthigh to y-axis <-63.432131> speed <8.640135> ; 
			turn flfoot to z-axis <-20.676728> speed <62.902277> ; 
			turn flleg to z-axis <25.108049> speed <14.844996> ; 
			turn flthigh to x-axis <-4.070886> speed <67.068911> ; 
			turn flthigh to z-axis <-5.572030> speed <50.338411> ; 
			turn flthigh to y-axis <-54.784176> speed <53.609308> ; 
			turn frfoot to z-axis <-18.174840> speed <115.514392> ; 
			turn frleg to x-axis <-0.346162> speed <1.055914> ; 
			turn frleg to z-axis <20.114642> speed <73.661080> ; 
			turn frleg to y-axis <-2.727774> speed <8.072956> ; 
			turn frthigh to z-axis <21.372575> speed <36.267895> ; 
			turn frthigh to y-axis <27.899088> speed <31.723568> ; 
			turn lshoulder to x-axis <-7.022377> speed <6.704993> ; 
			turn lshoulder to z-axis <-2.233372> speed <99.019605> ; 
			turn lshoulder to y-axis <2.171498> speed <57.699429> ; 
			turn lsleeve to x-axis <-5.306992> speed <0.857323> ; 
			turn lsleeve to z-axis <-11.812322> speed <122.632753> ; 
			turn lsleeve to y-axis <-1.321808> speed <74.519417> ; 
			turn rshoulder to x-axis <-5.411550> speed <9.572650> ; 
			turn rshoulder to z-axis <9.247169> speed <28.553555> ; 
			turn rshoulder to y-axis <-2.698881> speed <10.827512> ; 
			turn rsleeve to x-axis <-0.786444> speed <17.260117> ; 
			turn rsleeve to z-axis <14.684085> speed <39.793891> ; 
			turn rsleeve to y-axis <-4.756094> speed <36.921477> ; 
			turn torso to x-axis <-21.362836> speed <36.873432> ; 
			turn torso to z-axis <1.975577> speed <61.941287> ; 
			turn torso to y-axis <-1.229025> speed <49.375738> ; 
		sleep 164;
		}
		if (TRUE) { //Frame:20
			move base to z-axis [-16.969667] speed [7.007063] ; 
			move base to y-axis [-4.845661] speed [32.143197] ; 
			turn base to x-axis <14.052523> speed <57.914950> ; 
			turn blfoot to x-axis <-6.295615> speed <27.309002> ; 
			turn blfoot to z-axis <10.250336> speed <50.071463> ; 
			turn blfoot to y-axis <-2.624930> speed <1.814205> ; 
			turn blleg to x-axis <6.156049> speed <26.696264> ; 
			turn blleg to z-axis <-3.197510> speed <83.247085> ; 
			turn blleg to y-axis <1.057311> speed <5.685778> ; 
			turn blthigh to x-axis <-2.696033> speed <33.682934> ; 
			turn blthigh to z-axis <4.315837> speed <80.008138> ; 
			turn brfoot to x-axis <-2.008432> speed <5.473725> ; 
			turn brfoot to z-axis <-16.495112> speed <34.387993> ; 
			turn brfoot to y-axis <6.443165> speed <11.254073> ; 
			turn brleg to x-axis <-0.407135> speed <1.221397> ; 
			turn brleg to z-axis <13.974399> speed <126.735681> ; 
			turn brthigh to x-axis <-6.818001> speed <33.694546> ; 
			turn brthigh to z-axis <-7.568966> speed <96.070856> ; 
			turn brthigh to y-axis <-68.124723> speed <28.155556> ; 
			turn flfoot to z-axis <11.654785> speed <193.989079> ; 
			turn flleg to z-axis <22.633883> speed <14.844996> ; 
			turn flthigh to x-axis <-11.566808> speed <44.975528> ; 
			turn flthigh to z-axis <-44.074435> speed <231.014431> ; 
			turn flthigh to y-axis <-49.722800> speed <30.368250> ; 
			turn frfoot to x-axis <-6.130412> speed <45.680341> ; 
			turn frfoot to z-axis <-30.919515> speed <76.468052> ; 
			turn frfoot to y-axis <-5.266453> speed <28.726858> ; 
			turn frleg to x-axis <-0.230776> speed <0.692320> ; 
			turn frleg to z-axis <12.545212> speed <45.416585> ; 
			turn frleg to y-axis <-1.818514> speed <5.455560> ; 
			turn frthigh to x-axis <0.119411> speed <7.934749> ; 
			turn frthigh to z-axis <26.422203> speed <30.297763> ; 
			turn frthigh to y-axis <24.939912> speed <17.755056> ; 
			turn lshoulder to x-axis <-3.519076> speed <21.019802> ; 
			turn lshoulder to z-axis <-7.300171> speed <30.400792> ; 
			turn lshoulder to y-axis <0.065647> speed <12.635108> ; 
			turn lsleeve to x-axis <-1.341405> speed <23.793519> ; 
			turn lsleeve to z-axis <-7.461825> speed <26.102980> ; 
			turn lsleeve to y-axis <-1.618421> speed <1.779678> ; 
			turn rshoulder to x-axis <-4.796873> speed <3.688064> ; 
			turn rshoulder to z-axis <9.905840> speed <3.952021> ; 
			turn rshoulder to y-axis <-0.694916> speed <12.023790> ; 
			turn rsleeve to x-axis <5.696429> speed <38.897240> ; 
			turn rsleeve to z-axis <9.999265> speed <28.108925> ; 
			turn rsleeve to y-axis <3.414856> speed <49.025697> ; 
			turn torso to x-axis <-18.407186> speed <17.733900> ; 
			turn torso to y-axis <-6.875808> speed <33.880698> ; 
		sleep 164;
		}
		if (TRUE) { //Frame:25
			move base to z-axis [-16.630020] speed [2.037884] ; 
			move base to y-axis [-4.153296] speed [4.154188] ; 
			turn base to x-axis <2.327376> speed <70.350878> ; 
			turn blfoot to x-axis <3.336369> speed <57.791907> ; 
			turn blfoot to z-axis <13.997451> speed <22.482686> ; 
			turn blfoot to y-axis <-1.303510> speed <7.928516> ; 
			turn blleg to x-axis <5.520298> speed <3.814506> ; 
			turn blleg to z-axis <-6.976634> speed <22.674749> ; 
			turn blleg to y-axis <-1.949673> speed <18.041904> ; 
			turn blthigh to x-axis <-8.022997> speed <31.961783> ; 
			turn blthigh to z-axis <-7.230088> speed <69.275553> ; 
			turn blthigh to y-axis <67.923178> speed <11.489061> ; 
			turn brfoot to x-axis <-1.801344> speed <1.242534> ; 
			turn brfoot to z-axis <-17.527891> speed <6.196675> ; 
			turn brleg to x-axis <-0.203568> speed <1.221397> ; 
			turn brleg to z-axis <9.580160> speed <26.365433> ; 
			turn brthigh to x-axis <-1.307086> speed <33.065487> ; 
			turn brthigh to z-axis <7.413246> speed <89.893272> ; 
			turn brthigh to y-axis <-67.355549> speed <4.615050> ; 
			turn flfoot to z-axis <0.209948> speed <68.669024> ; 
			turn flleg to z-axis <20.159715> speed <14.845006> ; 
			turn flthigh to x-axis <-6.096626> speed <32.821092> ; 
			turn flthigh to z-axis <-23.584414> speed <122.940127> ; 
			turn frfoot to x-axis <-2.323712> speed <22.840200> ; 
			turn frfoot to z-axis <-21.292772> speed <57.760461> ; 
			turn frfoot to y-axis <-2.872544> speed <14.363452> ; 
			turn frleg to x-axis <-0.115389> speed <0.692320> ; 
			turn frleg to z-axis <6.978149> speed <33.402378> ; 
			turn frleg to y-axis <-0.909255> speed <5.455559> ; 
			turn frthigh to x-axis <3.134593> speed <18.091091> ; 
			turn frthigh to z-axis <15.642863> speed <64.676038> ; 
			turn frthigh to y-axis <24.772971> speed <1.001640> ; 
			turn lshoulder to x-axis <-1.924445> speed <9.567785> ; 
			turn lshoulder to z-axis <22.903709> speed <181.223282> ; 
			turn lshoulder to y-axis <6.118433> speed <36.316716> ; 
			turn lsleeve to x-axis <4.417876> speed <34.555690> ; 
			turn lsleeve to z-axis <-4.025232> speed <20.619561> ; 
			turn lsleeve to y-axis <27.751205> speed <176.217761> ; 
			turn rshoulder to x-axis <1.281200> speed <36.468441> ; 
			turn rshoulder to z-axis <-23.669669> speed <201.453050> ; 
			turn rshoulder to y-axis <3.767278> speed <26.773167> ; 
			turn rsleeve to x-axis <7.100084> speed <8.421928> ; 
			turn rsleeve to z-axis <2.552012> speed <44.683514> ; 
			turn rsleeve to y-axis <-12.184736> speed <93.597548> ; 
			turn torso to x-axis <8.346852> speed <160.524228> ; 
			turn torso to z-axis <4.012820> speed <12.404112> ; 
			turn torso to y-axis <-12.487604> speed <33.670774> ; 
		sleep 164;
		}
		if (TRUE) { //Frame:30
			move base to z-axis [-17.185455] speed [3.332611] ; 
			move base to y-axis [-8.371325] speed [25.308171] ; 
			turn base to x-axis <7.917955> speed <33.543471> ; 
			turn blfoot to x-axis <0.795025> speed <15.248065> ; 
			turn blfoot to z-axis <25.413223> speed <68.494635> ; 
			turn blfoot to y-axis <-0.458512> speed <5.069990> ; 
			turn blleg to x-axis <9.752042> speed <25.390464> ; 
			turn blleg to z-axis <-6.604119> speed <2.235093> ; 
			turn blleg to y-axis <6.532095> speed <50.890608> ; 
			turn blthigh to x-axis <-7.125771> speed <5.383359> ; 
			turn blthigh to z-axis <-14.793326> speed <45.379425> ; 
			turn blthigh to y-axis <63.426052> speed <26.982758> ; 
			turn brfoot to x-axis <-4.466172> speed <15.988970> ; 
			turn brfoot to z-axis <-22.649204> speed <30.727880> ; 
			turn brfoot to y-axis <7.211092> speed <4.806014> ; 
			turn brleg to x-axis <-0.000002> speed <1.221397> ; 
			turn brleg to z-axis <5.185922> speed <26.365428> ; 
			turn brthigh to x-axis <-3.763547> speed <14.738764> ; 
			turn brthigh to z-axis <20.591337> speed <79.068546> ; 
			turn brthigh to y-axis <-69.373460> speed <12.107467> ; 
			turn flfoot to z-axis <17.349816> speed <102.839207> ; 
			turn flleg to z-axis <17.685549> speed <14.844996> ; 
			turn flthigh to x-axis <-9.549626> speed <20.718005> ; 
			turn flthigh to z-axis <-46.319973> speed <136.413351> ; 
			turn flthigh to y-axis <-53.097638> speed <20.494379> ; 
			turn frfoot to x-axis <1.482988> speed <22.840199> ; 
			turn frfoot to z-axis <-36.849868> speed <93.342578> ; 
			turn frfoot to y-axis <-0.478635> speed <14.363453> ; 
			turn frleg to x-axis <-0.000002> speed <0.692320> ; 
			turn frleg to z-axis <20.795293> speed <82.902866> ; 
			turn frleg to y-axis <0.000005> speed <5.455560> ; 
			turn frthigh to x-axis <-6.864028> speed <59.991724> ; 
			turn frthigh to z-axis <28.387113> speed <76.465501> ; 
			turn frthigh to y-axis <26.425744> speed <9.916636> ; 
			turn lshoulder to x-axis <6.280430> speed <49.229252> ; 
			turn lshoulder to z-axis <10.130208> speed <76.641008> ; 
			turn lshoulder to y-axis <11.609411> speed <32.945867> ; 
			turn lsleeve to x-axis <20.651668> speed <97.402748> ; 
			turn lsleeve to z-axis <-3.815929> speed <1.255816> ; 
			turn lsleeve to y-axis <25.153666> speed <15.585238> ; 
			turn rshoulder to x-axis <0.466052> speed <4.890893> ; 
			turn rshoulder to z-axis <-27.418415> speed <22.492475> ; 
			turn rshoulder to y-axis <0.659519> speed <18.646557> ; 
			turn rsleeve to x-axis <33.375610> speed <157.653156> ; 
			turn rsleeve to z-axis <-17.147743> speed <118.198532> ; 
			turn rsleeve to y-axis <-1.421866> speed <64.577220> ; 
			turn torso to x-axis <1.750356> speed <39.578981> ; 
			turn torso to z-axis <3.148012> speed <5.188848> ; 
			turn torso to y-axis <-12.102983> speed <2.307725> ; 
		sleep 164;
		}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		explode torsocoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode heatraycoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		hide torsocoil;
		hide heatraycoil;
		
		call-script DeathAnim();
		corpsetype = 1 ;
		
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode frthigh type BITMAPONLY | NOHEATCLOUD;
		explode lshoulder type BITMAPONLY | NOHEATCLOUD;
		explode flthigh type BITMAPONLY | NOHEATCLOUD;
		explode heatraycoil type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		explode armorlsleeve type BITMAPONLY | NOHEATCLOUD;
		explode flfoot type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		explode torsocoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode heatraycoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		hide torsocoil;
		hide heatraycoil;
		
		call-script DeathAnim();
		corpsetype = 2 ;
		
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode frthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lshoulder type FALL | NOHEATCLOUD;
		explode flthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode heatraycoil type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode armorlsleeve type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flfoot type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode torsocoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode heatraycoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode frthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lshoulder type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flthigh type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode heatraycoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode armorlsleeve type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode torsocoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode heatraycoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode frthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lshoulder type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode heatraycoil type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode armorlsleeve type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
