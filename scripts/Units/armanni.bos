
#include "../recoil_common_includes.h"

piece  base, doorl, door, post, turret, sleeve, barrel, dish, flare, antenna, light, aimfromy;

static-var  shooting, shotcount, restore_delay;

// Signal definitions
#define SIGNAL_AIM1 256

#include "../opencloseanim.h"

Open()
{	
	set ARMORED to 0;
	turn doorl to z-axis <0> speed <90>;
	turn door to z-axis <0> speed <90>;
	wait-for-turn doorl around z-axis;

	move post to y-axis [0] speed [52];
	wait-for-move post along y-axis;

	show light;
	spin dish around y-axis speed <90>;
	move barrel to z-axis [0] speed [24];
	move light to z-axis [0] speed [16];
	turn antenna to x-axis <0> speed <90>;

	wait-for-move barrel along z-axis;
	wait-for-turn antenna around x-axis;
}

Close()
{
	stop-spin dish around y-axis;

	turn turret to y-axis <0.0> speed <100.0>;
	turn sleeve to x-axis <0.0> speed <100.0>;
	
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;

	move barrel to z-axis [-24] speed [24];
	move light to z-axis [-16] speed [16];
	turn antenna to x-axis <90> speed <90>;
	wait-for-move barrel along z-axis;
	wait-for-turn antenna around x-axis;
	hide light;

	move post to y-axis [-52] speed [52];
	wait-for-move post along y-axis;

	turn doorl to z-axis <-90> speed <90>;
	turn door to z-axis <90> speed <90>;
	wait-for-turn doorl around z-axis;
	set ARMORED to 1;
}

Create()
{
	hide flare;

	shooting = 0;
	shotcount = 0;
	start-script OpenCloseAnim(1);
	SLEEP_UNTIL_UNITFINISHED;
	spin dish around y-axis speed <90>;
}

lua_UnitScriptLight(lightIndex, count)
{
	return 0;
}


#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

Activate()
{
	start-script OpenCloseAnim(1);
}

Deactivate()
{
	signal SIGNAL_AIM1;
	start-script OpenCloseAnim(0);
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 5;
}

AimWeapon1(heading, pitch)
{
    if (shooting==1) {return(0);}
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	
	while (!IsOpen){
		sleep 150;
	}
	turn turret to y-axis heading speed <50.0>;
	turn sleeve to x-axis <0.0> - pitch speed <50.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	return (1);
}

FireWeapon1()
{
    shooting=1;
    shotcount = shotcount + 1;
    emit-sfx 1024 + 0 from flare;
    call-script lua_UnitScriptLight(1, shotcount);
	sleep 1400;
	shooting=0;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = aimfromy;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode post type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode sleeve type BITMAPONLY | NOHEATCLOUD;
		explode antenna type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode light type BITMAPONLY | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type BITMAPONLY | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		explode door type BITMAPONLY | NOHEATCLOUD;
		explode doorl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type FALL | NOHEATCLOUD;
		explode antenna type FALL | NOHEATCLOUD;
		explode light type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dish type FALL | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door type FALL | NOHEATCLOUD;
		explode doorl type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode post type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type SMOKE | FALL | NOHEATCLOUD;
		explode antenna type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode light type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode door type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode post type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode antenna type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode light type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode door type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorl type FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
