
#include "../recoil_common_includes.h"

piece  base, cover1, cover2, light1, light2;

static-var  Active;

#define WATER_ROCK_UNITSIZE 15
#include "../floatmotion.h"

#define BASEPIECE base
#define MAXTILT 100
#define UNITSIZE 10
#include "../unit_hitbyweaponid_and_smoke.h"

MMStatus(State)
{
	Active = State;
	if (State) {
		turn cover1 to y-axis <-45> speed <60>;
		turn cover2 to y-axis <45> speed <60>;
	    show light1;
	    show light2;
	}else{
		turn cover1 to z-axis <0> speed <60>;
		turn cover2 to z-axis <0> speed <60>;
	    hide light1;
	    hide light2;
	}
}

Create()
{
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type FIRE | SMOKE | FALL | BITMAPONLY | NOHEATCLOUD;
		explode cover2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type FIRE | FALL | NOHEATCLOUD;
		explode cover2 type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type FIRE | SMOKE | FALL | BITMAPONLY | NOHEATCLOUD;
		explode cover2 type FIRE | SMOKE | FALL | BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cover2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
