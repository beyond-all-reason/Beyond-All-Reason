
#include "../recoil_common_includes.h"

piece   ground, base, flare, sleeve, turret,wake, doorr, doorl;


// Signal definitions 
#define SIGNAL_MOVE 1
#define SIGNAL_IDLE 8


#define HOVER_BASE base
#define HOVER_BANKSPEED <10>
#define HOVER_ROCKBASE ground
#define HOVER_WOBBLE_PERIOD 42
#define HOVER_WOBBLE_AMPLITUDE [0.6]
#define HOVER_WAKEPIECE wake
#define HOVER_IDLE_SFX 1024 + 2
#define HOVER_WAKE_SFX_1 1024 + 0
#define HOVER_WAKE_SFX_2 1024 + 1
#include "../bar_hovercraft_common.h"


#define BASEPIECE base
#define HITSPEED <35.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 3
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide wake;
	hide flare;
	turn sleeve to x-axis <-20.0> speed <25.0>;
	SLEEP_UNTIL_UNITFINISHED;
	start-script HoverCraftMotion();
}


static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.0> speed <190.0>;
	turn sleeve to x-axis <-20.0> speed <25.0>;
	turn doorr to y-axis <0> speed <130>;
	turn doorl to y-axis <0> speed <130>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 5000;
	start-script ExecuteRestoreAfterDelay();
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = sleeve;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn turret to y-axis heading speed <370.0>;
	turn sleeve to x-axis <0.0> - pitch speed <280.0>;
	turn doorr to y-axis <-135> speed <370>;
	turn doorl to y-axis <135> speed <370>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = sleeve;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flare;
}




Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode sleeve type BITMAPONLY | NOHEATCLOUD;
		explode doorl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type FALL | NOHEATCLOUD;
		explode doorl type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type SMOKE | FALL | NOHEATCLOUD;
		explode doorr type SMOKE | FALL | NOHEATCLOUD;
		explode doorl type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode doorr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
