
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, pad, head, nano1, nano2, dish, cagelight, cagelight_emit, blink;

static-var  spray;
static-var  Stunned;

// Signal definitions
#define SIGNAL_TURNON 4

Standby()
{
	SLEEP_UNTIL_UNITFINISHED;
	sleep 50;
	start-script Standby();
}

DishSpin()
{
	show blink;
	spin dish around y-axis speed <150>;
}
DishStopSpin()
{
	hide blink;
	spin dish around y-axis speed <0.0>;
}

Lights()
{
	while( TRUE )
	{
	    if (!Stunned) {
		    emit-sfx 1024 + 0 from blink;
		}
		sleep 2500;
	}
	sleep 50;
	start-script Lights();
}


SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
		hide blink;
		call-script DishStopSpin();
	    //call-script Stop();
	} else {
		call-script DishSpin();
	    //call-script Go();
	}
}


Create()
{
	hide pad;
	hide nano1;
	hide nano2;
	hide cagelight_emit;
	spray = 0;
	start-script Standby();
	SLEEP_UNTIL_UNITFINISHED;
	spin dish around y-axis speed <150.0>;
	start-script Lights();
	call-script DishSpin();
	return (0);
}

#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

QueryNanoPiece(pieceIndex)
{
	spray = (spray + 1) % 2;
	pieceIndex = nano1 + spray;
}

Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	turn head to y-axis <0> now;
	turn head to y-axis <109> speed <100>;
	wait-for-turn head around y-axis;
	
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	sleep 5000;
	
	turn head to y-axis <0> speed <100>;
	wait-for-turn head around y-axis;
	
	FACTORY_CLOSE_BUILD;
}

StartBuilding()
{
	show nano1;
	show nano2;
	show cagelight_emit;
	spin cagelight around y-axis speed <200> accelerate <1>;
}

StopBuilding()
{
	hide nano1;
	hide nano2;
	hide cagelight_emit;
	stop-spin cagelight around y-axis decelerate <1>;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
	return (0);
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		explode dish type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type FALL | NOHEATCLOUD;
		explode nano1 type FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FALL | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
