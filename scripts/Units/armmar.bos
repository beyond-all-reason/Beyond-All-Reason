
#include "../recoil_common_includes.h"

piece pelvis, torso, rthigh, lthigh, lleg, rleg, rfoot,lfoot, luparm, ruparm, lcannon, rcannon, lflare, rflare, lturbfx, rturbfx, lflareaa, rflareaa, aimx1, aimy1, raaturret, laaturret, laacannon, raacannon, llfinger, lrfinger, rlfinger, rrfinger, lturbine, rturbine;

static-var  isAiming, restore_delay, gun_primary, gun_2, wpn1_lasthead, wpn2_lasthead, secondary_deployed;
static-var last_primary_heading, last_primary_pitch, last_secondary_heading, last_secondary_pitch;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
// For N:\animations\Raptors\armmar_walk_v2.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 7))
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var animSpeed, maxSpeed, animFramesPerKeyframe, isMoving;
static-var walkCount;
#define SIGNAL_MOVE 1

LOLEMPTYFUNCTION(){
	// Ok let me tell you what wierd error this script has, which is probably an error of scriptor.
	// The script will when shooting and walking at the same time, call the first function that is defined
	// I was able to debug with with the calledFrom param of Walk, because it was called with 0, which I never
	// call it with. So anyhow, this is the hacky fix, an empty, silly function. It is what is is.
	sleep 1;
}

lua_UnitScriptDecal(lightIndex, xpos,zpos, heading) 
{
	return 0;
}

StopWalking() {
	animSpeed = 1; // tune restore speed here, higher values are slower restore speeds
	move llfinger to y-axis [0.0] speed [22.593379] / animSpeed;
	move lrfinger to y-axis [0.0] speed [22.593379] / animSpeed;
	move pelvis to x-axis [0.0] speed [95.224223] / animSpeed;
	move pelvis to y-axis [0.0] speed [71.680188] / animSpeed;
	move pelvis to z-axis [0.0] speed [34.333324] / animSpeed;
	move rlfinger to y-axis [0.0] speed [22.593379] / animSpeed;
	move rrfinger to y-axis [0.0] speed [22.593331] / animSpeed;
	turn lfoot to x-axis <0.0> speed <1715.941456> / animSpeed;
	turn lfoot to y-axis <0.0> speed <69.394246> / animSpeed;
	turn lfoot to z-axis <0.0> speed <278.816078> / animSpeed;
	turn lleg to x-axis <0.0> speed <2596.107306> / animSpeed;
	turn lleg to y-axis <0.0> speed <71.056270> / animSpeed;
	turn lleg to z-axis <0.0> speed <213.986681> / animSpeed;
	turn llfinger to x-axis <0.0> speed <858.497405> / animSpeed;
	turn lrfinger to x-axis <0.0> speed <858.497405> / animSpeed;
	turn lthigh to x-axis <0.0> speed <1927.200029> / animSpeed;
	turn lthigh to y-axis <0.0> speed <258.965182> / animSpeed;
	turn lthigh to z-axis <0.0> speed <353.003809> / animSpeed;
	turn luparm to x-axis <0.0> speed <2135.376511> / animSpeed;
	turn pelvis to x-axis <0.0> speed <165.869191> / animSpeed;
	turn rfoot to x-axis <0.0> speed <1724.294730> / animSpeed;
	turn rfoot to y-axis <0.0> speed <88.715494> / animSpeed;
	turn rfoot to z-axis <0.0> speed <263.237059> / animSpeed;
	turn rleg to x-axis <0.0> speed <2541.928708> / animSpeed;
	turn rleg to y-axis <0.0> speed <79.441837> / animSpeed;
	turn rleg to z-axis <0.0> speed <202.299995> / animSpeed;
	turn rlfinger to x-axis <0.0> speed <858.497405> / animSpeed;
	turn rrfinger to x-axis <0.0> speed <858.497405> / animSpeed;
	turn rthigh to x-axis <0.0> speed <1907.148899> / animSpeed;
	turn rthigh to y-axis <0.0> speed <236.502842> / animSpeed;
	turn rthigh to z-axis <0.0> speed <356.179619> / animSpeed;
	turn ruparm to x-axis <0.0> speed <2135.376511> / animSpeed;
	//turn torso to y-axis <0.0> speed <99.999999> / animSpeed;
}


Walk(calledfrom) {// For N:\animations\Raptors\armmar_walk_v2.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 7))
	set-signal-mask SIGNAL_MOVE;
	walkCount = walkCount + 1;
	if (isMoving) { //Frame:6
			turn lfoot to x-axis <-33.421407> speed <1002.642225> / animSpeed; //delta=33.42
			turn lfoot to z-axis <1.015298> speed <30.458947> / animSpeed; //delta=-1.02
			turn lfoot to y-axis <0.359345> speed <10.780340> / animSpeed; //delta=0.36
			turn lleg to x-axis <17.592206> speed <527.766174> / animSpeed; //delta=-17.59
			turn lleg to z-axis <-1.880457> speed <56.413696> / animSpeed; //delta=1.88
			turn lleg to y-axis <0.377214> speed <11.316411> / animSpeed; //delta=0.38
			turn lthigh to x-axis <15.826506> speed <474.795215> / animSpeed; //delta=-15.83
			turn lthigh to z-axis <0.888701> speed <26.661033> / animSpeed; //delta=-0.89
			turn lthigh to y-axis <0.130568> speed <3.917045> / animSpeed; //delta=0.13
			turn rfoot to x-axis <17.584553> speed <527.536547> / animSpeed; //delta=-17.58
			turn rfoot to z-axis <0.114251> speed <3.427542> / animSpeed; //delta=-0.11
			turn rleg to x-axis <-5.199154> speed <155.974621> / animSpeed; //delta=5.20
			turn rleg to z-axis <-0.178733> speed <5.361985> / animSpeed; //delta=0.18
			turn rthigh to x-axis <-27.915586> speed <837.467549> / animSpeed; //delta=27.92
			turn rthigh to z-axis <0.101079> speed <3.032368> / animSpeed; //delta=-0.10
			//turn torso to y-axis <-2.0> speed <60.0> / animSpeed; //delta=-2.00
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {

		//get PRINT (get GAME_FRAME, 666,calledfrom,walkCount);
		if (isMoving) { //Frame:12
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(lfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lfoot) & 0x0000ffff),   get HEADING(0));
			turn lfoot to x-axis <-32.878383> speed <16.290718> / animSpeed; //delta=-0.54
			turn lfoot to z-axis <3.346333> speed <69.931035> / animSpeed; //delta=-2.33
			turn lfoot to y-axis <0.975738> speed <18.491813> / animSpeed; //delta=0.62
			turn lleg to x-axis <41.906653> speed <729.433416> / animSpeed; //delta=-24.31
			turn lleg to z-axis <-3.750812> speed <56.110653> / animSpeed; //delta=1.87
			turn lleg to y-axis <0.618197> speed <7.229488> / animSpeed; //delta=0.24
			move llfinger to y-axis [0.451868] speed [13.556027] / animSpeed; //delta=0.45
			turn llfinger to x-axis <-17.169948> speed <515.098443> / animSpeed; //delta=17.17
			move lrfinger to y-axis [0.451868] speed [13.556027] / animSpeed; //delta=0.45
			turn lrfinger to x-axis <-17.169948> speed <515.098443> / animSpeed; //delta=17.17
			turn lthigh to x-axis <18.722884> speed <86.891327> / animSpeed; //delta=-2.90
			turn lthigh to z-axis <-0.077844> speed <28.996364> / animSpeed; //delta=0.97
			turn lthigh to y-axis <0.672425> speed <16.255699> / animSpeed; //delta=0.54
			move pelvis to x-axis [0.706502] speed [21.195068] / animSpeed; //delta=0.71
			move pelvis to z-axis [0.343333] speed [10.299997] / animSpeed; //delta=0.34
			move pelvis to y-axis [-0.716802] speed [21.504056] / animSpeed; //delta=-0.72
			turn pelvis to x-axis <1.367616> speed <41.028465> / animSpeed; //delta=-1.37
			turn rfoot to x-axis <5.511815> speed <362.182115> / animSpeed; //delta=12.07
			turn rfoot to z-axis <-0.336466> speed <13.521509> / animSpeed; //delta=0.45
			turn rleg to x-axis <44.086119> speed <1478.558178> / animSpeed; //delta=-49.29
			turn rleg to z-axis <2.371587> speed <76.509602> / animSpeed; //delta=-2.55
			turn rleg to y-axis <0.528648> speed <17.469105> / animSpeed; //delta=0.58
			move rlfinger to y-axis [-0.376021] speed [11.280637] / animSpeed; //delta=-0.38
			turn rlfinger to x-axis <14.232427> speed <426.972815> / animSpeed; //delta=-14.23
			move rrfinger to y-axis [0.376021] speed [11.280637] / animSpeed; //delta=0.38
			turn rrfinger to x-axis <14.232427> speed <426.972815> / animSpeed; //delta=-14.23
			turn rthigh to x-axis <-66.058564> speed <1144.289339> / animSpeed; //delta=38.14
			turn rthigh to z-axis <-5.781383> speed <176.473854> / animSpeed; //delta=5.88
			turn rthigh to y-axis <-4.664701> speed <141.901705> / animSpeed; //delta=-4.73
			//turn torso to y-axis <-3.0> speed <29.999997> / animSpeed; //delta=-1.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:18
			turn lfoot to x-axis <-15.502255> speed <521.283828> / animSpeed; //delta=-17.38
			turn lfoot to z-axis <4.957686> speed <48.340598> / animSpeed; //delta=-1.61
			turn lleg to x-axis <-10.015493> speed <1557.664383> / animSpeed; //delta=51.92
			turn lleg to z-axis <0.528922> speed <128.392009> / animSpeed; //delta=-4.28
			turn lleg to y-axis <-0.585641> speed <36.115120> / animSpeed; //delta=-1.20
			turn llfinger to x-axis <-0.0> speed <515.098443> / animSpeed; //delta=-17.17
			turn lrfinger to x-axis <-0.0> speed <515.098443> / animSpeed; //delta=-17.17
			turn lthigh to x-axis <29.765326> speed <331.273259> / animSpeed; //delta=-11.04
			turn lthigh to z-axis <-6.228121> speed <184.508293> / animSpeed; //delta=6.15
			turn lthigh to y-axis <2.141317> speed <44.066754> / animSpeed; //delta=1.47
			turn luparm to x-axis <3.500000> speed <104.999994> / animSpeed; //delta=-3.50
			move pelvis to x-axis [2.119507] speed [42.390137] / animSpeed; //delta=1.41
			move pelvis to z-axis [1.030000] speed [20.599995] / animSpeed; //delta=0.69
			move pelvis to y-axis [-2.150406] speed [43.008113] / animSpeed; //delta=-1.43
			turn pelvis to x-axis <4.102846> speed <82.056927> / animSpeed; //delta=-2.74
			turn rfoot to x-axis <24.187121> speed <560.259154> / animSpeed; //delta=-18.68
			turn rfoot to z-axis <4.289276> speed <138.772259> / animSpeed; //delta=-4.63
			turn rfoot to y-axis <-1.055618> speed <30.335888> / animSpeed; //delta=-1.01
			turn rleg to x-axis <1.204045> speed <1286.462204> / animSpeed; //delta=42.88
			turn rleg to z-axis <0.170264> speed <66.039683> / animSpeed; //delta=2.20
			move rlfinger to y-axis [0.0] speed [11.280637] / animSpeed; //delta=0.38
			turn rlfinger to x-axis <-0.0> speed <426.972815> / animSpeed; //delta=14.23
			move rrfinger to y-axis [0.0] speed [11.280637] / animSpeed; //delta=-0.38
			turn rrfinger to x-axis <-0.0> speed <426.972815> / animSpeed; //delta=14.23
			turn rthigh to x-axis <-29.186467> speed <1106.162899> / animSpeed; //delta=-36.87
			turn rthigh to z-axis <-4.781649> speed <29.992031> / animSpeed; //delta=-1.00
			turn rthigh to y-axis <-1.463864> speed <96.025107> / animSpeed; //delta=3.20
			turn ruparm to x-axis <3.500000> speed <104.999994> / animSpeed; //delta=-3.50
			//turn torso to y-axis <-2.0> speed <29.999997> / animSpeed; //delta=1.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:24
			turn lfoot to x-axis <9.713428> speed <756.470490> / animSpeed; //delta=-25.22
			turn lfoot to z-axis <0.880840> speed <122.305374> / animSpeed; //delta=4.08
			turn lfoot to y-axis <-0.420355> speed <41.636547> / animSpeed; //delta=-1.39
			turn lleg to x-axis <-25.085857> speed <452.110925> / animSpeed; //delta=15.07
			turn lleg to z-axis <1.701720> speed <35.183945> / animSpeed; //delta=-1.17
			turn lleg to y-axis <0.835485> speed <42.633762> / animSpeed; //delta=1.42
			move llfinger to y-axis [0.305399] speed [4.394047] / animSpeed; //delta=-0.15
			turn llfinger to x-axis <5.659426> speed <169.782781> / animSpeed; //delta=-5.66
			move lrfinger to y-axis [0.305399] speed [4.394047] / animSpeed; //delta=-0.15
			turn lrfinger to x-axis <5.659426> speed <169.782781> / animSpeed; //delta=-5.66
			turn lthigh to x-axis <8.288360> speed <644.308965> / animSpeed; //delta=21.48
			turn lthigh to z-axis <-2.285081> speed <118.291188> / animSpeed; //delta=-3.94
			turn lthigh to y-axis <0.505783> speed <49.066012> / animSpeed; //delta=-1.64
			turn luparm to x-axis <0.907407> speed <77.777770> / animSpeed; //delta=2.59
			move pelvis to x-axis [0.706502] speed [42.390136] / animSpeed; //delta=-1.41
			move pelvis to z-axis [0.343333] speed [20.599995] / animSpeed; //delta=-0.69
			move pelvis to y-axis [-0.716802] speed [43.008113] / animSpeed; //delta=1.43
			turn pelvis to x-axis <1.016315> speed <92.595953> / animSpeed; //delta=3.09
			turn rfoot to x-axis <1.114977> speed <692.164311> / animSpeed; //delta=23.07
			turn rfoot to z-axis <1.559410> speed <81.896005> / animSpeed; //delta=2.73
			turn rfoot to y-axis <-0.016536> speed <31.172451> / animSpeed; //delta=1.04
			turn rleg to x-axis <-3.734872> speed <148.167515> / animSpeed; //delta=4.94
			turn rleg to z-axis <-0.254606> speed <12.746122> / animSpeed; //delta=0.42
			turn rleg to y-axis <0.056036> speed <13.042230> / animSpeed; //delta=-0.43
			turn rthigh to x-axis <1.603850> speed <923.709517> / animSpeed; //delta=-30.79
			turn rthigh to z-axis <-1.303061> speed <104.357615> / animSpeed; //delta=-3.48
			turn rthigh to y-axis <0.015171> speed <44.371058> / animSpeed; //delta=1.48
			turn ruparm to x-axis <0.907407> speed <77.777770> / animSpeed; //delta=2.59
			//turn torso to y-axis <0.0> speed <60.0> / animSpeed; //delta=2.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			turn lfoot to x-axis <17.606484> speed <236.791688> / animSpeed; //delta=-7.89
			turn lfoot to z-axis <-0.007676> speed <26.655475> / animSpeed; //delta=0.89
			turn lfoot to y-axis <0.249674> speed <20.100876> / animSpeed; //delta=0.67
			turn lleg to x-axis <-5.164051> speed <597.654184> / animSpeed; //delta=-19.92
			turn lleg to z-axis <0.344794> speed <40.707797> / animSpeed; //delta=1.36
			turn lleg to y-axis <-0.382764> speed <36.547463> / animSpeed; //delta=-1.22
			move llfinger to y-axis [0.0] speed [9.161981] / animSpeed; //delta=-0.31
			turn llfinger to x-axis <-0.0> speed <169.782781> / animSpeed; //delta=5.66
			move lrfinger to y-axis [0.0] speed [9.161981] / animSpeed; //delta=-0.31
			turn lrfinger to x-axis <-0.0> speed <169.782781> / animSpeed; //delta=5.66
			turn lthigh to x-axis <-27.448044> speed <1072.092131> / animSpeed; //delta=35.74
			turn lthigh to z-axis <-0.271739> speed <60.400253> / animSpeed; //delta=-2.01
			turn lthigh to y-axis <0.187941> speed <9.535244> / animSpeed; //delta=-0.32
			turn luparm to x-axis <0.113426> speed <23.819447> / animSpeed; //delta=0.79
			move pelvis to x-axis [0.0] speed [21.195070] / animSpeed; //delta=-0.71
			move pelvis to z-axis [0.0] speed [10.299997] / animSpeed; //delta=-0.34
			move pelvis to y-axis [0.0] speed [21.504056] / animSpeed; //delta=0.72
			turn pelvis to x-axis <-0.526951> speed <46.297983> / animSpeed; //delta=1.54
			turn rfoot to x-axis <-33.370918> speed <1034.576838> / animSpeed; //delta=34.49
			turn rfoot to z-axis <-0.997578> speed <76.709628> / animSpeed; //delta=2.56
			turn rfoot to y-axis <-0.336756> speed <9.606595> / animSpeed; //delta=-0.32
			turn rleg to x-axis <17.479542> speed <636.432416> / animSpeed; //delta=-21.21
			turn rleg to z-axis <1.867030> speed <63.649097> / animSpeed; //delta=-2.12
			turn rleg to y-axis <-0.390378> speed <13.392413> / animSpeed; //delta=-0.45
			turn rthigh to x-axis <16.415137> speed <444.338613> / animSpeed; //delta=-14.81
			turn rthigh to z-axis <-0.886431> speed <12.498900> / animSpeed; //delta=-0.42
			turn rthigh to y-axis <-0.127641> speed <4.284351> / animSpeed; //delta=-0.14
			turn ruparm to x-axis <0.113426> speed <23.819447> / animSpeed; //delta=0.79
			//turn torso to y-axis <2.0> speed <60.0> / animSpeed; //delta=2.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:36
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(rfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rfoot) & 0x0000ffff),   get HEADING(0));
			turn lfoot to x-axis <5.121553> speed <374.547929> / animSpeed; //delta=12.48
			turn lfoot to y-axis <0.017987> speed <6.950602> / animSpeed; //delta=-0.23
			turn lleg to x-axis <44.676431> speed <1495.214474> / animSpeed; //delta=-49.84
			turn lleg to z-axis <-2.547333> speed <86.763790> / animSpeed; //delta=2.89
			move llfinger to y-axis [-0.376021] speed [11.280637] / animSpeed; //delta=-0.38
			turn llfinger to x-axis <14.232427> speed <426.972815> / animSpeed; //delta=-14.23
			move lrfinger to y-axis [-0.376021] speed [11.280637] / animSpeed; //delta=-0.38
			turn lrfinger to x-axis <14.232427> speed <426.972815> / animSpeed; //delta=-14.23
			turn lthigh to x-axis <-65.992045> speed <1156.320017> / animSpeed; //delta=38.54
			turn lthigh to z-axis <6.788337> speed <211.802285> / animSpeed; //delta=-7.06
			turn lthigh to y-axis <5.367245> speed <155.379109> / animSpeed; //delta=5.18
			turn luparm to x-axis <-0.0> speed <3.402778> / animSpeed; //delta=0.11
			move pelvis to x-axis [-0.952242] speed [28.567266] / animSpeed; //delta=-0.95
			move pelvis to z-axis [0.336667] speed [10.099998] / animSpeed; //delta=0.34
			move pelvis to y-axis [-0.595151] speed [17.854541] / animSpeed; //delta=-0.60
			turn pelvis to x-axis <1.131740> speed <49.760754> / animSpeed; //delta=-1.66
			turn rfoot to z-axis <-4.009844> speed <90.367965> / animSpeed; //delta=3.01
			turn rfoot to y-axis <-1.312973> speed <29.286516> / animSpeed; //delta=-0.98
			turn rleg to x-axis <43.121470> speed <769.257859> / animSpeed; //delta=-25.64
			turn rleg to z-axis <3.779518> speed <57.374633> / animSpeed; //delta=-1.91
			turn rleg to y-axis <-0.283821> speed <3.196713> / animSpeed; //delta=0.11
			move rlfinger to y-axis [0.451868] speed [13.556027] / animSpeed; //delta=0.45
			turn rlfinger to x-axis <-17.169948> speed <515.098443> / animSpeed; //delta=17.17
			move rrfinger to y-axis [-0.451867] speed [13.555999] / animSpeed; //delta=-0.45
			turn rrfinger to x-axis <-17.169948> speed <515.098443> / animSpeed; //delta=17.17
			turn rthigh to x-axis <18.206969> speed <53.754955> / animSpeed; //delta=-1.79
			turn rthigh to z-axis <0.513079> speed <41.985312> / animSpeed; //delta=-1.40
			turn rthigh to y-axis <-0.695657> speed <17.040495> / animSpeed; //delta=-0.57
			turn ruparm to x-axis <-0.0> speed <3.402778> / animSpeed; //delta=0.11
			//turn torso to y-axis <3.0> speed <30.0> / animSpeed; //delta=1.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:42
			turn lfoot to x-axis <23.230132> speed <543.257375> / animSpeed; //delta=-18.11
			turn lfoot to z-axis <-5.666423> speed <167.289647> / animSpeed; //delta=5.58
			turn lfoot to y-axis <1.325835> speed <39.235429> / animSpeed; //delta=1.31
			turn lleg to x-axis <2.612501> speed <1261.917920> / animSpeed; //delta=42.06
			turn lleg to z-axis <-0.303774> speed <67.306774> / animSpeed; //delta=-2.24
			turn lleg to y-axis <-0.609498> speed <8.259873> / animSpeed; //delta=-0.28
			move llfinger to y-axis [0.0] speed [11.280637] / animSpeed; //delta=0.38
			turn llfinger to x-axis <-0.0> speed <426.972815> / animSpeed; //delta=14.23
			move lrfinger to y-axis [0.0] speed [11.280637] / animSpeed; //delta=0.38
			turn lrfinger to x-axis <-0.0> speed <426.972815> / animSpeed; //delta=14.23
			turn lthigh to x-axis <-29.951397> speed <1081.219424> / animSpeed; //delta=-36.04
			turn lthigh to z-axis <6.483765> speed <9.137141> / animSpeed; //delta=0.30
			turn lthigh to y-axis <2.040739> speed <99.795179> / animSpeed; //delta=-3.33
			turn luparm to x-axis <3.700000> speed <110.999991> / animSpeed; //delta=-3.70
			move pelvis to x-axis [-2.856727] speed [57.134534] / animSpeed; //delta=-1.90
			move pelvis to z-axis [1.010000] speed [20.199995] / animSpeed; //delta=0.67
			move pelvis to y-axis [-1.785454] speed [35.709080] / animSpeed; //delta=-1.19
			turn pelvis to x-axis <4.449124> speed <99.521515> / animSpeed; //delta=-3.32
			turn rfoot to x-axis <-16.103359> speed <516.796599> / animSpeed; //delta=-17.23
			turn rfoot to z-axis <-6.686773> speed <80.307887> / animSpeed; //delta=2.68
			turn rleg to x-axis <-7.717104> speed <1525.157225> / animSpeed; //delta=50.84
			turn rleg to z-axis <-0.266482> speed <121.379997> / animSpeed; //delta=4.05
			turn rleg to y-axis <0.601457> speed <26.558338> / animSpeed; //delta=0.89
			turn rlfinger to x-axis <-0.0> speed <515.098443> / animSpeed; //delta=-17.17
			turn rrfinger to x-axis <-0.0> speed <515.098443> / animSpeed; //delta=-17.17
			turn rthigh to x-axis <27.709505> speed <285.076096> / animSpeed; //delta=-9.50
			turn rthigh to z-axis <7.636671> speed <213.707771> / animSpeed; //delta=-7.12
			turn rthigh to y-axis <-2.321986> speed <48.789869> / animSpeed; //delta=-1.63
			turn ruparm to x-axis <3.700000> speed <110.999991> / animSpeed; //delta=-3.70
			//turn torso to y-axis <2.0> speed <30.0> / animSpeed; //delta=-1.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:48
			turn lfoot to x-axis <0.897423> speed <669.981296> / animSpeed; //delta=22.33
			turn lfoot to z-axis <-2.030338> speed <109.082554> / animSpeed; //delta=-3.64
			turn lfoot to y-axis <0.017369> speed <39.253973> / animSpeed; //delta=-1.31
			turn lleg to x-axis <-3.275317> speed <176.634519> / animSpeed; //delta=5.89
			turn lleg to z-axis <0.213868> speed <15.529255> / animSpeed; //delta=-0.52
			turn lleg to y-axis <-0.078801> speed <15.920905> / animSpeed; //delta=0.53
			turn lthigh to x-axis <0.895652> speed <925.411482> / animSpeed; //delta=-30.85
			turn lthigh to z-axis <1.814243> speed <140.085667> / animSpeed; //delta=4.67
			turn lthigh to y-axis <-0.010579> speed <61.539534> / animSpeed; //delta=-2.05
			turn luparm to x-axis <1.850000> speed <55.499996> / animSpeed; //delta=1.85
			move pelvis to x-axis [-0.952242] speed [57.134532] / animSpeed; //delta=1.90
			move pelvis to z-axis [0.336667] speed [20.199995] / animSpeed; //delta=-0.67
			move pelvis to y-axis [-0.595151] speed [35.709082] / animSpeed; //delta=1.19
			turn pelvis to x-axis <1.483041> speed <88.982486> / animSpeed; //delta=2.97
			turn rfoot to x-axis <9.327911> speed <762.938107> / animSpeed; //delta=-25.43
			turn rfoot to z-axis <-1.422032> speed <157.942236> / animSpeed; //delta=-5.26
			turn rfoot to y-axis <0.482121> speed <53.229297> / animSpeed; //delta=1.77
			turn rleg to x-axis <-24.336376> speed <498.578154> / animSpeed; //delta=16.62
			turn rleg to z-axis <-1.672048> speed <42.166975> / animSpeed; //delta=1.41
			turn rleg to y-axis <-0.987379> speed <47.665102> / animSpeed; //delta=-1.59
			move rlfinger to y-axis [0.305399] speed [4.394047] / animSpeed; //delta=-0.15
			turn rlfinger to x-axis <5.659426> speed <169.782781> / animSpeed; //delta=-5.66
			move rrfinger to y-axis [-0.305398] speed [4.394047] / animSpeed; //delta=0.15
			turn rrfinger to x-axis <5.659426> speed <169.782781> / animSpeed; //delta=-5.66
			turn rthigh to x-axis <7.459393> speed <607.503372> / animSpeed; //delta=20.25
			turn rthigh to z-axis <2.764849> speed <146.154659> / animSpeed; //delta=4.87
			turn rthigh to y-axis <-0.514051> speed <54.238057> / animSpeed; //delta=1.81
			turn ruparm to x-axis <1.850000> speed <55.499996> / animSpeed; //delta=1.85
			//turn torso to y-axis <0.0> speed <60.0> / animSpeed; //delta=-2.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:54
			turn lfoot to x-axis <-33.421407> speed <1029.564874> / animSpeed; //delta=34.32
			turn lfoot to z-axis <1.015298> speed <91.369073> / animSpeed; //delta=-3.05
			turn lfoot to y-axis <0.359345> speed <10.259268> / animSpeed; //delta=0.34
			turn lleg to x-axis <17.592206> speed <626.025673> / animSpeed; //delta=-20.87
			turn lleg to z-axis <-1.880457> speed <62.829743> / animSpeed; //delta=2.09
			turn lleg to y-axis <0.377214> speed <13.680443> / animSpeed; //delta=0.46
			turn lthigh to x-axis <15.826506> speed <447.925621> / animSpeed; //delta=-14.93
			turn lthigh to z-axis <0.888701> speed <27.766262> / animSpeed; //delta=0.93
			turn lthigh to y-axis <0.130568> speed <4.234407> / animSpeed; //delta=0.14
			turn luparm to x-axis <-0.0> speed <55.499996> / animSpeed; //delta=1.85
			move pelvis to x-axis [0.0] speed [28.567268] / animSpeed; //delta=0.95
			move pelvis to z-axis [0.0] speed [10.099998] / animSpeed; //delta=-0.34
			move pelvis to y-axis [0.0] speed [17.854539] / animSpeed; //delta=0.60
			turn pelvis to x-axis <-0.0> speed <44.491240> / animSpeed; //delta=1.48
			turn rfoot to x-axis <17.584553> speed <247.699252> / animSpeed; //delta=-8.26
			turn rfoot to z-axis <0.114251> speed <46.088501> / animSpeed; //delta=-1.54
			turn rfoot to y-axis <-0.044983> speed <15.813111> / animSpeed; //delta=-0.53
			turn rleg to x-axis <-5.199154> speed <574.116643> / animSpeed; //delta=-19.14
			turn rleg to z-axis <-0.178733> speed <44.799446> / animSpeed; //delta=-1.49
			turn rleg to y-axis <-0.053655> speed <28.011730> / animSpeed; //delta=0.93
			move rlfinger to y-axis [0.0] speed [9.161981] / animSpeed; //delta=-0.31
			turn rlfinger to x-axis <-0.0> speed <169.782781> / animSpeed; //delta=5.66
			move rrfinger to y-axis [0.0] speed [9.161952] / animSpeed; //delta=0.31
			turn rrfinger to x-axis <-0.0> speed <169.782781> / animSpeed; //delta=5.66
			turn rthigh to x-axis <-27.915586> speed <1061.249368> / animSpeed; //delta=35.37
			turn rthigh to z-axis <0.101079> speed <79.913116> / animSpeed; //delta=2.66
			turn rthigh to y-axis <0.065356> speed <17.382199> / animSpeed; //delta=0.58
			turn ruparm to x-axis <-0.0> speed <55.499996> / animSpeed; //delta=1.85
			//turn torso to y-axis <-2.0> speed <60.0> / animSpeed; //delta=-2.00
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!

Swim() {// For N:\animations\Raptors\armmar_enterwater_v2.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 7))
	set-signal-mask SIGNAL_MOVE;

	//get PRINT (get GAME_FRAME, 777);
	if (isMoving) { //Frame:6

		if (isMoving) { //Frame:30
			spin lturbine around z-axis speed <-270>;
			spin rturbine around z-axis speed <270>;

			turn lfoot to x-axis <-111.379068> speed <139.223837> ; //delta=111.38
			turn lfoot to z-axis <-19.499377> speed <24.374222> ; //delta=19.50//WARNING: possible gimbal lock issue detected in frame 30 bone lfoot

			turn lfoot to y-axis <-20.152058> speed <25.190073> ; //delta=-20.15//WARNING: possible gimbal lock issue detected in frame 30 bone lfoot

			turn lleg to x-axis <56.400519> speed <70.500649> ; //delta=-56.40
			turn lleg to z-axis <-14.129794> speed <17.662243> ; //delta=14.13
			turn lleg to y-axis <-0.166758> speed <0.208447> ; //delta=-0.17
			turn lthigh to x-axis <60.788486> speed <75.985608> ; //delta=-60.79
			turn lthigh to z-axis <-10.590466> speed <13.238083> ; //delta=10.59
			turn lthigh to y-axis <14.787930> speed <18.484912> ; //delta=14.79
			turn luparm to x-axis <-170.830121> speed <213.537651> ; //delta=170.83//WARNING: possible gimbal lock issue detected in frame 30 bone luparm

			turn rfoot to x-axis <-105.893675> speed <132.367095> ; //delta=105.89
			turn rfoot to z-axis <23.250299> speed <29.062873> ; //delta=-23.25
			turn rfoot to y-axis <24.107977> speed <30.134972> ; //delta=24.11//WARNING: possible gimbal lock issue detected in frame 30 bone rfoot

			turn rleg to x-axis <52.063506> speed <65.079383> ; //delta=-52.06
			turn rleg to z-axis <11.732959> speed <14.666198> ; //delta=-11.73
			turn rleg to y-axis <0.989640> speed <1.237050> ; //delta=0.99
			turn rthigh to x-axis <63.352272> speed <79.190341> ; //delta=-63.35
			turn rthigh to z-axis <10.725303> speed <13.406628> ; //delta=-10.73
			turn rthigh to y-axis <-14.295282> speed <17.869102> ; //delta=-14.30
			turn ruparm to x-axis <-170.830121> speed <213.537651> ; //delta=170.83//WARNING: possible gimbal lock issue detected in frame 30 bone ruparm
		}
	}
}

StopSwimming() {
	animSpeed = 5; // tune restore speed here, higher values are slower restore speeds
	stop-spin lturbine around z-axis;
	stop-spin rturbine around z-axis;
	turn lfoot to x-axis <0.0> speed <1392.238367> / animSpeed;
	turn lfoot to y-axis <0.0> speed <251.900728> / animSpeed;
	turn lfoot to z-axis <0.0> speed <243.742216> / animSpeed;
	turn lleg to x-axis <0.0> speed <705.006492> / animSpeed;
	turn lleg to y-axis <0.0> speed <2.084473> / animSpeed;
	turn lleg to z-axis <0.0> speed <176.622427> / animSpeed;
	turn lthigh to x-axis <0.0> speed <759.856081> / animSpeed;
	turn lthigh to y-axis <0.0> speed <184.849123> / animSpeed;
	turn lthigh to z-axis <0.0> speed <132.380827> / animSpeed;
	turn luparm to x-axis <0.0> speed <2135.376511> / animSpeed;
	turn rfoot to x-axis <0.0> speed <1323.670951> / animSpeed;
	turn rfoot to y-axis <0.0> speed <301.349718> / animSpeed;
	turn rfoot to z-axis <0.0> speed <290.628733> / animSpeed;
	turn rleg to x-axis <0.0> speed <650.793829> / animSpeed;
	turn rleg to y-axis <0.0> speed <12.370504> / animSpeed;
	turn rleg to z-axis <0.0> speed <146.661984> / animSpeed;
	turn rthigh to x-axis <0.0> speed <791.903414> / animSpeed;
	turn rthigh to y-axis <0.0> speed <178.691025> / animSpeed;
	turn rthigh to z-axis <0.0> speed <134.066283> / animSpeed;
	turn ruparm to x-axis <0.0> speed <2135.376511> / animSpeed;
}


static-var isSwimming;
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 4; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	var groundheight;
	var unitxz;
	while(TRUE){
		//get PRINT(get GAME_FRAME, isSwimming);
		//get PRINT ((GET UNIT_Y)/65000, isMoving, 2, 3);
		if (isMoving == TRUE){
			unitxz = (get UNIT_XZ);
			groundheight = 0;
			if (unitxz > 0 ){
				groundheight = (get GROUND_WATER_HEIGHT(unitxz));
			}
			groundheight = groundheight /[1.0];

			//groundheight = (get GROUND_WATER_HEIGHT (get UNIT_XZ))/65536;
			//get PRINT (groundheight, get IN_WATER, get GAME_FRAME);
			if (groundheight > (((-1) * 66))){
				if (isSwimming == TRUE){
					//get PRINT( get GAME_FRAME, 6666);
					signal SIGNAL_MOVE;
					// switch to walk
					call-script StopSwimming();
					start-script Walk(11);
					isSwimming = FALSE;
				}

			}else{
				// bubble effect should always play when moving and underwater
				emit-sfx 1024 + 1 from lturbfx;
				emit-sfx 1024 + 1 from rturbfx;
				if (isSwimming == FALSE){

					//get PRINT( get GAME_FRAME, 7777);
					signal SIGNAL_MOVE;
					call-script StopWalking();
					start-script Swim();
					isSwimming = TRUE;
				}
			}
		}
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 4) / animSpeed;
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed> 12) animSpeed = 12;
		sleep 197;
	}
}


StartMoving(reversing){
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	isMoving=TRUE;
	//start-script UnitSpeed();
	if (isSwimming == TRUE) {
		start-script Swim();
	}
	else {
		start-script Walk(22);
	}
}

StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
		//if (isSwimming == TRUE ) call-script StopSwimming();
		//else call-script StopWalking();

		if (isSwimming == FALSE ) {
			call-script StopWalking();
		}


}

#define BASEPIECE pelvis
#define HITSPEED <45.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 8
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"


static-var  Stunned;

RetractWeapon2()
{
	secondary_deployed = 0;
	turn laaturret to y-axis 0 speed <180.0>;
	turn raaturret to y-axis 0 speed <180.0>;
	wait-for-turn laaturret around y-axis;
	wait-for-turn raaturret around y-axis;
	turn laacannon to x-axis <27.0> speed <108.0>;
	turn raacannon to x-axis <27.0> speed <108.0>;
	wait-for-turn laacannon around x-axis;
	wait-for-turn raacannon around x-axis;
	move laaturret to y-axis [-5.2] speed [20.0];
	move raaturret to y-axis [-5.2] speed [20.0];
	wait-for-move laaturret along y-axis;
	wait-for-move raaturret along y-axis;
}

RestoreAfterDelay_Weapon1()
{
	set-signal-mask SIGNAL_AIM1;
	sleep restore_delay;
	if (Stunned) {
			return (1);
	}
	turn torso to y-axis 0 speed <140.0>;
	turn aimx1 to x-axis <0.0> speed <360.0>;
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
}

RestoreAfterDelay_Weapon2()
{
	set-signal-mask SIGNAL_AIM2;
	sleep restore_delay;
	if (Stunned) {
			return (1);
	}
	start-script RetractWeapon2();
	// set last heading values to large negative, ensure first aim waits for the turn
	last_secondary_heading = -1000000;
	last_secondary_pitch = -1000000;
}

Create()
{
	hide lturbfx;
	hide lflare;
	hide rflare;
	hide aimx1;
	hide rturbfx;
	hide rflareaa;
	hide lflareaa;
	hide aimy1;
	isMoving = FALSE;
	isAiming = FALSE;
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
	last_secondary_heading = -1000000;
	last_secondary_pitch = -1000000;
	gun_primary = 0;
	gun_2 = 0;
	animSpeed = 4;
	restore_delay = 3000;
	walkCount = 0;
	start-script UnitSpeed();
	secondary_deployed = 0;
	start-script RetractWeapon2();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS;
}



SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
			start-script RestoreAfterDelay_Weapon1();
			start-script RestoreAfterDelay_Weapon2();
	}
}


AimWeapon1(heading, pitch)
{
	set-signal-mask SIGNAL_AIM1;
	signal SIGNAL_AIM1;

	// values in <> are degrees per second
	// otherwise angles are in COB angular unit (cau) - There are 65536 cau in a circle
	// In general, 6 cau per frame ~= 1 degree per second
	turn torso to y-axis heading speed <270.0>; //<140.0>
	turn aimx1 to x-axis <0.0> - pitch speed <360.0>;
	// only wait-for-turn if it takes more than 3 frames to finish the turn
	if ( (get ABS(last_primary_heading - heading)>4860) OR (get ABS(last_primary_pitch - pitch)>6480) )
	{
		// seems to take 3 frames for wait-for-turn to process
		wait-for-turn torso around y-axis;
		wait-for-turn aimx1 around x-axis;
	}
	last_primary_heading = heading;
	last_primary_pitch = pitch;

	start-script RestoreAfterDelay_Weapon1();
	return (1);
}

AimWeapon2(heading, pitch)
{
	set-signal-mask SIGNAL_AIM2;
	signal SIGNAL_AIM2;

	if (secondary_deployed == 0)
	{
		move laaturret to y-axis [0] speed [20.0];
		move raaturret to y-axis [0] speed [20.0];
		wait-for-move laaturret along y-axis;
		wait-for-move raaturret along y-axis;
		secondary_deployed = 1;
		return (0);
	}

	// anti-air weapon, always return true after the deploy
	turn laaturret to y-axis heading speed <360.0>;
	turn raaturret to y-axis heading speed <360.0>;
	turn laacannon to x-axis <0.0> - pitch speed <360.0>;
	turn raacannon to x-axis <0.0> - pitch speed <360.0>;

	start-script RestoreAfterDelay_Weapon2();
	return (1);
}

FireWeapon1()
{
	if( gun_primary == 0 )
	{
		emit-sfx 1024 + 0 from lflare;
		move lcannon to z-axis [-3.0] speed [30.0];
		sleep 150;
		move lcannon to z-axis [0.0] speed [3.0];
	}
	else
	{
		emit-sfx 1024 + 0 from rflare;
		move rcannon to z-axis [-3.0] speed [30.0];
		sleep 150;
		move rcannon to z-axis [0.0] speed [3.0];
	}
	gun_primary = !gun_primary;

}

FireWeapon2()
{
	gun_2 = !gun_2;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = aimy1;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = aimy1;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = lflare + gun_primary;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = laaturret + gun_2;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type BITMAPONLY | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		
		explode lfoot type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		
		
		
		
		
		
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type FALL | NOHEATCLOUD;
		explode rleg type FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode lleg type FALL | NOHEATCLOUD;
		explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		
		
		
		
		
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;

		explode rleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode rthigh type SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type SMOKE | FALL | NOHEATCLOUD;
		
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		
		
		
		
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		
		
		
		
	return corpsetype;
}
