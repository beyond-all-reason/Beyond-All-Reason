
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, pad, main1, main2,main3,mid1,mid2,mid3,end1,end3,end2,nano1,nano2,nano3,beam1,beam2,beam3,cover1,cover2;

static-var  spray;

// Signal definitions
#define SIGNAL_TURNON 4

Create()
{
	hide pad;
	hide beam3;
	hide beam2;
	hide beam1;

	spray = 0;
}

QueryNanoPiece(pieceIndex)
{
	spray = (spray + 1) % 3;
	pieceIndex = beam1 + spray;
}

StartBuilding()
{
	show beam1;
	show beam2;
	show beam3;
}

StopBuilding()
{
	hide beam1;
	hide beam2;
	hide beam3;
}

Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	turn mid1 to z-axis <60> speed <60>;
	turn mid3 to z-axis <-60> speed <60>;
	
	turn end1 to z-axis <-80> speed <80>;
	turn end3 to z-axis <80> speed <80>;
	
	turn cover1 to z-axis <45> speed <45>;
	turn cover2 to z-axis <-45> speed <45>;
	
	turn end2 to x-axis <-90> speed <90>;
	wait-for-turn end2 around x-axis;
	
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	sleep 5000;
	
	turn mid1 to z-axis <0> speed <60>;
	turn mid3 to z-axis <0> speed <60>;
	
	turn end1 to z-axis <0> speed <80>;
	turn end3 to z-axis <0> speed <80>;
	
	turn cover1 to z-axis <0> speed <45>;
	turn cover2 to z-axis <0> speed <45>;
	
	turn end2 to x-axis <0> speed <90>;
	wait-for-turn end2 around x-axis;

	FACTORY_CLOSE_BUILD;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type BITMAPONLY | NOHEATCLOUD;
		explode main1 type BITMAPONLY | NOHEATCLOUD;
		explode mid1 type BITMAPONLY | NOHEATCLOUD;
		explode end1 type BITMAPONLY | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type BITMAPONLY | NOHEATCLOUD;
		explode cover2 type BITMAPONLY | NOHEATCLOUD;
		explode main2 type BITMAPONLY | NOHEATCLOUD;
		explode mid2 type BITMAPONLY | NOHEATCLOUD;
		explode end2 type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode beam2 type BITMAPONLY | NOHEATCLOUD;
		explode main3 type BITMAPONLY | NOHEATCLOUD;
		explode mid3 type BITMAPONLY | NOHEATCLOUD;
		explode end3 type BITMAPONLY | NOHEATCLOUD;
		explode nano3 type BITMAPONLY | NOHEATCLOUD;
		explode beam3 type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end1 type FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type FALL | NOHEATCLOUD;
		explode cover2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main3 type FALL | NOHEATCLOUD;
		explode mid3 type FALL | NOHEATCLOUD;
		explode end3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FALL | NOHEATCLOUD;
		explode beam3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode main1 type SMOKE | FALL | NOHEATCLOUD;
		explode mid1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type SMOKE | FALL | NOHEATCLOUD;
		explode cover2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type SMOKE | FALL | NOHEATCLOUD;
		explode main3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid3 type SMOKE | FALL | NOHEATCLOUD;
		explode end3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode mid1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode end1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode cover2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode main2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode end2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode beam2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode main3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode mid3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode end3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}