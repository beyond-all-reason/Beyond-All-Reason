
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, pad, flare1, flare2, pivot1, arm1, end1, pivot2, arm2, end2, dish, blink, blinka, blinkb, cagelight1, cagelight2, cagelight_emit1, cagelight_emit2;

static-var  spray;
static-var  Stunned;

// Signal definitions
#define SIGNAL_TURNON 4


Standby()
{
	while( TRUE )
	{
		hide blinkb;
		//sleep 120;
		show blinka;
		sleep 1975;
		hide blinka;
		//sleep 120;
		show blinkb;
		sleep 1975;
	}
}

Lights()
{
	while( TRUE )
	{
	    if (!Stunned) {
		    emit-sfx 1024 + 1 from blink;
		}
		sleep 2500;
	}
}


SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
		hide blink;
		stop-spin dish around y-axis decelerate <1> ;
	} else {
		show blink;
		spin dish around y-axis speed <60> accelerate <1>;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide cagelight_emit1;
	hide cagelight_emit2;
	hide pad;
	spray = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script Standby();
	spin dish around y-axis speed <60>;
	start-script Lights();
	call-script SetStunned(0);
}


#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

QueryNanoPiece(pieceIndex)
{
	spray = (spray + 1) % 2;
	pieceIndex = flare1 + spray;
}

Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	turn arm1 to x-axis <135> speed <120>;
	turn arm2 to x-axis <135> speed <120>;
	sleep (300);
	turn pivot1 to y-axis <-135> speed <90>;
	turn pivot2 to y-axis <135> speed <90>;
	turn end1 to x-axis <70> speed <90>;
	turn end2 to x-axis <70> speed <90>;
	wait-for-turn arm1 around x-axis;
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
    sleep 5000;
	
	turn pivot1 to y-axis <0> speed <120>;
	turn pivot2 to y-axis <0> speed <120>;
	turn arm1 to x-axis <0> speed <30>;
	turn arm2 to x-axis <0> speed <30>;
	turn end1 to x-axis <0> speed <90>;
	turn end2 to x-axis <0> speed <90>;

	FACTORY_CLOSE_BUILD;
}

StartBuilding()
{
	show flare1;
	show flare2;
	spin pad around y-axis speed <30> accelerate <1>;
	
	show cagelight_emit1;
	show cagelight_emit2;
	
	spin cagelight_emit1 around y-axis speed <200> accelerate <1>;
	spin cagelight_emit2 around y-axis speed <-200> accelerate <1>;
}

StopBuilding()
{
	hide flare1;
	hide flare2;
	stop-spin pad around y-axis;
	
	hide cagelight_emit1;
	hide cagelight_emit2;
	
	stop-spin cagelight_emit1 around y-axis decelerate <1>;
	stop-spin cagelight_emit2 around y-axis decelerate <1>;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode blinka type BITMAPONLY | NOHEATCLOUD;
		explode blinkb type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FALL | NOHEATCLOUD;
		explode flare1 type FALL | NOHEATCLOUD;
		explode flare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode blinka type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode blinkb type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode blinka type SMOKE | FALL | NOHEATCLOUD;
		explode blinkb type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode blinka type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode blinkb type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
