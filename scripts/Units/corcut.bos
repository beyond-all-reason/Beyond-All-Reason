
#include "../recoil_common_includes.h"

piece  base, flare1, flare2, thrusta, thrustb, fan1, fan2, duct1, duct2;

static-var  gun_1;

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "../idlehover.h"


#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"


Create()
{
	hide thrustb;
	hide thrusta;
	hide flare1;
	hide flare2;
	gun_1 = base;
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
	return (0);
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn base to x-axis <0.0> speed <50.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 3000;
	start-script ExecuteRestoreAfterDelay();
}

Activate()
{
	show thrustb;
	show thrusta;
	spin fan1 around y-axis speed <360> accelerate <1>;
	spin fan2 around y-axis speed <360> accelerate <1>;
}

Deactivate()
{
	hide thrustb;
	hide thrusta;
	stop-spin fan1 around y-axis decelerate <1>;
	stop-spin fan2 around y-axis decelerate <1>;
}

FireWeapon1()
{
	turn base to x-axis <10.0> speed <50.0>;

	start-script RestoreAfterDelay();

	gun_1 = !gun_1;
}

AimWeapon1(heading, pitch)
{
	return (1);
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = flare1 + gun_1;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare1 + gun_1;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode duct1 type BITMAPONLY | NOHEATCLOUD;
		explode fan1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type BITMAPONLY | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type BITMAPONLY | NOHEATCLOUD;
		explode thrustb type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode duct1 type FALL | NOHEATCLOUD;
		explode fan1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type FALL | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type BITMAPONLY | NOHEATCLOUD;
		explode thrustb type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode duct1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode fan1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type BITMAPONLY | NOHEATCLOUD;
		explode thrustb type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode duct1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode fan1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode duct2 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type BITMAPONLY | NOHEATCLOUD;
		explode thrustb type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
