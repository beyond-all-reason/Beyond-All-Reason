
#include "../recoil_common_includes.h"

piece  base, solarbase, container;

lua_solarpoint() {
	return(0);
}

solarreturn(status, sunheading) {
	var unitheading;
	unitheading = get(HEADING);
	if (status==1) {
		turn container to y-axis 0-unitheading now;
		turn solarbase to x-axis <30> speed <12>;
		turn solarbase to y-axis sunheading*182 speed <25>;
	}
	unitheading = 1;
}

Create()
{
	SLEEP_UNTIL_UNITFINISHED;
	call-script lua_solarpoint();
}

#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode solarbase type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
