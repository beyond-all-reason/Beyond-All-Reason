
#include "../recoil_common_includes.h"

piece  body, rthigh, lthigh, rbleg, lbleg, rbfoot, lbfoot, rmfoot, lmfoot, rfleg, lfleg, rffoot, lffoot, turret, ldoor, rdoor, flare, rmleg, lmleg, aimy1, unstocked, stocked;

static-var  isOpen, isMoving, animSpeed, maxSpeed, animFramesPerKeyframe, missiles_stockpiled;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_MOVE 1

Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from C:\Users\ptasz\Documents\GitHub\support\Animation_sources\armscab_anim_walk.blend 
	//set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:5
			turn lbfoot to x-axis <-16.810781> speed <504.323427> / animSpeed; //delta=16.81 
			turn lbleg to x-axis <4.239536> speed <127.186080> / animSpeed; //delta=-4.24 
			turn lffoot to x-axis <24.059106> speed <721.773171> / animSpeed; //delta=-24.06 
			turn lfleg to x-axis <5.877313> speed <176.319387> / animSpeed; //delta=-5.88 
			turn lmfoot to x-axis <35.053176> speed <213.636296> / animSpeed; //delta=7.12 
			turn lmleg to x-axis <-18.656665> speed <150.277079> / animSpeed; //delta=5.01 
			turn lthigh to x-axis <-3.089739> speed <92.692156> / animSpeed; //delta=3.09 
			turn rbfoot to x-axis <-30.385821> speed <911.574634> / animSpeed; //delta=30.39 
			turn rbleg to x-axis <-17.714374> speed <531.431218> / animSpeed; //delta=17.71 
			turn rffoot to x-axis <-29.118421> speed <873.552645> / animSpeed; //delta=29.12 
			turn rfleg to x-axis <-5.930132> speed <177.903948> / animSpeed; //delta=5.93 
			turn rmfoot to x-axis <49.129660> speed <208.658215> / animSpeed; //delta=-6.96 
			turn rmleg to x-axis <-9.947898> speed <110.985929> / animSpeed; //delta=-3.70 
			turn rthigh to x-axis <7.316307> speed <219.489222> / animSpeed; //delta=-7.32 
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:9
			move body to y-axis [-0.500000] speed [15.0] / animSpeed; //delta=-0.50 
			turn body to x-axis <0.500000> speed <15.0> / animSpeed; //delta=-0.50 
			turn lbfoot to x-axis <15.807634> speed <978.552460> / animSpeed; //delta=-32.62 
			turn lbleg to x-axis <-11.567358> speed <474.206826> / animSpeed; //delta=15.81 
			turn lffoot to x-axis <36.887649> speed <384.856298> / animSpeed; //delta=-12.83 
			turn lfleg to x-axis <19.156848> speed <398.386066> / animSpeed; //delta=-13.28 
			turn lmfoot to x-axis <-36.279612> speed <2139.983644> / animSpeed; //delta=71.33 
			turn lmleg to x-axis <17.662758> speed <1089.582700> / animSpeed; //delta=-36.32 
			turn lthigh to x-axis <-0.0> speed <92.692156> / animSpeed; //delta=-3.09 
			turn rbfoot to x-axis <-20.755519> speed <288.909062> / animSpeed; //delta=-9.63 
			turn rbleg to x-axis <-43.677759> speed <778.901539> / animSpeed; //delta=25.96 
			turn rffoot to x-axis <-54.201185> speed <752.482897> / animSpeed; //delta=25.08 
			turn rfleg to x-axis <17.716035> speed <709.385010> / animSpeed; //delta=-23.65 
			turn rmfoot to x-axis <52.710947> speed <107.438602> / animSpeed; //delta=-3.58 
			turn rmleg to x-axis <9.141675> speed <572.687209> / animSpeed; //delta=-19.09 
			turn rthigh to x-axis <6.275950> speed <31.210720> / animSpeed; //delta=1.04 
			
			if ( !isOpen){
				turn turret to x-axis <-0.0> speed <81.110861> / animSpeed; //delta=-2.70 
				turn turret to z-axis <-0.0> speed <93.617241> / animSpeed; //delta=3.12 
			}
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:13
			move body to y-axis [-1.0] speed [15.0] / animSpeed; //delta=-0.50 
			turn body to x-axis <1.0> speed <15.0> / animSpeed; //delta=-0.50 
			turn lbfoot to x-axis <38.357359> speed <676.491732> / animSpeed; //delta=-22.55 
			turn lbleg to x-axis <-15.802425> speed <127.051994> / animSpeed; //delta=4.24 
			turn lffoot to x-axis <36.093366> speed <23.828481> / animSpeed; //delta=0.79 
			turn lfleg to x-axis <34.200106> speed <451.297731> / animSpeed; //delta=-15.04 
			turn lmfoot to x-axis <2.173875> speed <1153.604614> / animSpeed; //delta=-38.45 
			turn lmleg to x-axis <-0.747325> speed <552.302502> / animSpeed; //delta=18.41 
			turn lthigh to x-axis <-1.272229> speed <38.166877> / animSpeed; //delta=1.27 
			turn rbfoot to x-axis <-11.631450> speed <273.722068> / animSpeed; //delta=-9.12 
			turn rbleg to x-axis <-43.984707> speed <9.208461> / animSpeed; //delta=0.31 
			turn rffoot to x-axis <-16.474404> speed <1131.803412> / animSpeed; //delta=-37.73 
			turn rfleg to x-axis <-0.812626> speed <555.859844> / animSpeed; //delta=18.53 
			turn rmfoot to x-axis <47.947877> speed <142.892100> / animSpeed; //delta=4.76 
			turn rmleg to x-axis <32.608682> speed <704.010206> / animSpeed; //delta=-23.47 
			turn rthigh to x-axis <4.174644> speed <63.039193> / animSpeed; //delta=2.10 
			
			if ( !isOpen){
				turn turret to x-axis <-2.017011> speed <60.510330> / animSpeed; //delta=2.02 
				turn turret to z-axis <-1.390131> speed <41.703917> / animSpeed; //delta=1.39 
			}
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:17
			move body to y-axis [-0.500000] speed [15.0] / animSpeed; //delta=0.50 
			turn body to x-axis <0.500000> speed <15.0> / animSpeed; //delta=0.50 
			turn lbfoot to x-axis <-18.520813> speed <1706.345145> / animSpeed; //delta=56.88 
			turn lbleg to x-axis <0.156567> speed <478.769749> / animSpeed; //delta=-15.96 
			turn lfleg to x-axis <3.851279> speed <910.464801> / animSpeed; //delta=30.35 
			turn lmfoot to x-axis <23.408349> speed <637.034218> / animSpeed; //delta=-21.23 
			turn lmleg to x-axis <-12.641930> speed <356.838135> / animSpeed; //delta=11.89 
			turn lthigh to x-axis <3.235851> speed <135.242407> / animSpeed; //delta=-4.51 
			turn rbfoot to x-axis <-27.895452> speed <487.920062> / animSpeed; //delta=16.26 
			turn rbleg to x-axis <-10.754211> speed <996.914903> / animSpeed; //delta=-33.23 
			turn rffoot to x-axis <9.168668> speed <769.292155> / animSpeed; //delta=-25.64 
			turn rfleg to x-axis <-1.237293> speed <12.740015> / animSpeed; //delta=0.42 
			turn rmfoot to x-axis <56.536928> speed <257.671550> / animSpeed; //delta=-8.59 
			turn rmleg to x-axis <-15.954352> speed <1456.891030> / animSpeed; //delta=48.56 
			turn rthigh to x-axis <-1.470755> speed <169.361952> / animSpeed; //delta=5.65 

			if ( !isOpen){
				turn turret to x-axis <-4.034022> speed <60.510330> / animSpeed; //delta=2.02 
				turn turret to z-axis <-2.780261> speed <41.703917> / animSpeed; //delta=1.39
			}				
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:21
			move body to y-axis [0.0] speed [15.0] / animSpeed; //delta=0.50 
			turn body to x-axis <-0.0> speed <15.0> / animSpeed; //delta=0.50 
			turn lbfoot to x-axis <-30.385821> speed <355.950254> / animSpeed; //delta=11.87 
			turn lbleg to x-axis <-17.714374> speed <536.128226> / animSpeed; //delta=17.87 
			turn lffoot to x-axis <-29.118421> speed <1956.353633> / animSpeed; //delta=65.21 
			turn lfleg to x-axis <-5.930132> speed <293.442331> / animSpeed; //delta=9.78 
			turn lmfoot to x-axis <49.129660> speed <771.639324> / animSpeed; //delta=-25.72 
			turn lmleg to x-axis <-9.947898> speed <80.820945> / animSpeed; //delta=-2.69 
			turn lthigh to x-axis <7.316307> speed <122.413692> / animSpeed; //delta=-4.08 
			turn rbfoot to x-axis <-16.810781> speed <332.540139> / animSpeed; //delta=-11.08 
			turn rbleg to x-axis <4.239536> speed <449.812396> / animSpeed; //delta=-14.99 
			turn rffoot to x-axis <24.059106> speed <446.713146> / animSpeed; //delta=-14.89 
			turn rfleg to x-axis <5.877313> speed <213.438184> / animSpeed; //delta=-7.11 
			turn rmfoot to x-axis <35.053176> speed <644.512564> / animSpeed; //delta=21.48 
			turn rmleg to x-axis <-18.656665> speed <81.069394> / animSpeed; //delta=2.70 
			turn rthigh to x-axis <-3.089739> speed <48.569513> / animSpeed; //delta=1.62 
			
			if ( !isOpen){
				turn turret to x-axis <-2.017011> speed <60.510330> / animSpeed; //delta=-2.02 
				turn turret to z-axis <-1.390131> speed <41.703917> / animSpeed; //delta=-1.39 
			}
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:25
			move body to y-axis [-0.500000] speed [15.0] / animSpeed; //delta=-0.50 
			turn body to x-axis <0.500000> speed <15.0> / animSpeed; //delta=-0.50 
			turn lbfoot to x-axis <-20.755519> speed <288.909062> / animSpeed; //delta=-9.63 
			turn lbleg to x-axis <-43.677759> speed <778.901539> / animSpeed; //delta=25.96 
			turn lffoot to x-axis <-66.776779> speed <1129.750718> / animSpeed; //delta=37.66 
			turn lfleg to x-axis <23.892253> speed <894.671530> / animSpeed; //delta=-29.82 
			turn lmfoot to x-axis <52.710947> speed <107.438602> / animSpeed; //delta=-3.58 
			turn lmleg to x-axis <9.141675> speed <572.687209> / animSpeed; //delta=-19.09 
			turn lthigh to x-axis <6.275950> speed <31.210720> / animSpeed; //delta=1.04 
			turn rbfoot to x-axis <15.807634> speed <978.552460> / animSpeed; //delta=-32.62 
			turn rbleg to x-axis <-11.567358> speed <474.206826> / animSpeed; //delta=15.81 
			turn rffoot to x-axis <36.689075> speed <378.899075> / animSpeed; //delta=-12.63 
			turn rfleg to x-axis <22.917663> speed <511.210512> / animSpeed; //delta=-17.04 
			turn rmfoot to x-axis <-36.279612> speed <2139.983644> / animSpeed; //delta=71.33 
			turn rmleg to x-axis <17.662758> speed <1089.582700> / animSpeed; //delta=-36.32 
			turn rthigh to x-axis <-0.0> speed <92.692156> / animSpeed; //delta=-3.09 
			
			if ( !isOpen){
				turn turret to x-axis <-0.0> speed <60.510330> / animSpeed; //delta=-2.02 
				turn turret to z-axis <-0.0> speed <41.703917> / animSpeed; //delta=-1.39 
			}
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:29
			move body to y-axis [-1.0] speed [15.0] / animSpeed; //delta=-0.50 
			turn body to x-axis <1.0> speed <15.0> / animSpeed; //delta=-0.50 
			turn lbfoot to x-axis <-11.631450> speed <273.722068> / animSpeed; //delta=-9.12 
			turn lbleg to x-axis <-43.984707> speed <9.208461> / animSpeed; //delta=0.31 
			turn lffoot to x-axis <-16.474404> speed <1509.071233> / animSpeed; //delta=-50.30 
			turn lfleg to x-axis <-0.812626> speed <741.146364> / animSpeed; //delta=24.70 
			turn lmfoot to x-axis <47.947877> speed <142.892100> / animSpeed; //delta=4.76 
			turn lmleg to x-axis <32.608682> speed <704.010206> / animSpeed; //delta=-23.47 
			turn lthigh to x-axis <4.174644> speed <63.039193> / animSpeed; //delta=2.10 
			turn rbfoot to x-axis <38.357359> speed <676.491732> / animSpeed; //delta=-22.55 
			turn rbleg to x-axis <-15.802425> speed <127.051994> / animSpeed; //delta=4.24 
			turn rffoot to x-axis <36.242295> speed <13.403392> / animSpeed; //delta=0.45 
			turn rfleg to x-axis <31.379494> speed <253.854926> / animSpeed; //delta=-8.46 
			turn rmfoot to x-axis <2.173875> speed <1153.604614> / animSpeed; //delta=-38.45 
			turn rmleg to x-axis <-0.747325> speed <552.302502> / animSpeed; //delta=18.41 
			turn rthigh to x-axis <-1.272229> speed <38.166877> / animSpeed; //delta=1.27 
			
			if ( !isOpen){
				turn turret to x-axis <-2.401554> speed <72.046628> / animSpeed; //delta=2.40 
				turn turret to z-axis <1.966945> speed <59.008359> / animSpeed; //delta=-1.97 
			}
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:33
			move body to y-axis [-0.500000] speed [15.0] / animSpeed; //delta=0.50 
			turn body to x-axis <0.500000> speed <15.0> / animSpeed; //delta=0.50 
			turn lbfoot to x-axis <-27.895452> speed <487.920062> / animSpeed; //delta=16.26 
			turn lbleg to x-axis <-10.754211> speed <996.914903> / animSpeed; //delta=-33.23 
			turn lffoot to x-axis <11.098386> speed <827.183720> / animSpeed; //delta=-27.57 
			turn lfleg to x-axis <-4.540896> speed <111.848094> / animSpeed; //delta=3.73 
			turn lmfoot to x-axis <56.536928> speed <257.671550> / animSpeed; //delta=-8.59 
			turn lmleg to x-axis <-15.954352> speed <1456.891030> / animSpeed; //delta=48.56 
			turn lthigh to x-axis <-1.470755> speed <169.361952> / animSpeed; //delta=5.65 
			turn rbfoot to x-axis <-18.520813> speed <1706.345145> / animSpeed; //delta=56.88 
			turn rbleg to x-axis <0.156567> speed <478.769749> / animSpeed; //delta=-15.96 
			turn rffoot to x-axis <36.130601> speed <3.350823> / animSpeed; //delta=0.11 
			turn rfleg to x-axis <16.423740> speed <448.672634> / animSpeed; //delta=14.96 
			turn rmfoot to x-axis <23.408349> speed <637.034218> / animSpeed; //delta=-21.23 
			turn rmleg to x-axis <-12.641930> speed <356.838135> / animSpeed; //delta=11.89 
			turn rthigh to x-axis <3.235851> speed <135.242407> / animSpeed; //delta=-4.51 
			
			if ( !isOpen){
				turn turret to x-axis <-4.803109> speed <72.046628> / animSpeed; //delta=2.40 
				turn turret to z-axis <3.933891> speed <59.008359> / animSpeed; //delta=-1.97 
			}
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:37
			move body to y-axis [0.0] speed [15.0] / animSpeed; //delta=0.50 
			turn body to x-axis <-0.0> speed <15.0> / animSpeed; //delta=0.50 
			turn lbfoot to x-axis <-16.810781> speed <332.540139> / animSpeed; //delta=-11.08 
			turn lbleg to x-axis <4.239536> speed <449.812396> / animSpeed; //delta=-14.99 
			turn lffoot to x-axis <24.059106> speed <388.821581> / animSpeed; //delta=-12.96 
			turn lfleg to x-axis <5.877313> speed <312.546263> / animSpeed; //delta=-10.42 
			turn lmfoot to x-axis <35.053176> speed <644.512564> / animSpeed; //delta=21.48 
			turn lmleg to x-axis <-18.656665> speed <81.069394> / animSpeed; //delta=2.70 
			turn lthigh to x-axis <-3.089739> speed <48.569513> / animSpeed; //delta=1.62 
			turn rbfoot to x-axis <-30.385821> speed <355.950254> / animSpeed; //delta=11.87 
			turn rbleg to x-axis <-17.714374> speed <536.128226> / animSpeed; //delta=17.87 
			turn rffoot to x-axis <-29.118421> speed <1957.470676> / animSpeed; //delta=65.25 
			turn rfleg to x-axis <-5.930132> speed <670.616139> / animSpeed; //delta=22.35 
			turn rmfoot to x-axis <49.129660> speed <771.639324> / animSpeed; //delta=-25.72 
			turn rmleg to x-axis <-9.947898> speed <80.820945> / animSpeed; //delta=-2.69 
			turn rthigh to x-axis <7.316307> speed <122.413692> / animSpeed; //delta=-4.08 
			
			if ( !isOpen){
				turn turret to x-axis <-2.703695> speed <62.982395> / animSpeed; //delta=-2.10 
				turn turret to z-axis <3.120575> speed <24.399476> / animSpeed; //delta=0.81 
			}
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move body to y-axis [0.0] speed [3.750000];
	turn body to x-axis <0.0> speed <3.750000>;
	turn lbfoot to x-axis <0.0> speed <426.586286>;
	turn lbleg to x-axis <0.0> speed <249.228726>;
	turn lffoot to x-axis <0.0> speed <489.088408>;
	turn lfleg to x-axis <0.0> speed <227.616200>;
	turn lmfoot to x-axis <42.174386> speed <534.995911>;
	turn lmleg to x-axis <-13.647429> speed <364.222757>;
	turn lthigh to x-axis <0.0> speed <42.340488>;
	turn rbfoot to x-axis <0.0> speed <426.586286>;
	turn rbleg to x-axis <0.0> speed <249.228726>;
	turn rffoot to x-axis <0.0> speed <489.367669>;
	turn rfleg to x-axis <0.0> speed <177.346252>;
	turn rmfoot to x-axis <42.174386> speed <534.995911>;
	turn rmleg to x-axis <-13.647429> speed <364.222757>;
	turn rthigh to x-axis <0.0> speed <54.872305>;
	if ( !isOpen){
		turn turret to x-axis <-2.703695> speed <20.277715>;
		turn turret to z-axis <3.120575> speed <23.404310>;
	}
}
// REMEMBER TO animspeed = 4 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 4; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 4) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>8) animSpeed = 8;
		sleep 131;
	}
}
StartMoving(reversing){
	signal SIGNAL_MOVE;
  set-signal-mask SIGNAL_MOVE;
	isMoving=TRUE;
	start-script Walk();
	start-script UnitSpeed();
}

StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}

#define BASEPIECE body
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 6
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"


Create()
{
	hide aimy1;
	hide flare;
	missiles_stockpiled = 0;
	hide stocked;
	show unstocked;
	isMoving = FALSE;

	isOpen = FALSE;
	animspeed = 4;
	return (0);
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;

	isOpen = FALSE;
	turn turret to x-axis <0> speed <30>;
	wait-for-turn turret around x-axis;

	turn ldoor to y-axis <0> speed <30>;
	turn rdoor to y-axis <0> speed <30>;
}

SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 3000;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	if( !isOpen )
	{
		turn turret to x-axis <90> speed <90>;
		wait-for-turn turret around x-axis;

		turn ldoor to y-axis <-25> speed <30>;
		turn rdoor to y-axis <25> speed <30>;
		wait-for-move ldoor along y-axis;
		isOpen = TRUE;
	}
	return (1);
}

FireWeapon1()
{
	emit-sfx 1024 + 0 from flare;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

SetStockpile(num_stockpiled)
{
	//get PRINT(get GAME_FRAME, num_stockpiled);
	if (num_stockpiled == 0)
	{

		hide stocked;
		show unstocked;
		missiles_stockpiled = 0;
	}
	if (num_stockpiled >= 1)
	{

		show stocked;
		hide unstocked;
		missiles_stockpiled = 1;
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type BITMAPONLY | NOHEATCLOUD;
		explode rbleg type BITMAPONLY | NOHEATCLOUD;
		explode rbfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode ldoor type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rbfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode body type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rbleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rbfoot type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rmfoot type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode body type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rbleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rbfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rmfoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lbleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
