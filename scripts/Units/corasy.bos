#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, head1,head2,head3,head4,nano1,nano2,nano3,nano4,nano5,nano6,nano7,nano8,pad;

static-var  spray, unitviewer, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_ACTIVATE			2



activatescr()
{
	if( TRUE )
	{
		turn head1 to y-axis <0.000000> now;
		turn head1 to y-axis <-45.0> speed <45>;
		turn head2 to y-axis <0.000000> now;
		turn head2 to y-axis <45.0> speed <45>;
		turn head3 to y-axis <0.000000> now;
		turn head3 to y-axis <-45.0> speed <45>;
		turn head4 to y-axis <0.000000> now;
		turn head4 to y-axis <45.0> speed <45>;

		sleep 1494;
	}
	sleep 8;
}

deactivatescr()
{
	if( TRUE )
	{
		turn head1 to y-axis <0.0> speed <45>;
		turn head2 to y-axis <0.0> speed <45>;
		turn head3 to y-axis <0.0> speed <45>;
		turn head4 to y-axis <0.0> speed <45>;

		sleep 1487;
	}
	sleep 11;
}


#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 100
#define SMOKEPIECE base
#include "unit_hitbyweaponid_and_smoke.h"

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide nano1;
	hide nano2;
	hide nano3;
	hide nano4;
	hide nano5;
	hide nano6;
	hide nano7;
	hide nano8;
	hide pad;

	unitviewer = FALSE;
	spray = nano1;
	call-script InitState();
}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = nano1;
	}
	if( spray == 1 )
	{
		piecenum = nano2;
	}
	if( spray == 2 )
	{
		piecenum = nano3;
	}
	if( spray == 3 )
	{
		piecenum = nano4;
	}
	if( spray == 4 )
	{
		piecenum = nano5;
	}
	if( spray == 5 )
	{
		piecenum = nano6;
	}
	if( spray == 6 )
	{
		piecenum = nano7;
	}
	if( spray == 7 )
	{
		piecenum = nano8;
	}
	spray = spray +1;
	if( spray > 7)
	{
		spray=0;
	}
}
Demo()
{
	unitviewer = TRUE;
}

StartBuilding()
{
	show nano1;
	show nano2;
	show nano3;
	show nano4;
	show nano5;
	show nano6;
	show nano7;
	show nano8;
}

StopBuilding()
{
	hide nano1;
	hide nano2;
	hide nano3;
	hide nano4;
	hide nano5;
	hide nano6;
	hide nano7;
	hide nano8;
}

Activate()
{
	signal SIG_ACTIVATE;
	start-script RequestState(0);
	return (0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	sleep 5000;
	set-signal-mask 0;
	start-script RequestState(1);
}

QueryBuildInfo(piecenum)
{
	piecenum = pad;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode head2 type BITMAPONLY | NOHEATCLOUD;
		explode nano3 type BITMAPONLY | NOHEATCLOUD;
		explode nano4 type BITMAPONLY | NOHEATCLOUD;
		explode head3 type BITMAPONLY | NOHEATCLOUD;
		explode nano5 type BITMAPONLY | NOHEATCLOUD;
		explode nano6 type BITMAPONLY | NOHEATCLOUD;
		explode head4 type BITMAPONLY | NOHEATCLOUD;
		explode nano7 type BITMAPONLY | NOHEATCLOUD;
		explode nano8 type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type FALL | NOHEATCLOUD;
		explode nano3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head3 type FALL | NOHEATCLOUD;
		explode nano5 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano6 type FALL | NOHEATCLOUD;
		explode head4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano7 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano8 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano5 type SMOKE | FALL | NOHEATCLOUD;
		explode nano6 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode head4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano7 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano8 type SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode head2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode head3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano5 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano6 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano7 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano8 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
