
#include "../recoil_common_includes.h"

piece  base, ground, cylinder, cagelight, cagelight_emit, fan, lfan, rfan, lhinge1, lhinge2, ldoor, rhinge1, rhinge2, rdoor, turret, box, gun, nano, wake;

static-var  terrain, readyToBuild;
 
// Signal definitions
#define SIGNAL_MOVE 1
#define SIGNAL_BUILD 2
#define SIGNAL_IDLE 8


#define HOVER_BASE base
#define HOVER_BANKSPEED <12>
#define HOVER_ROCKBASE ground
#define HOVER_WOBBLE_PERIOD 38
#define HOVER_WOBBLE_AMPLITUDE [0.1]
#define HOVER_WAKEPIECE wake
#define HOVER_IDLE_SFX 1024 + 2
#define HOVER_WAKE_SFX_1 1024 + 0
#define HOVER_WAKE_SFX_2 1024 + 1
#include "../bar_hovercraft_common.h"

#define BASEPIECE base
#define HITSPEED <30.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 2
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"


Create()
{
	hide nano;
	hide wake;
	hide cagelight_emit;
	spin cylinder around x-axis speed <30> accelerate <10>;
	turn fan to x-axis <-45> now; 
	spin lfan around y-axis speed <-300> accelerate <30>;
	spin rfan around y-axis speed <300> accelerate <30>;
	readyToBuild = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script HoverCraftMotion();
}

StartBuilding(heading, pitch)
{
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;
	
	if (!readyToBuild){
		turn ldoor to z-axis <180> speed <50.0>;
		turn lhinge2 to z-axis <100> speed <50.0>;
		turn lhinge1 to z-axis <30> speed <50.0>;
		turn rdoor to z-axis <-180> speed <50.0>;
		turn rhinge2 to z-axis <-100> speed <50.0>;
		turn rhinge1 to z-axis <-30> speed <50.0>;
		wait-for-turn rhinge1 around z-axis;
		move box to y-axis [9] speed [10];
		wait-for-move box along y-axis;
		move cagelight to y-axis [2.2] speed [5];
		readyToBuild = 1;
	}

	show nano;
	
	turn turret to y-axis heading speed <160.0>;
	turn gun to x-axis <0.000000> - pitch speed <40.0>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
	
	show cagelight_emit;
	spin cagelight_emit around y-axis speed <225>;
	spin cylinder around x-axis speed <240> accelerate <10>;
	
	readyToBuild = 1;
}

StopBuilding()
{
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	hide nano;
	hide cagelight_emit;
	turn cagelight_emit to y-axis <0> now;

	sleep 6000;
	
	set INBUILDSTANCE to 0;
	
	readyToBuild = 0;
	
	turn turret to y-axis <0> speed <160.0>;
	turn gun to x-axis <0> speed <40.0>;
	wait-for-turn turret around y-axis;
	turn ldoor to z-axis <0> speed <50.0>;
	turn lhinge1 to z-axis <0> speed <50.0>;
	turn lhinge2 to z-axis <0> speed <50.0>;
	turn rdoor to z-axis <0> speed <50.0>;
	turn rhinge1 to z-axis <0> speed <50.0>;
	turn rhinge2 to z-axis <0> speed <50.0>;
	move box to y-axis [0] speed [10];
	move cagelight to y-axis [0] speed [5];
	spin cylinder around x-axis speed <30> accelerate <5>;
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = nano;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		
		explode turret type FALL | NOHEATCLOUD;
		explode nano type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
