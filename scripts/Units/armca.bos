
#include "../recoil_common_includes.h"

#define SIGNAL_BUILD 2
#define SIGNAL_TURNON 4	

piece  base, wingbr, wingbl, wingfr, wingfl, arm1, arm2, nano, emit, doorbl, doorbr, doortl, doortr, thrust, nanolight;

#include "../buildeffect_lua.h"

#define SMOKEPIECE base
#include "../unit_hitbyweaponid_and_smoke.h"

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "../idlehover.h"

Create()
{
	hide emit;
	hide nano;
	hide thrust;
	hide nanolight;
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
}


Activate()
{
	//get PRINT(get GAME_FRAME, 111);
	show thrust;
	turn wingbr to x-axis <-90> speed <90>;
	turn wingbl to x-axis <-90> speed <90>;
	turn wingfr to z-axis <-90> speed <90>;
	turn wingfl to z-axis <90> speed <90>;
}

Deactivate()
{
	//get PRINT(get GAME_FRAME, 22);
	hide thrust;

	turn wingbr to x-axis <0> speed <90>;
	turn wingbl to x-axis <0> speed <90>;
	turn wingfr to z-axis <0> speed <90>;
	turn wingfl to z-axis <0> speed <90>;
}


StartBuilding(heading, pitch)
{

	//get PRINT(get GAME_FRAME, 333,0,0);
	signal SIGNAL_BUILD;
	show nano;
	show nanolight;
	
	turn doorbl to z-axis <-135> speed <270>;
	turn arm1 to x-axis <-60> speed <60>;
	turn doorbr to z-axis  <135> speed <270>;
	turn arm2 to x-axis <-250> speed <-500>;
	turn nano to x-axis <150> speed <300>; 

	set INBUILDSTANCE to 1;
	LUASTARTBUILD;
	show nanolight;
}


StopBuilding()
{
	//get PRINT(get GAME_FRAME, 444);
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;
	hide nanolight;
	hide nano;

	sleep 6000;

	turn doorbl to z-axis <0> speed <270>;
	turn doorbr to z-axis  <0> speed <270>;
	turn arm1 to x-axis <0> speed <60>;
	turn arm2 to x-axis <0> speed <-500>;
	turn nano to x-axis <0> speed <300>;  
	LUASTOPBUILD;
	set INBUILDSTANCE to 0;
	return (0);
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = emit;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode wingbl type BITMAPONLY | NOHEATCLOUD;
		explode wingfr type BITMAPONLY | NOHEATCLOUD;
		explode wingfl type BITMAPONLY | NOHEATCLOUD;
		explode wingbr type BITMAPONLY | NOHEATCLOUD;
		explode doorbl type BITMAPONLY | NOHEATCLOUD;
		explode doorbr type BITMAPONLY | NOHEATCLOUD;
		explode doortl type BITMAPONLY | NOHEATCLOUD;
		explode doortr type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode arm1 type BITMAPONLY | NOHEATCLOUD;
		explode arm2 type BITMAPONLY | NOHEATCLOUD;
		explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode wingbl type BITMAPONLY | NOHEATCLOUD;
		explode wingfr type BITMAPONLY | NOHEATCLOUD;
		explode wingfl type BITMAPONLY | NOHEATCLOUD;
		explode wingbr type BITMAPONLY | NOHEATCLOUD;
		explode doorbl type BITMAPONLY | NOHEATCLOUD;
		explode doorbr type BITMAPONLY | NOHEATCLOUD;
		explode doortl type BITMAPONLY | NOHEATCLOUD;
		explode doortr type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode arm1 type BITMAPONLY | NOHEATCLOUD;
		explode arm2 type BITMAPONLY | NOHEATCLOUD;
		explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode wingbl type BITMAPONLY | NOHEATCLOUD;
		explode wingfr type BITMAPONLY | NOHEATCLOUD;
		explode wingfl type BITMAPONLY | NOHEATCLOUD;
		explode wingbr type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode doorbl type BITMAPONLY | NOHEATCLOUD;
		explode doorbr type BITMAPONLY | NOHEATCLOUD;
		explode doortl type BITMAPONLY | NOHEATCLOUD;
		explode doortr type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode arm1 type BITMAPONLY | NOHEATCLOUD;
		explode arm2 type BITMAPONLY | NOHEATCLOUD;
		explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode wingbl type BITMAPONLY | NOHEATCLOUD;
		explode wingfr type BITMAPONLY | NOHEATCLOUD;
		explode wingfl type BITMAPONLY | NOHEATCLOUD;
		explode wingbr type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode doorbl type BITMAPONLY | NOHEATCLOUD;
		explode doorbr type BITMAPONLY | NOHEATCLOUD;
		explode doortl type BITMAPONLY | NOHEATCLOUD;
		explode doortr type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode arm1 type BITMAPONLY | NOHEATCLOUD;
		explode arm2 type BITMAPONLY | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
