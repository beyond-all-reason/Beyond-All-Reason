

#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, pad, head1, head2, head3, head4, nano1, nano2, nano3, nano4, cagelight1, cagelight_emit1, cagelight2, cagelight_emit2;

static-var  buildAnimPiece;

// Signal definitions
#define SIGNAL_TURNON 4

#define WATER_ROCK_UNITSIZE 22
#include "../floatmotion.h"

#define BASEPIECE base
#define HITSPEED <15.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 100
#include "../unit_hitbyweaponid_and_smoke.h"



Create()
{
	hide pad;
	hide nano1;
	hide nano4;
	hide nano3;
	hide nano2;
	hide cagelight_emit1;
	hide cagelight_emit2;
	hide pad;
	buildAnimPiece = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}

QueryNanoPiece(pieceIndex)
{
	buildAnimPiece = (buildAnimPiece + 1) % 4;
	pieceIndex = nano1 + buildAnimPiece;
}

Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	turn head1 to y-axis <-60.0> speed <225.0>;
	turn head2 to y-axis <60.0> speed <225.0>;
	turn head3 to y-axis <-60.0> speed <225.0>;
	turn head4 to y-axis <60.0> speed <225.0>;
	wait-for-turn head1 around y-axis;
	
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	sleep 5000;
	
	turn head1 to y-axis <0.0> speed <225.0>;
	turn head2 to y-axis <0.0> speed <225.0>;
	turn head3 to y-axis <0.0> speed <225.0>;
	turn head4 to y-axis <0.0> speed <225.0>;
	wait-for-turn head1 around y-axis;
				
	FACTORY_CLOSE_BUILD;
}

StartBuilding()
{
	show nano1;
	show nano4;
	show nano3;
	show nano2;
	
	show cagelight_emit1;
	show cagelight_emit2;
	spin cagelight1 around y-axis speed <200> accelerate <1>;
	spin cagelight2 around y-axis speed <-200> accelerate <1>;
	sleep 150;
	return (0);
}

StopBuilding()
{
	hide nano1;
	hide nano4;
	hide nano3;
	hide nano2;
	
	hide cagelight_emit1;
	hide cagelight_emit2;
	stop-spin cagelight1 around y-axis decelerate <1>;
	stop-spin cagelight2 around y-axis decelerate <1>;
	sleep 150;
	return (0);
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
	return (0);
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode head3 type BITMAPONLY | NOHEATCLOUD;
		explode nano3 type BITMAPONLY | NOHEATCLOUD;
		explode head4 type BITMAPONLY | NOHEATCLOUD;
		explode nano4 type BITMAPONLY | NOHEATCLOUD;
		explode head1 type BITMAPONLY | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FALL | NOHEATCLOUD;
		explode head4 type FALL | NOHEATCLOUD;
		explode nano4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head2 type SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head1 type SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode head3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
