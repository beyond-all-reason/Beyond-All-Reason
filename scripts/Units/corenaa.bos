
#include "../recoil_common_includes.h"

piece  flare1, flare2, mount, gunbase, guna, gunb, base;

static-var  restore_delay, gun_1;
static-var  Stunned;

// Signal definitions
#define SIGNAL_AIM1 256


#define WATER_ROCK_UNITSIZE 12
#include "../floatmotion.h"

#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 200
#define RECOIL_POWER 20000
#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide flare1;
	hide flare2;
	hide flare1;
	hide flare2;
	restore_delay = 3000;
	gun_1 = 0;
    spin mount around y-axis speed <25.0>;
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}
Stop()
{
    spin mount around y-axis speed <0.0>;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
    turn gunbase to x-axis <-30> speed <25.0>;
    spin mount around y-axis speed <25.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
	    call-script Stop();
	} else {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 3000;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	//return (1);
	stop-spin mount around y-axis;
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn mount to y-axis heading speed <670.159341>;
	turn gunbase to x-axis <0.0> - pitch speed <670.159341>;
	wait-for-turn mount around y-axis;
	wait-for-turn gunbase around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( gun_1 == 0 )
	{
	    emit-sfx 1024 + 0 from flare1;
		move guna to z-axis [-3.999994] now;
		move guna to z-axis [0.000000] speed [15.000000];
	}
	if( gun_1 == 1 )
	{
	    emit-sfx 1024 + 0 from flare2;
		move gunb to z-axis [-3.999994] now;
		move gunb to z-axis [0.000000] speed [15.000000];
	}
	gun_1 = !gun_1;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = gunbase;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare1 + gun_1;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode mount type BITMAPONLY | NOHEATCLOUD;
		explode gunbase type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode mount type FALL | NOHEATCLOUD;
		explode gunbase type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type FALL | NOHEATCLOUD;
		explode flare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type SMOKE | FALL | NOHEATCLOUD;
		explode mount type SMOKE | FALL | NOHEATCLOUD;
		explode gunbase type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mount type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode gunbase type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
