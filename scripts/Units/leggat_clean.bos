
#include "../recoil_common_includes.h"

piece body, bars, tracks, turret, sleeve, barrel, flare, smoke1, smoke2;

static-var  restore_delay, wpn1_lasthead;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_MOVE 1
#define SIGNAL_SHOOT1 16


#define VD_PIECE1 smoke1
#define VD_PIECE2 smoke2
#define VD_AMPHIBIOUS
#define VD_DIRTCEG 1024 + 1
#include "../vehicle_dirt_cegs.h"


#define BASEPIECE body
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 6
#define MAXTILT 50

RockUnit(anglex, anglez)
{
	turn body to x-axis anglex speed <50.0>;
	turn body to z-axis <0> - anglez speed <50.0>;
	wait-for-turn body around z-axis;
	wait-for-turn body around x-axis;
	turn body to z-axis <0.0> speed <20.0>;
	turn body to x-axis <0.0> speed <20.0>;
}

Create()
{
	hide smoke1;
	hide flare;
	hide smoke2;
	restore_delay = 200;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

StartMoving(reversing)
{  
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	start-script Vehicle_Dirt_Ceg();
}


StopMoving()
{
	signal SIGNAL_MOVE;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.0> speed <50.0>;
	turn sleeve to x-axis <0.0> speed <25.0>;
	spin barrel around z-axis speed <600.0>;
	sleep restore_delay;
	spin barrel around z-axis speed <300.0>;
	sleep (restore_delay / 2);
	spin barrel around z-axis speed <150.0>;
	sleep (restore_delay / 4);
	stop-spin barrel around z-axis;
	wpn1_lasthead = 0xbadface;
	set-signal-mask 0;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	turn turret to y-axis heading speed <120.0>;
	turn sleeve to x-axis <0.0> - pitch speed <65.0>;
	if ((wpn1_lasthead == 0xbadface) OR ABSOLUTE_GREATER_THAN(WRAPDELTA(heading - wpn1_lasthead), <20>))
	{
		wpn1_lasthead = 0xbadface;
		wait-for-turn turret around y-axis;
		wait-for-turn sleeve around x-axis;
	}
	wpn1_lasthead = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	spin barrel around z-axis speed <900.0>;
	return (1);
}

Shot1(zero)
{
	signal SIGNAL_SHOOT1;
	set-signal-mask SIGNAL_SHOOT1;
	emit-sfx 1024 + 0 from flare;
	return(1);
}

QueryWeapon1(pieceIndex)
{
		pieceIndex = flare;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = sleeve;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode sleeve type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode body type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type SMOKE | FALL | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode body type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
