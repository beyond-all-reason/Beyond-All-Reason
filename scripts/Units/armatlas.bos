
#include "../recoil_common_includes.h"

piece  base, link, body, w_glass, jetl, jetr, thrustl, thrustr, thrustm, backwing, centerwing, centerpadd, rhookbase, rhookext1, rhookext2, rhook, lhookbase, lhookext1, lhookext2, lhook;


#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 200

#define IDLEHOVERSCALE 16
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "../idlehover.h"



Create()
{
	hide link;
	hide thrustl;
	hide thrustr;
	hide thrustm;
	hide link;
	turn jetl to x-axis <-90.0> now;
	turn jetr to x-axis <-90.0> now;
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
}



QueryTransport(pieceIndex)
{
	pieceIndex = 1;
}


BeginTransport(targetHeight)
{
	move link to y-axis [0.0] - targetHeight now;

}

Activate()
{
	show thrustl;
	show thrustr;
	show thrustm;
}

Deactivate()
{
	hide thrustl;
	hide thrustr;
	hide thrustm;
}

EndTransport()
{
}

MoveRate0()
{
	turn jetl to x-axis <-90.0> speed <150.0>;
	turn jetr to x-axis <-90.0> speed <150.0>;

}

MoveRate1()
{
	turn jetl to x-axis <-70.0> speed <75.0>;
	turn jetr to x-axis <-70.0> speed <75.0>;
}

MoveRate2()
{
	turn jetl to x-axis <-50.0> speed <55.0>;
	turn jetr to x-axis <-50.0> speed <55.0>;

}

MoveRate3()
{
	turn jetl to x-axis <0.0> speed <85.0>;
	turn jetr to x-axis <0.0> speed <85.0>;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode backwing type BITMAPONLY | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode jetl type BITMAPONLY | NOHEATCLOUD;
		explode jetr type BITMAPONLY | NOHEATCLOUD;
		explode backwing type BITMAPONLY | NOHEATCLOUD;
		explode rhookext1 type FALL | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode jetl type BITMAPONLY | NOHEATCLOUD;
		explode jetr type BITMAPONLY | NOHEATCLOUD;
		explode backwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		explode rhookext1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | NOHEATCLOUD;
	explode base type BITMAPONLY | NOHEATCLOUD;
	explode jetl type BITMAPONLY | NOHEATCLOUD;
	explode jetr type BITMAPONLY | NOHEATCLOUD;
	explode backwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode rhookext1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	return corpsetype;
}
