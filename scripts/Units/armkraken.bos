
#include "../recoil_common_includes.h"

piece  base, turret, r1arm, r2arm, l1arm, l2arm, rcannon1, rcannon2, lcannon1, lcannon2, rflare1, rflare2, lflare1, lflare2;

static-var  gun_1;

// Signal definitions
#define SIGNAL_AIM1 256

#define WATER_ROCK_UNITSIZE 13
#include "../floatmotion.h"


#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100
#define RECOIL_POWER 20000
#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide lflare1;
	hide rflare1;
	hide lflare2;
	hide rflare2;
	hide rflare1;
	hide rflare2;
	hide lflare1;
	hide lflare2;
	gun_1 = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret to y-axis heading speed <150.0>;
	turn turret to x-axis <0.0> - pitch speed <150.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	return (1);
}

FireWeapon1()
{
	if( gun_1 == 0 )
	{
		emit-sfx 1024 + 0 from rflare1;
		move rcannon1 to z-axis [-12.0] speed [60.0];
		sleep 120;
		move rcannon1 to z-axis [0.0] speed [20.0];
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		emit-sfx 1024 + 0 from lflare1;
		move lcannon1 to z-axis [-12.0] speed [60.0];
		sleep 120;
		move lcannon1 to z-axis [0.0] speed [20.0];
		gun_1 = 2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		emit-sfx 1024 + 0 from rflare2;
		move rcannon2 to z-axis [-12.0] speed [60.0];
		sleep 120;
		move rcannon2 to z-axis [0.0] speed [20.0];
		gun_1 = 3;
		return (0);
	}
	if( gun_1 == 3 )
	{
		emit-sfx 1024 + 0 from lflare2;
		move lcannon2 to z-axis [-12.0] speed [60.0];
		sleep 120;
		move lcannon2 to z-axis [0.0] speed [20.0];
		gun_1 = 0;
		return (0);
	}
}

QueryWeapon1(pieceIndex)
{
	if( gun_1 == 0 )
	{
		pieceIndex = rflare1;
	}
	if( gun_1 == 1 )
	{
		pieceIndex = lflare1;
	}
	if( gun_1 == 2 )
	{
		pieceIndex = rflare2;
	}
	if( gun_1 == 3 )
	{
		pieceIndex = lflare2;
	}
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode rcannon1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rcannon2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lcannon1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lcannon2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lflare1 type BITMAPONLY | NOHEATCLOUD;
		explode lflare2 type BITMAPONLY | NOHEATCLOUD;
		explode rflare1 type BITMAPONLY | NOHEATCLOUD;
		explode rflare2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		explode rcannon1 type FALL | NOHEATCLOUD;
		explode rcannon2 type FALL | NOHEATCLOUD;
		explode lcannon1 type FALL | NOHEATCLOUD;
		explode lcannon2 type FALL | NOHEATCLOUD;
		explode rflare1 type FALL | NOHEATCLOUD;
		explode rflare2 type FALL | NOHEATCLOUD;
		explode lflare1 type FALL | NOHEATCLOUD;
		explode lflare2 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type SMOKE | FALL | NOHEATCLOUD;
		explode rcannon1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rcannon2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode lcannon1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode lcannon2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rflare1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rflare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lflare1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lflare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rcannon1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rcannon2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lcannon1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lcannon2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rflare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rflare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lflare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lflare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return corpsetype;
}
