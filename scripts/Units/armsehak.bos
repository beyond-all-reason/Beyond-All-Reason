
#include "../recoil_common_includes.h"

piece  base, fanfr, fanfl, fanbr, fanbl, cowlfr, cowlfl, cowlbr, cowlbl, dish, turret, wing1, wingr;

// Signal definitions
#define SIGNAL_MOVE 1

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 4
#define MAXTILT 100



#include "../air_barrelroll.h"

Create()
{
	start-script BarrelRoll();
}

Activate()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	spin fanfr around y-axis speed <200> accelerate <10>;
	turn cowlfr to x-axis <15> speed <5>; // plus X turns it forward
	spin fanfl around y-axis speed <200> accelerate <10>;
	turn cowlfl to x-axis <15> speed <5>; // plus X turns it forward
	spin fanbr around y-axis speed <200> accelerate <10>;
	turn cowlbr to x-axis <15> speed <5>; // plus X turns it forward
	spin fanbl around y-axis speed <200> accelerate <10>;
	turn cowlbl to x-axis <15> speed <5>; // plus X turns it forward
		
	sleep 675;

	turn turret to x-axis <-180> speed <180>;

	sleep 681;

	spin dish around y-axis speed <60> accelerate <1>;
	sleep 679;

	turn wing1 to z-axis <-90> speed <30>;
	turn wingr to z-axis <90> speed <30>;
}

Deactivate()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;

	turn wing1 to z-axis <0> speed <30>;
	turn wingr to z-axis <0> speed <30>;
	sleep 679;

	stop-spin dish around y-axis decelerate <1>;
	sleep 679;

	turn turret to x-axis <0> speed <180>;

	sleep 681;

	stop-spin fanfr around y-axis decelerate <10>;
	turn cowlfr to x-axis <0> speed <5>; // plus X turns it forward
	stop-spin fanfl around y-axis decelerate <10>;
	turn cowlfl to x-axis <0> speed <5>; // plus X turns it forward
	stop-spin fanbr around y-axis decelerate <10>;
	turn cowlbr to x-axis <0> speed <5>; // plus X turns it forward
	stop-spin fanbl around y-axis decelerate <10>;
	turn cowlbl to x-axis <0> speed <5>; // plus X turns it forward
		 
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cowlfr type BITMAPONLY | NOHEATCLOUD;
		explode fanfr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cowlbr type BITMAPONLY | NOHEATCLOUD;
		explode fanbr type BITMAPONLY | NOHEATCLOUD;
		explode wingr type BITMAPONLY | NOHEATCLOUD;
		explode wing1 type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode dish type BITMAPONLY | NOHEATCLOUD;
		explode cowlbl type BITMAPONLY | NOHEATCLOUD;
		explode fanbl type BITMAPONLY | NOHEATCLOUD;
		explode cowlfl type BITMAPONLY | NOHEATCLOUD;
		explode fanfl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cowlfr type BITMAPONLY | NOHEATCLOUD;
		explode fanfr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cowlbr type BITMAPONLY | NOHEATCLOUD;
		explode fanbr type BITMAPONLY | NOHEATCLOUD;
		explode wingr type BITMAPONLY | NOHEATCLOUD;
		explode wing1 type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode dish type BITMAPONLY | NOHEATCLOUD;
		explode cowlbl type BITMAPONLY | NOHEATCLOUD;
		explode fanbl type BITMAPONLY | NOHEATCLOUD;
		explode cowlfl type BITMAPONLY | NOHEATCLOUD;
		explode fanfl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cowlfr type BITMAPONLY | NOHEATCLOUD;
		explode fanfr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cowlbr type BITMAPONLY | NOHEATCLOUD;
		explode fanbr type BITMAPONLY | NOHEATCLOUD;
		explode wingr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode wing1 type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cowlbl type BITMAPONLY | NOHEATCLOUD;
		explode fanbl type BITMAPONLY | NOHEATCLOUD;
		explode cowlfl type BITMAPONLY | NOHEATCLOUD;
		explode fanfl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
    explode base type BITMAPONLY | NOHEATCLOUD;
    explode cowlfr type BITMAPONLY | NOHEATCLOUD;
    explode fanfr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode cowlbr type BITMAPONLY | NOHEATCLOUD;
    explode fanbr type BITMAPONLY | NOHEATCLOUD;
    explode wingr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode wing1 type BITMAPONLY | NOHEATCLOUD;
    explode turret type BITMAPONLY | NOHEATCLOUD;
    explode dish type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
    explode cowlbl type BITMAPONLY | NOHEATCLOUD;
    explode fanbl type BITMAPONLY | NOHEATCLOUD;
    explode cowlfl type BITMAPONLY | NOHEATCLOUD;
    explode fanfl type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
