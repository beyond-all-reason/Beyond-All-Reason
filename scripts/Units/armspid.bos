#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"


// One sixth of the full cycle duration, in millisecond
// The larger this value the slower the walk animation
//#define WALK_PERIOD 100


piece	flare, base, turret, barrel, leg1a, leg1b, leg2a, leg2b, leg3a, leg3b, leg4a, leg4b, leg5a, leg5b, leg6a, leg6b, aimy1, emplight;

static-var Static_Var_1, fire_count, statechg_DesiredState, statechg_StateChanging, firing, notBuilding, open, maxreloadtime, restore_delay, wpn1_lasthead, animSpeed, maxSpeed, animFramesPerKeyframe, bMoving;

Activatescr()
{
	sleep 1;
	return (0);
}

Deactivatescr()
{
	sleep 1;
	return (0);
}

#define SIG_AIM 2
#define SIG_FIRE1 4
#define SIG_BUILD	5
#define SIG_WALK 8
#define SMOKEPIECE1 body

Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from C:\Users\ptasz\Documents\GitHub\support\Animation_sources\armspid_anim_walk.blend 
	//set-signal-mask SIG_WALK;
	if (bMoving) { //Frame:4
			turn leg1a to x-axis <-3.803232> speed <114.096974> / animSpeed; //delta=3.80 
			turn leg1a to z-axis <-0.253780> speed <7.613403> / animSpeed; //delta=0.25 
			turn leg1a to y-axis <-54.068167> speed <422.045141> / animSpeed; //delta=-14.07 
			turn leg1b to x-axis <4.284088> speed <128.522628> / animSpeed; //delta=-4.28 
			turn leg1b to z-axis <-22.872808> speed <686.184232> / animSpeed; //delta=22.87 
			turn leg1b to y-axis <1.527276> speed <45.818276> / animSpeed; //delta=1.53 
			turn leg2a to x-axis <7.879442> speed <236.383259> / animSpeed; //delta=-7.88 
			turn leg2a to z-axis <13.635297> speed <409.058911> / animSpeed; //delta=-13.64 
			turn leg2a to y-axis <8.549190> speed <256.475695> / animSpeed; //delta=8.55 
			turn leg2b to x-axis <-6.689244> speed <200.677331> / animSpeed; //delta=6.69 
			turn leg2b to z-axis <-22.223142> speed <666.694270> / animSpeed; //delta=22.22 
			turn leg2b to y-axis <-4.455378> speed <133.661342> / animSpeed; //delta=-4.46 
			turn leg3a to x-axis <-1.776800> speed <53.304002> / animSpeed; //delta=1.78 
			turn leg3a to z-axis <-9.966842> speed <299.005251> / animSpeed; //delta=9.97 
			turn leg3a to y-axis <31.157216> speed <272.928007> / animSpeed; //delta=-9.10 
			turn leg4a to x-axis <1.989696> speed <59.690887> / animSpeed; //delta=-1.99 
			turn leg4a to z-axis <-2.210145> speed <66.304352> / animSpeed; //delta=2.21 
			turn leg4a to y-axis <-42.128480> speed <63.854551> / animSpeed; //delta=-2.13 
			turn leg4b to x-axis <-1.758497> speed <52.754916> / animSpeed; //delta=1.76 
			turn leg4b to z-axis <3.871298> speed <116.138949> / animSpeed; //delta=-3.87 
			turn leg4b to y-axis <-0.714010> speed <21.420314> / animSpeed; //delta=-0.71 
			turn leg5a to x-axis <3.793397> speed <113.801897> / animSpeed; //delta=-3.79 
			turn leg5a to z-axis <-13.085118> speed <392.553554> / animSpeed; //delta=13.09 
			turn leg5a to y-axis <9.924738> speed <297.742136> / animSpeed; //delta=9.92 
			turn leg5b to x-axis <-8.529898> speed <255.896939> / animSpeed; //delta=8.53 
			turn leg5b to z-axis <32.969880> speed <989.096394> / animSpeed; //delta=-32.97 
			turn leg5b to y-axis <5.518906> speed <165.567166> / animSpeed; //delta=5.52 
			turn leg6a to x-axis <4.548910> speed <136.467295> / animSpeed; //delta=-4.55 
			turn leg6a to z-axis <8.298538> speed <248.956143> / animSpeed; //delta=-8.30 
			turn leg6a to y-axis <33.635871> speed <190.923834> / animSpeed; //delta=-6.36 
			turn leg6b to x-axis <-1.224515> speed <36.735441> / animSpeed; //delta=1.22 
			turn leg6b to z-axis <-13.835951> speed <415.078527> / animSpeed; //delta=13.84 
			turn leg6b to y-axis <-4.614504> speed <138.435119> / animSpeed; //delta=-4.61 
		sleep ((33*animSpeed) -1);
	}
	while(bMoving) {
		if (bMoving) { //Frame:7
			turn base to z-axis <1.000000> speed <30.000000> / animSpeed; //delta=-1.00 
			turn base to y-axis <-1.500000> speed <45.000001> / animSpeed; //delta=-1.50 
			turn leg1a to x-axis <-13.792899> speed <299.689982> / animSpeed; //delta=9.99 
			turn leg1a to z-axis <37.025694> speed <1118.384221> / animSpeed; //delta=-37.28 
			turn leg1a to y-axis <-69.391874> speed <459.711210> / animSpeed; //delta=-15.32 
			turn leg1b to x-axis <12.867867> speed <257.513389> / animSpeed; //delta=-8.58 
			turn leg1b to z-axis <-64.104221> speed <1236.942409> / animSpeed; //delta=41.23 
			turn leg1b to y-axis <9.202802> speed <230.265791> / animSpeed; //delta=7.68 
			turn leg2a to x-axis <2.983980> speed <146.863863> / animSpeed; //delta=4.90 
			turn leg2a to z-axis <11.271614> speed <70.910478> / animSpeed; //delta=2.36 
			turn leg2a to y-axis <18.113312> speed <286.923654> / animSpeed; //delta=9.56 
			turn leg2b to x-axis <-4.907707> speed <53.446111> / animSpeed; //delta=-1.78 
			turn leg2b to z-axis <-22.360332> speed <4.115684> / animSpeed; //delta=0.14 
			turn leg2b to y-axis <-3.994751> speed <13.818800> / animSpeed; //delta=0.46 
			turn leg3a to x-axis <-0.168756> speed <48.241314> / animSpeed; //delta=-1.61 
			turn leg3a to z-axis <-19.773906> speed <294.211944> / animSpeed; //delta=9.81 
			turn leg3a to y-axis <22.985502> speed <245.151404> / animSpeed; //delta=-8.17 
			turn leg3b to x-axis <1.628864> speed <66.469874> / animSpeed; //delta=2.22 
			turn leg3b to z-axis <19.095445> speed <410.822432> / animSpeed; //delta=-13.69 
			turn leg3b to y-axis <0.093693> speed <18.484156> / animSpeed; //delta=0.62 
			turn leg4a to x-axis <11.831055> speed <295.240756> / animSpeed; //delta=-9.84 
			turn leg4a to z-axis <-32.371743> speed <904.847940> / animSpeed; //delta=30.16 
			turn leg4a to y-axis <-56.598772> speed <434.108758> / animSpeed; //delta=-14.47 
			turn leg4b to x-axis <-9.049144> speed <218.719414> / animSpeed; //delta=7.29 
			turn leg4b to z-axis <54.631285> speed <1522.799606> / animSpeed; //delta=-50.76 
			turn leg4b to y-axis <5.732056> speed <193.381985> / animSpeed; //delta=6.45 
			turn leg5a to x-axis <7.405729> speed <108.369976> / animSpeed; //delta=-3.61 
			turn leg5a to z-axis <-26.768112> speed <410.489819> / animSpeed; //delta=13.68 
			turn leg5a to y-axis <28.671474> speed <562.402096> / animSpeed; //delta=18.75 
			turn leg5b to x-axis <-11.012224> speed <74.469792> / animSpeed; //delta=2.48 
			turn leg5b to z-axis <46.624237> speed <409.630726> / animSpeed; //delta=-13.65 
			turn leg5b to y-axis <7.343926> speed <54.750617> / animSpeed; //delta=1.83 
			turn leg6a to x-axis <1.870687> speed <80.346685> / animSpeed; //delta=2.68 
			turn leg6a to z-axis <10.925008> speed <78.794095> / animSpeed; //delta=-2.63 
			turn leg6a to y-axis <19.998833> speed <409.111136> / animSpeed; //delta=-13.64 
			turn leg6b to x-axis <-0.882754> speed <10.252817> / animSpeed; //delta=-0.34 
			turn leg6b to z-axis <-22.086880> speed <247.527874> / animSpeed; //delta=8.25 
			turn leg6b to y-axis <-2.411006> speed <66.104953> / animSpeed; //delta=2.20 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:10
			turn base to z-axis <2.000000> speed <30.000000> / animSpeed; //delta=-1.00 
			turn base to y-axis <-3.000000> speed <45.000001> / animSpeed; //delta=-1.50 
			turn leg1a to x-axis <7.199865> speed <629.782894> / animSpeed; //delta=-20.99 
			turn leg1a to z-axis <18.035842> speed <569.695560> / animSpeed; //delta=18.99 
			turn leg1a to y-axis <-62.167924> speed <216.718487> / animSpeed; //delta=7.22 
			turn leg1b to x-axis <-5.977007> speed <565.346232> / animSpeed; //delta=18.84 
			turn leg1b to z-axis <-30.952406> speed <994.554466> / animSpeed; //delta=-33.15 
			turn leg1b to y-axis <3.205238> speed <179.926918> / animSpeed; //delta=-6.00 
			turn leg2a to x-axis <7.592363> speed <138.251498> / animSpeed; //delta=-4.61 
			turn leg2a to z-axis <16.624271> speed <160.579685> / animSpeed; //delta=-5.35 
			turn leg2a to y-axis <27.113179> speed <269.996012> / animSpeed; //delta=9.00 
			turn leg2b to x-axis <-5.008522> speed <3.024446> / animSpeed; //delta=0.10 
			turn leg2b to z-axis <-31.119855> speed <262.785689> / animSpeed; //delta=8.76 
			turn leg2b to y-axis <-2.685105> speed <39.289402> / animSpeed; //delta=1.31 
			turn leg3a to x-axis <1.714872> speed <56.508852> / animSpeed; //delta=-1.88 
			turn leg3a to z-axis <-16.968550> speed <84.160703> / animSpeed; //delta=-2.81 
			turn leg3a to y-axis <13.657572> speed <279.837913> / animSpeed; //delta=-9.33 
			turn leg3b to x-axis <-1.156888> speed <83.572537> / animSpeed; //delta=2.79 
			turn leg3b to z-axis <28.303208> speed <276.232880> / animSpeed; //delta=-9.21 
			turn leg3b to y-axis <1.221285> speed <33.827750> / animSpeed; //delta=1.13 
			turn leg4a to x-axis <15.960649> speed <123.887841> / animSpeed; //delta=-4.13 
			turn leg4a to z-axis <-32.648082> speed <8.290176> / animSpeed; //delta=0.28 
			turn leg4a to y-axis <-62.960212> speed <190.843204> / animSpeed; //delta=-6.36 
			turn leg4b to x-axis <-9.538830> speed <14.690584> / animSpeed; //delta=0.49 
			turn leg4b to z-axis <56.727771> speed <62.894568> / animSpeed; //delta=-2.10 
			turn leg4b to y-axis <6.202560> speed <14.115120> / animSpeed; //delta=0.47 
			turn leg5a to x-axis <8.325115> speed <27.581585> / animSpeed; //delta=-0.92 
			turn leg5a to z-axis <-21.848109> speed <147.600115> / animSpeed; //delta=-4.92 
			turn leg5a to y-axis <19.275287> speed <281.885612> / animSpeed; //delta=-9.40 
			turn leg5b to x-axis <-9.999401> speed <30.384694> / animSpeed; //delta=-1.01 
			turn leg5b to z-axis <30.678259> speed <478.379346> / animSpeed; //delta=15.95 
			turn leg5b to y-axis <6.937750> speed <12.185292> / animSpeed; //delta=-0.41 
			turn leg6a to x-axis <2.282489> speed <12.354058> / animSpeed; //delta=-0.41 
			turn leg6a to z-axis <16.639859> speed <171.445526> / animSpeed; //delta=-5.71 
			turn leg6a to y-axis <25.666143> speed <170.019306> / animSpeed; //delta=5.67 
			turn leg6b to x-axis <-1.142675> speed <7.797628> / animSpeed; //delta=0.26 
			turn leg6b to z-axis <-17.713197> speed <131.210478> / animSpeed; //delta=-4.37 
			turn leg6b to y-axis <-2.869579> speed <13.757213> / animSpeed; //delta=-0.46 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:13
			turn base to x-axis <-4.301008> speed <129.030243> / animSpeed; //delta=4.30 
			turn base to z-axis <0.887162> speed <33.385138> / animSpeed; //delta=1.11 
			turn base to y-axis <-1.504237> speed <44.872886> / animSpeed; //delta=1.50 
			turn leg1a to x-axis <9.425072> speed <66.756220> / animSpeed; //delta=-2.23 
			turn leg1a to z-axis <10.870601> speed <214.957221> / animSpeed; //delta=7.17 
			turn leg1a to y-axis <-49.694725> speed <374.195978> / animSpeed; //delta=12.47 
			turn leg1b to x-axis <-2.937392> speed <91.188462> / animSpeed; //delta=-3.04 
			turn leg1b to z-axis <-3.862035> speed <812.711130> / animSpeed; //delta=-27.09 
			turn leg1b to y-axis <4.743830> speed <46.157744> / animSpeed; //delta=1.54 
			turn leg2a to x-axis <0.181066> speed <222.338907> / animSpeed; //delta=7.41 
			turn leg2a to z-axis <-0.597877> speed <516.664439> / animSpeed; //delta=17.22 
			turn leg2a to y-axis <8.821999> speed <548.735400> / animSpeed; //delta=-18.29 
			turn leg2b to x-axis <-6.047571> speed <31.171455> / animSpeed; //delta=1.04 
			turn leg2b to z-axis <-19.315521> speed <354.130026> / animSpeed; //delta=-11.80 
			turn leg2b to y-axis <-3.693885> speed <30.263396> / animSpeed; //delta=-1.01 
			turn leg3a to x-axis <4.810405> speed <92.865983> / animSpeed; //delta=-3.10 
			turn leg3a to z-axis <-7.986392> speed <269.464717> / animSpeed; //delta=-8.98 
			turn leg3a to y-axis <32.743920> speed <572.590442> / animSpeed; //delta=19.09 
			turn leg3b to z-axis <10.800453> speed <525.082651> / animSpeed; //delta=17.50 
			turn leg3b to y-axis <0.675254> speed <16.380939> / animSpeed; //delta=-0.55 
			turn leg4a to x-axis <3.758045> speed <366.078140> / animSpeed; //delta=12.20 
			turn leg4a to z-axis <2.736962> speed <1061.551328> / animSpeed; //delta=-35.39 
			turn leg4a to y-axis <-48.006189> speed <448.620690> / animSpeed; //delta=14.95 
			turn leg4b to x-axis <-0.058681> speed <284.404479> / animSpeed; //delta=-9.48 
			turn leg4b to z-axis <7.665591> speed <1471.865383> / animSpeed; //delta=49.06 
			turn leg4b to y-axis <-0.343809> speed <196.391054> / animSpeed; //delta=-6.55 
			turn leg5a to x-axis <12.985267> speed <139.804555> / animSpeed; //delta=-4.66 
			turn leg5a to z-axis <-13.899124> speed <238.469532> / animSpeed; //delta=-7.95 
			turn leg5a to y-axis <4.354245> speed <447.631277> / animSpeed; //delta=-14.92 
			turn leg5b to x-axis <-7.048789> speed <88.518381> / animSpeed; //delta=-2.95 
			turn leg5b to z-axis <20.616928> speed <301.839942> / animSpeed; //delta=10.06 
			turn leg5b to y-axis <4.295182> speed <79.277020> / animSpeed; //delta=-2.64 
			turn leg6a to x-axis <2.018192> speed <7.928902> / animSpeed; //delta=0.26 
			turn leg6a to z-axis <13.542277> speed <92.927464> / animSpeed; //delta=3.10 
			turn leg6a to y-axis <39.134699> speed <404.056677> / animSpeed; //delta=13.47 
			turn leg6b to x-axis <0.555245> speed <50.937604> / animSpeed; //delta=-1.70 
			turn leg6b to z-axis <-4.165544> speed <406.429600> / animSpeed; //delta=-13.55 
			turn leg6b to y-axis <-3.523957> speed <19.631340> / animSpeed; //delta=-0.65 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:16
			turn base to x-axis <-0.000000> speed <129.030243> / animSpeed; //delta=-4.30 
			turn base to z-axis <-0.000000> speed <26.614862> / animSpeed; //delta=0.89 
			turn base to y-axis <0.000000> speed <45.127116> / animSpeed; //delta=1.50 
			turn leg1a to x-axis <4.548910> speed <146.284864> / animSpeed; //delta=4.88 
			turn leg1a to z-axis <-8.298538> speed <575.074180> / animSpeed; //delta=19.17 
			turn leg1a to y-axis <-33.635868> speed <481.765720> / animSpeed; //delta=16.06 
			turn leg1b to x-axis <-1.224515> speed <51.386312> / animSpeed; //delta=-1.71 
			turn leg1b to z-axis <13.835951> speed <530.939573> / animSpeed; //delta=-17.70 
			turn leg1b to y-axis <4.614504> speed <3.879774> / animSpeed; //delta=-0.13 
			turn leg2a to x-axis <3.793397> speed <108.369910> / animSpeed; //delta=-3.61 
			turn leg2a to z-axis <13.085118> speed <410.489875> / animSpeed; //delta=-13.68 
			turn leg2a to y-axis <-9.924738> speed <562.402096> / animSpeed; //delta=-18.75 
			turn leg2b to x-axis <-8.529898> speed <74.469817> / animSpeed; //delta=2.48 
			turn leg2b to z-axis <-32.969880> speed <409.630777> / animSpeed; //delta=13.65 
			turn leg2b to y-axis <-5.518906> speed <54.750630> / animSpeed; //delta=-1.83 
			turn leg3a to x-axis <1.989696> speed <84.621261> / animSpeed; //delta=2.82 
			turn leg3a to z-axis <2.210145> speed <305.896126> / animSpeed; //delta=-10.20 
			turn leg3a to y-axis <42.128480> speed <281.536812> / animSpeed; //delta=9.38 
			turn leg3b to x-axis <-1.758497> speed <17.740519> / animSpeed; //delta=0.59 
			turn leg3b to z-axis <-3.871298> speed <440.152528> / animSpeed; //delta=14.67 
			turn leg4a to x-axis <-1.776800> speed <166.045346> / animSpeed; //delta=5.53 
			turn leg4a to z-axis <9.966842> speed <216.896390> / animSpeed; //delta=-7.23 
			turn leg4a to y-axis <-31.157216> speed <505.469208> / animSpeed; //delta=16.85 
			turn leg4b to x-axis <3.844526> speed <117.096217> / animSpeed; //delta=-3.90 
			turn leg4b to z-axis <-5.401364> speed <392.008658> / animSpeed; //delta=13.07 
			turn leg4b to y-axis <0.522445> speed <25.987621> / animSpeed; //delta=0.87 
			turn leg5a to x-axis <7.879442> speed <153.174753> / animSpeed; //delta=5.11 
			turn leg5a to z-axis <-13.635297> speed <7.914815> / animSpeed; //delta=-0.26 
			turn leg5a to y-axis <-8.549190> speed <387.103037> / animSpeed; //delta=-12.90 
			turn leg5b to x-axis <-6.689244> speed <10.786324> / animSpeed; //delta=-0.36 
			turn leg5b to z-axis <22.223142> speed <48.186438> / animSpeed; //delta=-1.61 
			turn leg5b to y-axis <4.455378> speed <4.805871> / animSpeed; //delta=0.16 
			turn leg6a to x-axis <-3.803232> speed <174.642740> / animSpeed; //delta=5.82 
			turn leg6a to z-axis <0.253780> speed <398.654897> / animSpeed; //delta=13.29 
			turn leg6a to y-axis <54.068167> speed <448.004026> / animSpeed; //delta=14.93 
			turn leg6b to x-axis <4.284088> speed <111.865276> / animSpeed; //delta=-3.73 
			turn leg6b to z-axis <22.872808> speed <811.150555> / animSpeed; //delta=-27.04 
			turn leg6b to y-axis <-1.527276> speed <59.900444> / animSpeed; //delta=2.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:19
			turn base to z-axis <-1.000000> speed <30.000000> / animSpeed; //delta=1.00 
			turn base to y-axis <1.500000> speed <45.000001> / animSpeed; //delta=1.50 
			turn leg1a to x-axis <1.870687> speed <80.346685> / animSpeed; //delta=2.68 
			turn leg1a to z-axis <-10.925008> speed <78.794095> / animSpeed; //delta=2.63 
			turn leg1a to y-axis <-19.998831> speed <409.111085> / animSpeed; //delta=13.64 
			turn leg1b to x-axis <-0.882754> speed <10.252817> / animSpeed; //delta=-0.34 
			turn leg1b to z-axis <22.086880> speed <247.527874> / animSpeed; //delta=-8.25 
			turn leg1b to y-axis <2.411006> speed <66.104953> / animSpeed; //delta=-2.20 
			turn leg2a to x-axis <7.405729> speed <108.369976> / animSpeed; //delta=-3.61 
			turn leg2a to z-axis <26.768112> speed <410.489819> / animSpeed; //delta=-13.68 
			turn leg2a to y-axis <-28.671474> speed <562.402096> / animSpeed; //delta=-18.75 
			turn leg2b to x-axis <-11.012224> speed <74.469792> / animSpeed; //delta=2.48 
			turn leg2b to z-axis <-46.624237> speed <409.630726> / animSpeed; //delta=13.65 
			turn leg2b to y-axis <-7.343926> speed <54.750617> / animSpeed; //delta=-1.83 
			turn leg3a to x-axis <11.831055> speed <295.240756> / animSpeed; //delta=-9.84 
			turn leg3a to z-axis <32.371743> speed <904.847940> / animSpeed; //delta=-30.16 
			turn leg3a to y-axis <56.598772> speed <434.108758> / animSpeed; //delta=14.47 
			turn leg3b to x-axis <-9.049144> speed <218.719414> / animSpeed; //delta=7.29 
			turn leg3b to z-axis <-54.631285> speed <1522.799606> / animSpeed; //delta=50.76 
			turn leg3b to y-axis <-5.732056> speed <193.381985> / animSpeed; //delta=-6.45 
			turn leg4a to x-axis <-0.168756> speed <48.241314> / animSpeed; //delta=-1.61 
			turn leg4a to z-axis <19.773906> speed <294.211944> / animSpeed; //delta=-9.81 
			turn leg4a to y-axis <-22.985502> speed <245.151404> / animSpeed; //delta=8.17 
			turn leg4b to x-axis <1.628864> speed <66.469874> / animSpeed; //delta=2.22 
			turn leg4b to z-axis <-19.095445> speed <410.822432> / animSpeed; //delta=13.69 
			turn leg4b to y-axis <-0.093693> speed <18.484156> / animSpeed; //delta=-0.62 
			turn leg5a to x-axis <2.983980> speed <146.863863> / animSpeed; //delta=4.90 
			turn leg5a to z-axis <-11.271614> speed <70.910478> / animSpeed; //delta=-2.36 
			turn leg5a to y-axis <-18.113312> speed <286.923654> / animSpeed; //delta=-9.56 
			turn leg5b to x-axis <-4.907707> speed <53.446111> / animSpeed; //delta=-1.78 
			turn leg5b to z-axis <22.360332> speed <4.115684> / animSpeed; //delta=-0.14 
			turn leg5b to y-axis <3.994751> speed <13.818800> / animSpeed; //delta=-0.46 
			turn leg6a to x-axis <-13.792898> speed <299.689956> / animSpeed; //delta=9.99 
			turn leg6a to z-axis <-37.025691> speed <1118.384119> / animSpeed; //delta=37.28 
			turn leg6a to y-axis <69.391874> speed <459.711210> / animSpeed; //delta=15.32 
			turn leg6b to x-axis <12.867867> speed <257.513389> / animSpeed; //delta=-8.58 
			turn leg6b to z-axis <64.104221> speed <1236.942409> / animSpeed; //delta=-41.23 
			turn leg6b to y-axis <-9.202802> speed <230.265791> / animSpeed; //delta=-7.68 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:22
			turn base to z-axis <-2.000000> speed <30.000000> / animSpeed; //delta=1.00 
			turn base to y-axis <3.000000> speed <45.000001> / animSpeed; //delta=1.50 
			turn leg1a to x-axis <2.282489> speed <12.354064> / animSpeed; //delta=-0.41 
			turn leg1a to z-axis <-16.639857> speed <171.445475> / animSpeed; //delta=5.71 
			turn leg1a to y-axis <-25.666143> speed <170.019357> / animSpeed; //delta=-5.67 
			turn leg1b to x-axis <-1.142675> speed <7.797628> / animSpeed; //delta=0.26 
			turn leg1b to z-axis <17.713197> speed <131.210478> / animSpeed; //delta=4.37 
			turn leg1b to y-axis <2.869579> speed <13.757213> / animSpeed; //delta=0.46 
			turn leg2a to x-axis <8.325115> speed <27.581585> / animSpeed; //delta=-0.92 
			turn leg2a to z-axis <21.848109> speed <147.600115> / animSpeed; //delta=4.92 
			turn leg2a to y-axis <-19.275287> speed <281.885612> / animSpeed; //delta=9.40 
			turn leg2b to x-axis <-9.999401> speed <30.384694> / animSpeed; //delta=-1.01 
			turn leg2b to z-axis <-30.678259> speed <478.379346> / animSpeed; //delta=-15.95 
			turn leg2b to y-axis <-6.937750> speed <12.185292> / animSpeed; //delta=0.41 
			turn leg3a to x-axis <15.960649> speed <123.887841> / animSpeed; //delta=-4.13 
			turn leg3a to z-axis <32.648082> speed <8.290176> / animSpeed; //delta=-0.28 
			turn leg3a to y-axis <62.960212> speed <190.843204> / animSpeed; //delta=6.36 
			turn leg3b to x-axis <-9.538830> speed <14.690584> / animSpeed; //delta=0.49 
			turn leg3b to z-axis <-56.727771> speed <62.894568> / animSpeed; //delta=2.10 
			turn leg3b to y-axis <-6.202560> speed <14.115120> / animSpeed; //delta=-0.47 
			turn leg4a to x-axis <1.714872> speed <56.508852> / animSpeed; //delta=-1.88 
			turn leg4a to z-axis <16.968550> speed <84.160703> / animSpeed; //delta=2.81 
			turn leg4a to y-axis <-13.657572> speed <279.837913> / animSpeed; //delta=9.33 
			turn leg4b to x-axis <-1.156888> speed <83.572537> / animSpeed; //delta=2.79 
			turn leg4b to z-axis <-28.303208> speed <276.232880> / animSpeed; //delta=9.21 
			turn leg4b to y-axis <-1.221285> speed <33.827750> / animSpeed; //delta=-1.13 
			turn leg5a to x-axis <7.592363> speed <138.251498> / animSpeed; //delta=-4.61 
			turn leg5a to z-axis <-16.624271> speed <160.579685> / animSpeed; //delta=5.35 
			turn leg5a to y-axis <-27.113179> speed <269.996012> / animSpeed; //delta=-9.00 
			turn leg5b to x-axis <-5.008522> speed <3.024446> / animSpeed; //delta=0.10 
			turn leg5b to z-axis <31.119855> speed <262.785689> / animSpeed; //delta=-8.76 
			turn leg5b to y-axis <2.685105> speed <39.289402> / animSpeed; //delta=-1.31 
			turn leg6a to x-axis <7.199865> speed <629.782894> / animSpeed; //delta=-20.99 
			turn leg6a to z-axis <-18.035845> speed <569.695355> / animSpeed; //delta=-18.99 
			turn leg6a to y-axis <62.167924> speed <216.718487> / animSpeed; //delta=-7.22 
			turn leg6b to x-axis <-5.977007> speed <565.346232> / animSpeed; //delta=18.84 
			turn leg6b to z-axis <30.952406> speed <994.554466> / animSpeed; //delta=33.15 
			turn leg6b to y-axis <-3.205238> speed <179.926918> / animSpeed; //delta=6.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:25
			turn base to x-axis <-4.300000> speed <128.999994> / animSpeed; //delta=4.30 
			turn base to z-axis <-1.000000> speed <30.000000> / animSpeed; //delta=-1.00 
			turn base to y-axis <1.500000> speed <45.000001> / animSpeed; //delta=-1.50 
			turn leg1a to x-axis <2.018192> speed <7.928902> / animSpeed; //delta=0.26 
			turn leg1a to z-axis <-13.542274> speed <92.927490> / animSpeed; //delta=-3.10 
			turn leg1a to y-axis <-39.134696> speed <404.056574> / animSpeed; //delta=-13.47 
			turn leg1b to x-axis <0.555245> speed <50.937604> / animSpeed; //delta=-1.70 
			turn leg1b to z-axis <4.165544> speed <406.429600> / animSpeed; //delta=13.55 
			turn leg1b to y-axis <3.523957> speed <19.631340> / animSpeed; //delta=0.65 
			turn leg2a to x-axis <12.985267> speed <139.804555> / animSpeed; //delta=-4.66 
			turn leg2a to z-axis <13.899128> speed <238.469430> / animSpeed; //delta=7.95 
			turn leg2a to y-axis <-4.354245> speed <447.631264> / animSpeed; //delta=14.92 
			turn leg2b to x-axis <-7.048789> speed <88.518381> / animSpeed; //delta=-2.95 
			turn leg2b to z-axis <-20.616928> speed <301.839942> / animSpeed; //delta=-10.06 
			turn leg2b to y-axis <-4.295182> speed <79.277020> / animSpeed; //delta=2.64 
			turn leg3a to x-axis <3.758045> speed <366.078140> / animSpeed; //delta=12.20 
			turn leg3a to z-axis <-2.736963> speed <1061.551354> / animSpeed; //delta=35.39 
			turn leg3a to y-axis <48.006186> speed <448.620792> / animSpeed; //delta=-14.95 
			turn leg3b to x-axis <-0.058681> speed <284.404479> / animSpeed; //delta=-9.48 
			turn leg3b to z-axis <-7.665591> speed <1471.865383> / animSpeed; //delta=-49.06 
			turn leg3b to y-axis <0.343809> speed <196.391054> / animSpeed; //delta=6.55 
			turn leg4a to x-axis <4.810405> speed <92.865983> / animSpeed; //delta=-3.10 
			turn leg4a to z-axis <7.986394> speed <269.464666> / animSpeed; //delta=8.98 
			turn leg4a to y-axis <-32.743920> speed <572.590442> / animSpeed; //delta=-19.09 
			turn leg4b to z-axis <-10.800453> speed <525.082651> / animSpeed; //delta=-17.50 
			turn leg4b to y-axis <-0.675254> speed <16.380939> / animSpeed; //delta=0.55 
			turn leg5a to x-axis <0.181067> speed <222.338893> / animSpeed; //delta=7.41 
			turn leg5a to z-axis <0.597877> speed <516.664438> / animSpeed; //delta=-17.22 
			turn leg5a to y-axis <-8.822000> speed <548.735374> / animSpeed; //delta=18.29 
			turn leg5b to x-axis <-6.047571> speed <31.171455> / animSpeed; //delta=1.04 
			turn leg5b to z-axis <19.315521> speed <354.130026> / animSpeed; //delta=11.80 
			turn leg5b to y-axis <3.693885> speed <30.263396> / animSpeed; //delta=1.01 
			turn leg6a to x-axis <9.425072> speed <66.756194> / animSpeed; //delta=-2.23 
			turn leg6a to z-axis <-10.870601> speed <214.957323> / animSpeed; //delta=-7.17 
			turn leg6a to y-axis <49.694722> speed <374.196080> / animSpeed; //delta=-12.47 
			turn leg6b to x-axis <-2.937392> speed <91.188462> / animSpeed; //delta=-3.04 
			turn leg6b to z-axis <3.862035> speed <812.711130> / animSpeed; //delta=27.09 
			turn leg6b to y-axis <-4.743830> speed <46.157744> / animSpeed; //delta=-1.54 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:28
			turn base to x-axis <-0.000000> speed <128.999994> / animSpeed; //delta=-4.30 
			turn base to z-axis <0.000000> speed <30.000000> / animSpeed; //delta=-1.00 
			turn base to y-axis <-0.000000> speed <45.000001> / animSpeed; //delta=-1.50 
			turn leg1a to x-axis <-3.803232> speed <174.642746> / animSpeed; //delta=5.82 
			turn leg1a to z-axis <-0.253780> speed <398.654820> / animSpeed; //delta=-13.29 
			turn leg1a to y-axis <-54.068167> speed <448.004129> / animSpeed; //delta=-14.93 
			turn leg1b to x-axis <4.284088> speed <111.865276> / animSpeed; //delta=-3.73 
			turn leg1b to z-axis <-22.872808> speed <811.150555> / animSpeed; //delta=27.04 
			turn leg1b to y-axis <1.527276> speed <59.900444> / animSpeed; //delta=-2.00 
			turn leg2a to x-axis <7.879442> speed <153.174753> / animSpeed; //delta=5.11 
			turn leg2a to z-axis <13.635297> speed <7.914917> / animSpeed; //delta=0.26 
			turn leg2a to y-axis <8.549190> speed <387.103050> / animSpeed; //delta=12.90 
			turn leg2b to x-axis <-6.689244> speed <10.786324> / animSpeed; //delta=-0.36 
			turn leg2b to z-axis <-22.223142> speed <48.186438> / animSpeed; //delta=1.61 
			turn leg2b to y-axis <-4.455378> speed <4.805871> / animSpeed; //delta=-0.16 
			turn leg3a to x-axis <-1.776800> speed <166.045346> / animSpeed; //delta=5.53 
			turn leg3a to z-axis <-9.966842> speed <216.896365> / animSpeed; //delta=7.23 
			turn leg3a to y-axis <31.157216> speed <505.469106> / animSpeed; //delta=-16.85 
			turn leg3b to x-axis <3.844526> speed <117.096217> / animSpeed; //delta=-3.90 
			turn leg3b to z-axis <5.401364> speed <392.008658> / animSpeed; //delta=-13.07 
			turn leg3b to y-axis <-0.522445> speed <25.987621> / animSpeed; //delta=-0.87 
			turn leg4a to x-axis <1.989696> speed <84.621261> / animSpeed; //delta=2.82 
			turn leg4a to z-axis <-2.210145> speed <305.896178> / animSpeed; //delta=10.20 
			turn leg4a to y-axis <-42.128480> speed <281.536812> / animSpeed; //delta=-9.38 
			turn leg4b to x-axis <-1.758497> speed <17.740519> / animSpeed; //delta=0.59 
			turn leg4b to z-axis <3.871298> speed <440.152528> / animSpeed; //delta=-14.67 
			turn leg5a to x-axis <3.793397> speed <108.369896> / animSpeed; //delta=-3.61 
			turn leg5a to z-axis <-13.085118> speed <410.489873> / animSpeed; //delta=13.68 
			turn leg5a to y-axis <9.924738> speed <562.402122> / animSpeed; //delta=18.75 
			turn leg5b to x-axis <-8.529898> speed <74.469817> / animSpeed; //delta=2.48 
			turn leg5b to z-axis <32.969880> speed <409.630777> / animSpeed; //delta=-13.65 
			turn leg5b to y-axis <5.518906> speed <54.750630> / animSpeed; //delta=1.83 
			turn leg6a to x-axis <4.548910> speed <146.284864> / animSpeed; //delta=4.88 
			turn leg6a to z-axis <8.298538> speed <575.074180> / animSpeed; //delta=-19.17 
			turn leg6a to y-axis <33.635871> speed <481.765515> / animSpeed; //delta=-16.06 
			turn leg6b to x-axis <-1.224515> speed <51.386312> / animSpeed; //delta=-1.71 
			turn leg6b to z-axis <-13.835951> speed <530.939573> / animSpeed; //delta=17.70 
			turn leg6b to y-axis <-4.614504> speed <3.879774> / animSpeed; //delta=0.13 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from MotionControl()!
StopWalking() {
	turn base to x-axis <0.000000> speed <43.010081>;
	turn base to y-axis <0.000000> speed <15.042372>;
	turn base to z-axis <0.000000> speed <11.128379>;
	turn leg1a to x-axis <0.000000> speed <209.927631>;
	turn leg1a to y-axis <-39.999995> speed <160.588573>;
	turn leg1a to z-axis <0.000000> speed <372.794740>;
	turn leg1b to x-axis <0.000000> speed <188.448744>;
	turn leg1b to y-axis <0.000000> speed <76.755264>;
	turn leg1b to z-axis <0.000000> speed <412.314136>;
	turn leg2a to x-axis <0.000000> speed <78.794420>;
	turn leg2a to y-axis <0.000000> speed <187.467365>;
	turn leg2a to z-axis <0.000000> speed <172.221480>;
	turn leg2b to x-axis <0.000000> speed <66.892444>;
	turn leg2b to y-axis <0.000000> speed <44.553781>;
	turn leg2b to z-axis <0.000000> speed <222.231423>;
	turn leg3a to x-axis <0.000000> speed <122.026047>;
	turn leg3a to y-axis <40.254816> speed <190.863481>;
	turn leg3a to z-axis <0.000000> speed <353.850451>;
	turn leg3b to x-axis <3.844526> speed <94.801493>;
	turn leg3b to y-axis <-0.522445> speed <65.463685>;
	turn leg3b to z-axis <5.401364> speed <507.599869>;
	turn leg4a to x-axis <0.000000> speed <122.026047>;
	turn leg4a to y-axis <-39.999995> speed <190.863481>;
	turn leg4a to z-axis <0.000000> speed <353.850443>;
	turn leg4b to x-axis <0.000000> speed <94.801493>;
	turn leg4b to y-axis <0.000000> speed <65.463685>;
	turn leg4b to z-axis <0.000000> speed <507.599869>;
	turn leg5a to x-axis <0.000000> speed <74.112964>;
	turn leg5a to y-axis <0.000000> speed <187.467374>;
	turn leg5a to z-axis <0.000000> speed <172.221479>;
	turn leg5b to x-axis <0.000000> speed <85.298980>;
	turn leg5b to y-axis <0.000000> speed <55.189055>;
	turn leg5b to z-axis <0.000000> speed <329.698798>;
	turn leg6a to x-axis <0.000000> speed <209.927631>;
	turn leg6a to y-axis <39.999999> speed <160.588505>;
	turn leg6a to z-axis <0.000000> speed <372.794706>;
	turn leg6b to x-axis <0.000000> speed <188.448744>;
	turn leg6b to y-axis <0.000000> speed <76.755264>;
	turn leg6b to z-axis <0.000000> speed <412.314136>;
}
// REMEMBER TO animspeed = 3 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 3; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 2) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<1) animSpeed=1;
		if (animspeed>6) animSpeed = 6;
		sleep 98;
	}
}
StartMoving(){
	signal SIG_WALK;
	bMoving=TRUE;
	start-script Walk();
}
StopMoving(){
	signal SIG_WALK;
	bMoving=FALSE;
	call-script StopWalking();
}

#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 2
#define MAXTILT 100
HitByWeapon(anglex, anglez, damage)	// angle[x|z] is always [-500;500], damage is multiplied by 100
{
	var amount;//, speedz, speedx;
	amount = damage / (100 * UNITSIZE);
	if (amount < 3  ) return (0);
	if (amount > MAXTILT) amount = MAXTILT;
	//get PRINT(anglex, anglez, amount, damage);
	//speedz = HITSPEED * get ABS(anglez) / 500; //nevermind this, the random error this produces actually looks better than the accurate version
	turn BASEPIECE to z-axis (anglez * amount) / 100  speed HITSPEED;
	turn BASEPIECE to x-axis <0> - (anglex * amount) /100 speed HITSPEED;
	wait-for-turn BASEPIECE around z-axis;
	wait-for-turn BASEPIECE around x-axis;
	turn BASEPIECE to z-axis <0.000000> speed HITSPEED / 4;
	turn BASEPIECE to x-axis <0.000000> speed HITSPEED / 4;
}
HitByWeaponId(anglex, anglez, weaponid, dmg) //weaponID is always 0,lasers and flamers give angles of 0
{
	start-script HitByWeapon(dmg, anglez,anglex); //I dont know why param order must be switched, and this also runs a frame later :(
	return (100); //return damage percent
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	call-script Activatescr();
	turn turret to y-axis Static_Var_1 speed <100.000000>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
	return (0);
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script Deactivatescr();
	return (0);
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	return (0);
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	call-script InitState();
	hide flare;
	hide emplight;
	notBuilding = 1;
	fire_count=4;
	animSpeed = 3;
	maxreloadtime=0;
	open=FALSE;
	firing=FALSE;
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 250;
	}
	start-script SmokeUnit();	
	restore_delay=2000;
}

SetMaxReloadTime(t)
{
	restore_delay=5000;
}



QueryPrimary(piecenum)
{
	piecenum=flare;
}

FireEmp()
{
	show emplight;
	sleep 250;
	hide emplight;
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	start-script FireEmp();
	return(1);
}

StartBuilding(heading, pitch)
{
	show flare;
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn turret to y-axis heading speed <100.000000>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	hide flare;
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 1000;
	set-signal-mask 0;
	signal SIG_BUILD;	
}


SweetSpot(piecenum)
{
	piecenum = turret;
}


QueryNanoPiece(piecenum)
{
	piecenum=flare;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.000000> speed <150.000000>;
	//turn turret to x-axis <0.000000> speed <150.000000>;
	wait-for-turn turret around y-axis;
	//wait-for-turn turret around x-axis;
	wpn1_lasthead = 1000000;
	open=FALSE;
	firing=FALSE;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIG_AIM;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

Activate()
{
	start-script RequestState(0);
	return (0);
}

Deactivate()
{
	start-script RequestState(1);
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	turn turret to y-axis heading speed <150.000000>;
	turn turret to x-axis <0.000000> - pitch speed <100.000000>;
	if (((get ABS(wpn1_lasthead - heading)) > 65536) OR(((get ABS(wpn1_lasthead - heading)) > 1300) AND ((get ABS(wpn1_lasthead - heading)) < 64236)))
	{
		wpn1_lasthead = 1000000;
		wait-for-turn turret around y-axis;
		wait-for-turn turret around x-axis;
	}
	start-script RestoreAfterDelay();
	wpn1_lasthead = heading;
	return (1);
}


AimFromPrimary(piecenum)
{
	piecenum = turret;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		//explode leg6a type BITMAPONLY | NOHEATCLOUD;
		//explode leg6b type BITMAPONLY | NOHEATCLOUD;
		//explode leg4a type BITMAPONLY | NOHEATCLOUD;
		//explode leg4b type BITMAPONLY | NOHEATCLOUD;
		//explode leg2a type BITMAPONLY | NOHEATCLOUD;
		//explode leg2b type BITMAPONLY | NOHEATCLOUD;
		//explode leg1a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg1b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg3a type BITMAPONLY | NOHEATCLOUD;
		//explode leg3b type BITMAPONLY | NOHEATCLOUD;
		//explode leg5a type BITMAPONLY | NOHEATCLOUD;
		//explode leg5b type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		explode barrel type FALL | NOHEATCLOUD;
		explode flare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg6a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg6b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg4a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg4b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg2a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg2b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg1a type FALL | NOHEATCLOUD;
		//explode leg1b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg3a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg3b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg5a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg5b type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type SMOKE | FALL | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode leg6a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg6b type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode leg4a type SMOKE | FALL | NOHEATCLOUD;
		//explode leg4b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg2a type SMOKE | FALL | NOHEATCLOUD;
		//explode leg2b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg1a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg1b type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg3a type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg3b type SMOKE | FALL | NOHEATCLOUD;
		//explode leg5a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg5b type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leg6a type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode leg6b type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode leg4a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg4b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg2a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg2b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg1a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg1b type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode leg3a type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode leg3b type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode leg5a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode leg5b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
