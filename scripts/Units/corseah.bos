
#include "../recoil_common_includes.h"

piece  base, link, thrustrr, thrustrl, thrustfr, thrustfl, 
       thrustrra, thrustrla, thrustfra, thrustfla;


#define SIGNAL_MOVE 1
#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "../idlehover.h"


Create()
{
	hide thrustfra;
	hide thrustfla;
	hide thrustrla;
	hide thrustrra;
	
	turn thrustfra to x-axis <-90> now; 
	turn thrustfla to x-axis <-90> now; 
	turn thrustrla to x-axis <-90> now; 
	turn thrustrra to x-axis <-90> now; 
	
	hide link;
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
}



QueryTransport(pieceIndex)
{
	pieceIndex = link;
}

BeginTransport(targetHeight)
{
	move link to y-axis [0.0] - targetHeight now;
}

EndTransport()
{
	move link to y-axis [0.0] now;
}

Activate()
{
	show thrustfra;
	show thrustfla;
	show thrustrla;
	show thrustrra;

}

Deactivate()
{
	hide thrustfra;
	hide thrustfla;
	hide thrustrla;
	hide thrustrra;
}


StopMoving()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	turn thrustrr to x-axis <0.0> speed <80.0>;
	turn thrustrl to x-axis <0.0> speed <80.0>;
	turn thrustfr to x-axis <0.0> speed <80.0>;
	turn thrustfl to x-axis <0.0> speed <80.0>;
}


MoveRate0()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	turn thrustrr to x-axis <0.0> speed <80.0>;
	turn thrustrl to x-axis <0.0> speed <80.0>;
	turn thrustfr to x-axis <0.0> speed <80.0>;
	turn thrustfl to x-axis <0.0> speed <80.0>;
}

MoveRate1()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	turn thrustrr to x-axis <10.0> speed <60.0>;
	turn thrustrl to x-axis <10.0> speed <60.0>;
	turn thrustfr to x-axis <10.0> speed <60.0>;
	turn thrustfl to x-axis <10.0> speed <60.0>;
}

MoveRate2()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	turn thrustrr to x-axis <20.0> speed <45.0>;
	turn thrustrl to x-axis <20.0> speed <45.0>;
	turn thrustfr to x-axis <20.0> speed <45.0>;
	turn thrustfl to x-axis <20.0> speed <45.0>;
}

MoveRate3()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	turn thrustrr to x-axis <0.0> speed <70.0>;
	turn thrustrl to x-axis <0.0> speed <70.0>;
	turn thrustfr to x-axis <0.0> speed <70.0>;
	turn thrustfl to x-axis <0.0> speed <70.0>;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
		explode link type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
		explode link type BITMAPONLY | NOHEATCLOUD;
		explode link type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
		explode link type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
		explode link type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
