
#include "../recoil_common_includes.h"

piece  base, flare, turret, spindle, aimpoint;

static-var  gun_1,aimy1velocity, aimy1target, aimy1position;

// Signal definitions
#define SIGNAL_AIM1 256


Create()
{
	hide flare;
	hide aimpoint;
	hide flare;
	gun_1 = 0;
	aimy1velocity = 0;
	aimy1target = 0;
	aimy1position = 0;
	call-script CATT1_Init();
}


#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"


//-------------------------------CONSTANT ACCELERATION TURRET TURNING---------------------------
// MaxVelocity and acceleration are in degrees per frame (not second!)
// Jerk is the minimum velocity of the turret
// A high precision requirement can result in overshoots if desired 
// Author Beherith mysterme@gmail.com. License: GNU GPL v2.
#define CATT1_PIECE_X turret
#define CATT1_PIECE_Y turret

#define CATT1_MAX_VELOCITY <9.0>
#define CATT1_ACCELERATION <0.2>
#define CATT1_JERK <1.0>
#define CATT1_PRECISION <1.2>
#define CATT1_RESTORE_SPEED <1.0>
#define CATT1_PITCH_SPEED <45>
#define CATT_DONTRESTORE

#include "../constant_acceleration_turret_turning_1.h"


AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	//We can do this any time

	call-script CATT1_Aim(heading,pitch);

	return (1);
}


FireWeapon1()
{
	++gun_1;
	if( gun_1 >= 3 )
	{
		gun_1 = 0;
	}
	sleep 175;
	turn spindle to z-axis <120.027473>*gun_1 speed <400.093407>;
	//start-script PositionSpindle();
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}


AimFromWeapon1(pieceIndex)
{
	pieceIndex = aimpoint;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode spindle type FIRE | SMOKE | FALL | BITMAPONLY | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode spindle type BITMAPONLY | NOHEATCLOUD;
		explode flare type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode spindle type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
