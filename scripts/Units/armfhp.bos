
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, doorr1, doorr2, doorl1,doorl2, standr, standl, nanol, nanor, emitl, emitr, cagelight1, cagelight_emit1, cagelight2, cagelight_emit2;
static-var  spray;

// Signal definitions
#define SIGNAL_TURNON 4

#define WATER_ROCK_UNITSIZE 25
#include "../floatmotion.h"


#define BASEPIECE base
#define HITSPEED <15.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide emitr;
	hide emitl;
	hide cagelight_emit1;
	hide cagelight_emit2;

	spray = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}

QueryNanoPiece(pieceIndex)
{
	spray = (spray + 1) % 2;
	pieceIndex = nanol + spray;
}


Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	turn doorr1 to x-axis <170> speed <170>;
	turn doorr2 to x-axis <-90> speed <170>;
	turn doorl1 to x-axis <170> speed <170>;
	turn doorl2 to x-axis <-90> speed <170>;
	wait-for-turn doorr1 around x-axis;

	move standr to y-axis [10] speed [20];
	move standl to y-axis [10] speed [20];
	wait-for-move standr along y-axis;

	turn nanor to y-axis <90.016484> speed <173.0>;
	turn nanol to y-axis <-90.016484> speed <173.0>;
	wait-for-turn nanor around y-axis;
	
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	sleep 5000;
	
	turn nanor to y-axis <0> speed <173.0>;
	turn nanol to y-axis <0> speed <173.0>;
	wait-for-turn nanor around y-axis;
	
	move standr to y-axis [0] speed [20];
	move standl to y-axis [0] speed [20];
	wait-for-move standr along y-axis;
	
	turn doorr1 to x-axis <0> speed <170>;
	turn doorr2 to x-axis <0> speed <170>;
	turn doorl1 to x-axis <0> speed <170>;
	turn doorl2 to x-axis <0> speed <170>;
	wait-for-turn doorr1 around x-axis;
		
	FACTORY_CLOSE_BUILD;
}

StartBuilding()
{
	show emitr;
	show emitl;
	
	show cagelight_emit1;
	show cagelight_emit2;
	spin cagelight1 around y-axis speed <200> accelerate <1>;
	spin cagelight2 around y-axis speed <-200> accelerate <1>;
}

StopBuilding()
{
	hide emitr;
	hide emitl;
	
	hide cagelight_emit1;
	hide cagelight_emit2;
	stop-spin cagelight1 around y-axis decelerate <1>;
	stop-spin cagelight2 around y-axis decelerate <1>;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = base;
	return (0);
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode standl type BITMAPONLY | NOHEATCLOUD;
		explode nanol type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emitl type BITMAPONLY | NOHEATCLOUD;
		explode doorr2 type BITMAPONLY | NOHEATCLOUD;
		explode doorr1 type BITMAPONLY | NOHEATCLOUD;
		explode doorl2 type BITMAPONLY | NOHEATCLOUD;
		explode doorl1 type BITMAPONLY | NOHEATCLOUD;
		explode standr type BITMAPONLY | NOHEATCLOUD;
		explode nanor type BITMAPONLY | NOHEATCLOUD;
		explode emitr type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode standl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanol type FALL | NOHEATCLOUD;
		explode emitl type FALL | NOHEATCLOUD;
		explode doorr2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorr1 type FALL | NOHEATCLOUD;
		explode doorl2 type FALL | NOHEATCLOUD;
		explode doorl1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode standr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanor type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emitr type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode standl type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nanol type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emitl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorr2 type SMOKE | FALL | NOHEATCLOUD;
		explode doorr1 type SMOKE | FALL | NOHEATCLOUD;
		explode doorl2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorl1 type SMOKE | FALL | NOHEATCLOUD;
		explode standr type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nanor type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emitr type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode standl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nanol type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode emitl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorr2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorr1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode doorl2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode doorl1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode standr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nanor type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emitr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
