
#include "../recoil_common_includes.h"

piece  base, turret, flare, barrel, sleeve, rfhip, rfthigh, rfleg, rffoot, lfhip, lfthigh, lfleg, lffoot, lbhip, lbthigh, lbleg, lbankle, rbhip, rbthigh, rbleg, rbankle, aimx1, aimy1;

static-var  isMoving, oldHeading, bSteering, wpn1_lasthead, last_primary_heading, last_primary_pitch, speedmult, trajectoryMode;

#define SIGNAL_MOVE 1
#define SIGNAL_AIM1 256

#define LOW_TRAJECTORY		0
#define HIGH_TRAJECTORY		1

// Generated for N:\animations\armvang_anim_walk_2legs_v2.blend
// Using https://github.com/Beherith/Skeletor_S3O
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
// Author Beherith mysterme@gmail.com. License: GNU GPL v2.

static-var animSpeed, maxSpeed, animFramesPerKeyframe;

lua_UnitScriptDecal(lightIndex, xpos,zpos, heading) 
{
	return 0;
}

Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\armvang_anim_walk_2legs_v2.blend
	set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:6
			move base to y-axis [-0.688000] speed [20.639999] / animSpeed; //delta=-0.69
			turn base to x-axis <0.688000> speed <20.639998> / animSpeed; //delta=-0.69
			turn base to y-axis <-1.675000> speed <50.249989> / animSpeed; //delta=-1.67
			turn lbankle to x-axis <-10.540153> speed <308.237027> / animSpeed; //delta=10.27
			turn lbhip to y-axis <-31.959954> speed <268.427049> / animSpeed; //delta=8.95
			turn lbleg to x-axis <11.373061> speed <344.338339> / animSpeed; //delta=-11.48
			turn lbthigh to x-axis <1.198430> speed <38.051317> / animSpeed; //delta=-1.27
			turn lffoot to x-axis <-8.301529> speed <237.626344> / animSpeed; //delta=7.92
			turn lfhip to y-axis <49.701016> speed <266.842001> / animSpeed; //delta=8.89
			turn lfleg to x-axis <16.435957> speed <443.810395> / animSpeed; //delta=-14.79
			turn lfthigh to x-axis <-8.977117> speed <246.844290> / animSpeed; //delta=8.23
			turn rbankle to x-axis <16.215737> speed <487.975447> / animSpeed; //delta=-16.27
			turn rbhip to y-axis <61.543583> speed <604.080372> / animSpeed; //delta=20.14
			turn rbleg to x-axis <-26.102060> speed <821.930111> / animSpeed; //delta=27.40
			turn rbthigh to x-axis <9.586359> speed <295.455117> / animSpeed; //delta=-9.85
			turn rffoot to x-axis <-28.022390> speed <859.977165> / animSpeed; //delta=28.67
			turn rfhip to y-axis <-71.871212> speed <864.296543> / animSpeed; //delta=-28.81
			turn rfleg to x-axis <35.458927> speed <1181.599051> / animSpeed; //delta=-39.39
			turn rfthigh to x-axis <-24.181906> speed <781.301644> / animSpeed; //delta=26.04
			turn turret to x-axis <-1.688000> speed <50.639998> / animSpeed; //delta=1.69
			turn turret to y-axis <1.675000> speed <50.249989> / animSpeed; //delta=1.67
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:9
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(lffoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lffoot) & 0x0000ffff),   get HEADING(0)); //lffoot
			call-script lua_UnitScriptDecal(2, (get PIECE_XZ(rbankle) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rbankle) & 0x0000ffff),   get HEADING(0)); //lbankle
			move base to y-axis [0.056000] speed [22.319999] / animSpeed; //delta=0.74
			turn base to x-axis <-0.056000> speed <22.320001> / animSpeed; //delta=0.74
			turn base to y-axis <-1.274999> speed <12.0> / animSpeed; //delta=0.40
			turn lbankle to x-axis <-2.959815> speed <227.410145> / animSpeed; //delta=-7.58
			turn lbhip to y-axis <-39.353241> speed <221.798611> / animSpeed; //delta=-7.39
			turn lbleg to x-axis <-9.521305> speed <626.830972> / animSpeed; //delta=20.89
			turn lbthigh to x-axis <14.454956> speed <397.695806> / animSpeed; //delta=-13.26
			turn lffoot to x-axis <-16.307654> speed <240.183747> / animSpeed; //delta=8.01
			turn lfhip to y-axis <54.192859> speed <134.755295> / animSpeed; //delta=4.49
			turn lfleg to x-axis <22.647656> speed <186.350954> / animSpeed; //delta=-6.21
			turn lfthigh to x-axis <-6.740524> speed <67.097810> / animSpeed; //delta=-2.24
			turn rbankle to x-axis <12.469231> speed <112.395168> / animSpeed; //delta=3.75
			turn rbhip to y-axis <52.945721> speed <257.935879> / animSpeed; //delta=-8.60
			turn rbleg to x-axis <-18.329617> speed <233.173284> / animSpeed; //delta=-7.77
			turn rbthigh to x-axis <5.924910> speed <109.843478> / animSpeed; //delta=3.66
			turn rffoot to x-axis <-22.628623> speed <161.812987> / animSpeed; //delta=-5.39
			turn rfhip to y-axis <-60.924345> speed <328.406014> / animSpeed; //delta=10.95
			turn rfleg to x-axis <28.590794> speed <206.043977> / animSpeed; //delta=6.87
			turn rfthigh to x-axis <-24.914961> speed <21.991655> / animSpeed; //delta=0.73
			turn turret to x-axis <-0.694205> speed <29.813853> / animSpeed; //delta=-0.99
			turn turret to y-axis <1.529005> speed <4.379849> / animSpeed; //delta=-0.15
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:12
			move base to y-axis [0.944000] speed [26.640000] / animSpeed; //delta=0.89
			turn base to x-axis <-0.944000> speed <26.639998> / animSpeed; //delta=0.89
			turn base to y-axis <-0.537499> speed <22.125001> / animSpeed; //delta=0.74
			turn lbankle to x-axis <3.242236> speed <186.061525> / animSpeed; //delta=-6.20
			turn lbhip to y-axis <-51.903048> speed <376.494200> / animSpeed; //delta=-12.55
			turn lbleg to x-axis <-27.160512> speed <529.176206> / animSpeed; //delta=17.64
			turn lbthigh to x-axis <23.153472> speed <260.955471> / animSpeed; //delta=-8.70
			turn lffoot to x-axis <-23.677925> speed <221.108130> / animSpeed; //delta=7.37
			turn lfhip to y-axis <58.992521> speed <143.989882> / animSpeed; //delta=4.80
			turn lfleg to x-axis <27.249424> speed <138.053047> / animSpeed; //delta=-4.60
			turn lfthigh to x-axis <-2.555510> speed <125.550407> / animSpeed; //delta=-4.19
			turn rbankle to x-axis <8.166887> speed <129.070315> / animSpeed; //delta=4.30
			turn rbhip to y-axis <45.373339> speed <227.171443> / animSpeed; //delta=-7.57
			turn rbleg to x-axis <-8.993605> speed <280.080342> / animSpeed; //delta=-9.34
			turn rbthigh to x-axis <1.886181> speed <121.161878> / animSpeed; //delta=4.04
			turn rffoot to x-axis <-13.934635> speed <260.819644> / animSpeed; //delta=-8.69
			turn rfhip to y-axis <-51.638225> speed <278.583609> / animSpeed; //delta=9.29
			turn rfleg to x-axis <16.825309> speed <352.964574> / animSpeed; //delta=11.77
			turn rfthigh to x-axis <-17.522871> speed <221.762702> / animSpeed; //delta=-7.39
			turn turret to x-axis <0.356446> speed <31.519525> / animSpeed; //delta=-1.05
			turn turret to y-axis <1.194753> speed <10.027555> / animSpeed; //delta=-0.33
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:15
			move base to y-axis [1.688000] speed [22.320002] / animSpeed; //delta=0.74
			turn base to x-axis <-1.688000> speed <22.319997> / animSpeed; //delta=0.74
			turn base to y-axis <0.800000> speed <40.124991> / animSpeed; //delta=1.34
			turn lbankle to x-axis <13.319817> speed <302.327451> / animSpeed; //delta=-10.08
			turn lbhip to y-axis <-70.328545> speed <552.764921> / animSpeed; //delta=-18.43
			turn lbleg to x-axis <-36.837601> speed <290.312666> / animSpeed; //delta=9.68
			turn lbthigh to x-axis <17.575859> speed <167.328382> / animSpeed; //delta=5.58
			turn lffoot to x-axis <-32.933611> speed <277.670600> / animSpeed; //delta=9.26
			turn lfhip to y-axis <63.676009> speed <140.504641> / animSpeed; //delta=4.68
			turn lfleg to x-axis <30.365730> speed <93.489188> / animSpeed; //delta=-3.12
			turn lfthigh to x-axis <2.804893> speed <160.812106> / animSpeed; //delta=-5.36
			turn rbankle to x-axis <2.953692> speed <156.395851> / animSpeed; //delta=5.21
			turn rbhip to y-axis <38.273600> speed <212.992175> / animSpeed; //delta=-7.10
			turn rbleg to x-axis <1.749834> speed <322.303180> / animSpeed; //delta=-10.74
			turn rbthigh to x-axis <-2.281028> speed <125.016269> / animSpeed; //delta=4.17
			turn rffoot to x-axis <-4.261025> speed <290.208305> / animSpeed; //delta=-9.67
			turn rfhip to y-axis <-45.930184> speed <171.241209> / animSpeed; //delta=5.71
			turn rfleg to x-axis <1.587762> speed <457.126398> / animSpeed; //delta=15.24
			turn rfthigh to x-axis <-4.162535> speed <400.810062> / animSpeed; //delta=-13.36
			turn turret to x-axis <0.959452> speed <18.090185> / animSpeed; //delta=-0.60
			turn turret to y-axis <-0.306625> speed <45.041341> / animSpeed; //delta=-1.50
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:18
			move base to y-axis [2.0] speed [9.359998] / animSpeed; //delta=0.31
			turn base to x-axis <-2.0> speed <9.360002> / animSpeed; //delta=0.31
			turn base to y-axis <3.0> speed <65.999990> / animSpeed; //delta=2.20
			turn lbankle to x-axis <30.845397> speed <525.767395> / animSpeed; //delta=-17.53
			turn lbhip to y-axis <-89.575650> speed <577.413128> / animSpeed; //delta=-19.25
			turn lbthigh to x-axis <5.863149> speed <351.381306> / animSpeed; //delta=11.71
			turn lffoot to x-axis <-38.915495> speed <179.456493> / animSpeed; //delta=5.98
			turn lfhip to y-axis <67.661842> speed <119.574961> / animSpeed; //delta=3.99
			turn lfleg to x-axis <33.531280> speed <94.966506> / animSpeed; //delta=-3.17
			turn lfthigh to x-axis <5.769743> speed <88.945475> / animSpeed; //delta=-2.96
			turn rbankle to x-axis <-4.213604> speed <215.018891> / animSpeed; //delta=7.17
			turn rbhip to y-axis <31.132101> speed <214.244968> / animSpeed; //delta=-7.14
			turn rbleg to x-axis <14.176218> speed <372.791529> / animSpeed; //delta=-12.43
			turn rbthigh to x-axis <-6.990932> speed <141.297114> / animSpeed; //delta=4.71
			turn rffoot to x-axis <4.037852> speed <248.966299> / animSpeed; //delta=-8.30
			turn rfhip to y-axis <-44.345847> speed <47.530125> / animSpeed; //delta=1.58
			turn rfleg to x-axis <-14.057728> speed <469.364703> / animSpeed; //delta=15.65
			turn rfthigh to x-axis <9.757757> speed <417.608767> / animSpeed; //delta=-13.92
			turn turret to y-axis <-3.0> speed <80.801246> / animSpeed; //delta=-2.69
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:21
			move base to y-axis [0.500000] speed [45.0] / animSpeed; //delta=-1.50
			turn base to x-axis <-0.500000> speed <45.0> / animSpeed; //delta=-1.50
			turn base to y-axis <5.0> speed <59.999993> / animSpeed; //delta=2.00
			turn lbankle to x-axis <32.222964> speed <41.327016> / animSpeed; //delta=-1.38
			turn lbhip to y-axis <-99.992631> speed <312.509432> / animSpeed; //delta=-10.42
			turn lbleg to x-axis <-36.365471> speed <12.314626> / animSpeed; //delta=-0.41
			turn lbthigh to x-axis <7.243505> speed <41.410681> / animSpeed; //delta=-1.38
			turn lffoot to x-axis <-37.554924> speed <40.817108> / animSpeed; //delta=-1.36
			turn lfhip to y-axis <71.970338> speed <129.254910> / animSpeed; //delta=4.31
			turn lfleg to x-axis <40.172188> speed <199.227227> / animSpeed; //delta=-6.64
			turn lfthigh to x-axis <-3.380765> speed <274.515226> / animSpeed; //delta=9.15
			turn rbankle to x-axis <-15.479446> speed <337.975237> / animSpeed; //delta=11.27
			turn rbhip to y-axis <25.423325> speed <171.263288> / animSpeed; //delta=-5.71
			turn rbleg to x-axis <27.681121> speed <405.147082> / animSpeed; //delta=-13.50
			turn rbthigh to x-axis <-11.905410> speed <147.434333> / animSpeed; //delta=4.91
			turn rffoot to x-axis <7.119005> speed <92.434615> / animSpeed; //delta=-3.08
			turn rfhip to y-axis <-45.191247> speed <25.361995> / animSpeed; //delta=-0.85
			turn rfleg to x-axis <-19.628039> speed <167.109338> / animSpeed; //delta=5.57
			turn rfthigh to x-axis <10.402458> speed <19.341047> / animSpeed; //delta=-0.64
			turn turret to x-axis <-0.500000> speed <45.0> / animSpeed; //delta=1.50
			turn turret to y-axis <-5.0> speed <59.999993> / animSpeed; //delta=-2.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:24
			move base to y-axis [-0.500000] speed [30.0] / animSpeed; //delta=-1.00
			turn base to x-axis <0.500000> speed <30.0> / animSpeed; //delta=-1.00
			turn base to y-axis <3.0> speed <59.999993> / animSpeed; //delta=-2.00
			turn lbankle to x-axis <27.483083> speed <142.196445> / animSpeed; //delta=4.74
			turn lbhip to y-axis <-84.427360> speed <466.958109> / animSpeed; //delta=15.57
			turn lbleg to x-axis <-37.339944> speed <29.234200> / animSpeed; //delta=0.97
			turn lbthigh to x-axis <11.092879> speed <115.481201> / animSpeed; //delta=-3.85
			turn lffoot to x-axis <-31.454957> speed <182.999004> / animSpeed; //delta=-6.10
			turn lfhip to y-axis <83.096375> speed <333.781099> / animSpeed; //delta=11.13
			turn lfleg to x-axis <42.775771> speed <78.107482> / animSpeed; //delta=-2.60
			turn lfthigh to x-axis <-11.391310> speed <240.316353> / animSpeed; //delta=8.01
			turn rbankle to x-axis <-25.728136> speed <307.460709> / animSpeed; //delta=10.25
			turn rbhip to y-axis <25.771299> speed <10.439227> / animSpeed; //delta=0.35
			turn rbleg to x-axis <42.876451> speed <455.859905> / animSpeed; //delta=-15.20
			turn rbthigh to x-axis <-18.573550> speed <200.044211> / animSpeed; //delta=6.67
			turn rffoot to x-axis <5.103292> speed <60.471417> / animSpeed; //delta=2.02
			turn rfhip to y-axis <-45.704214> speed <15.389031> / animSpeed; //delta=-0.51
			turn rfleg to x-axis <-7.262835> speed <370.956137> / animSpeed; //delta=-12.37
			turn rfthigh to x-axis <1.067874> speed <280.037530> / animSpeed; //delta=9.33
			turn turret to x-axis <-1.500000> speed <30.0> / animSpeed; //delta=1.00
			turn turret to y-axis <-3.0> speed <59.999993> / animSpeed; //delta=2.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:27
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(rffoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rffoot) & 0x0000ffff),   get HEADING(0)); //lffoot
			call-script lua_UnitScriptDecal(2, (get PIECE_XZ(lbankle) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lbankle) & 0x0000ffff),   get HEADING(0)); //lbankle
			move base to y-axis [-1.0] speed [15.0] / animSpeed; //delta=-0.50
			turn base to x-axis <1.0> speed <14.999995> / animSpeed; //delta=-0.50
			turn base to y-axis <2.0> speed <30.0> / animSpeed; //delta=-1.00
			turn lbankle to x-axis <22.482131> speed <150.028554> / animSpeed; //delta=5.00
			turn lbhip to y-axis <-71.144377> speed <398.489492> / animSpeed; //delta=13.28
			turn lbleg to x-axis <-34.562687> speed <83.317721> / animSpeed; //delta=-2.78
			turn lbthigh to x-axis <12.426644> speed <40.012956> / animSpeed; //delta=-1.33
			turn lffoot to x-axis <-29.060648> speed <71.829275> / animSpeed; //delta=-2.39
			turn lfhip to y-axis <80.748955> speed <70.422597> / animSpeed; //delta=-2.35
			turn lfleg to x-axis <44.208854> speed <42.992489> / animSpeed; //delta=-1.43
			turn lfthigh to x-axis <-21.937729> speed <316.392573> / animSpeed; //delta=10.55
			turn rbankle to x-axis <-21.903566> speed <114.737086> / animSpeed; //delta=-3.82
			turn rbhip to y-axis <28.428774> speed <79.724239> / animSpeed; //delta=2.66
			turn rbleg to x-axis <32.822433> speed <301.620539> / animSpeed; //delta=10.05
			turn rbthigh to x-axis <-12.384046> speed <185.685139> / animSpeed; //delta=-6.19
			turn rffoot to x-axis <1.424320> speed <110.369147> / animSpeed; //delta=3.68
			turn rfhip to y-axis <-48.048130> speed <70.317481> / animSpeed; //delta=-2.34
			turn rfleg to x-axis <2.869435> speed <303.968079> / animSpeed; //delta=-10.13
			turn rfthigh to x-axis <-5.290615> speed <190.754671> / animSpeed; //delta=6.36
			turn turret to x-axis <-2.0> speed <14.999992> / animSpeed; //delta=0.50
			turn turret to y-axis <-2.0> speed <30.0> / animSpeed; //delta=1.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			move base to y-axis [-0.688000] speed [9.360001] / animSpeed; //delta=0.31
			turn base to x-axis <0.688000> speed <9.360002> / animSpeed; //delta=0.31
			turn base to y-axis <1.675000> speed <9.750011> / animSpeed; //delta=-0.33
			turn lbankle to x-axis <18.533098> speed <118.470980> / animSpeed; //delta=3.95
			turn lbhip to y-axis <-60.701831> speed <313.276393> / animSpeed; //delta=10.44
			turn lbleg to x-axis <-28.599566> speed <178.893617> / animSpeed; //delta=-5.96
			turn lbthigh to x-axis <10.248474> speed <65.345086> / animSpeed; //delta=2.18
			turn lffoot to x-axis <-27.118576> speed <58.262162> / animSpeed; //delta=-1.94
			turn lfhip to y-axis <70.668375> speed <302.417417> / animSpeed; //delta=-10.08
			turn lfleg to x-axis <42.225667> speed <59.495592> / animSpeed; //delta=1.98
			turn lfthigh to x-axis <-28.405215> speed <194.024569> / animSpeed; //delta=6.47
			turn rbankle to x-axis <-13.769016> speed <244.036512> / animSpeed; //delta=-8.13
			turn rbhip to y-axis <32.662887> speed <127.023384> / animSpeed; //delta=4.23
			turn rbleg to x-axis <13.337841> speed <584.537775> / animSpeed; //delta=19.48
			turn rbthigh to x-axis <-0.307928> speed <362.283537> / animSpeed; //delta=-12.08
			turn rffoot to x-axis <-4.361708> speed <173.580838> / animSpeed; //delta=5.79
			turn rfhip to y-axis <-51.898759> speed <115.518853> / animSpeed; //delta=-3.85
			turn rfleg to x-axis <10.910002> speed <241.217023> / animSpeed; //delta=-8.04
			turn rfthigh to x-axis <-7.071833> speed <53.436544> / animSpeed; //delta=1.78
			turn turret to x-axis <-1.688000> speed <9.360002> / animSpeed; //delta=-0.31
			turn turret to y-axis <-1.675000> speed <9.750011> / animSpeed; //delta=0.33
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:33
			move base to y-axis [0.056000] speed [22.319999] / animSpeed; //delta=0.74
			turn base to x-axis <-0.056000> speed <22.320001> / animSpeed; //delta=0.74
			turn base to y-axis <1.274999> speed <12.0> / animSpeed; //delta=-0.40
			turn lbankle to x-axis <14.192582> speed <130.215482> / animSpeed; //delta=4.34
			turn lbhip to y-axis <-52.007266> speed <260.836933> / animSpeed; //delta=8.69
			turn lbleg to x-axis <-20.561584> speed <241.139453> / animSpeed; //delta=-8.04
			turn lbthigh to x-axis <6.502083> speed <112.391749> / animSpeed; //delta=3.75
			turn lffoot to x-axis <-23.929525> speed <95.671535> / animSpeed; //delta=-3.19
			turn lfhip to y-axis <59.051848> speed <348.495786> / animSpeed; //delta=-11.62
			turn lfleg to x-axis <34.812562> speed <222.393145> / animSpeed; //delta=7.41
			turn lfthigh to x-axis <-28.541344> speed <4.083873> / animSpeed; //delta=0.14
			turn rbankle to x-axis <-6.250842> speed <225.545209> / animSpeed; //delta=-7.52
			turn rbhip to y-axis <40.253351> speed <227.713931> / animSpeed; //delta=7.59
			turn rbleg to x-axis <-7.417658> speed <622.664958> / animSpeed; //delta=20.76
			turn rbthigh to x-axis <12.644216> speed <388.564315> / animSpeed; //delta=-12.95
			turn rffoot to x-axis <-11.456765> speed <212.851699> / animSpeed; //delta=7.10
			turn rfhip to y-axis <-56.296038> speed <131.918376> / animSpeed; //delta=-4.40
			turn rfleg to x-axis <17.133419> speed <186.702495> / animSpeed; //delta=-6.22
			turn rfthigh to x-axis <-5.549246> speed <45.677612> / animSpeed; //delta=-1.52
			turn turret to x-axis <-0.694205> speed <29.813853> / animSpeed; //delta=-0.99
			turn turret to y-axis <-1.529005> speed <4.379849> / animSpeed; //delta=0.15
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:36
			move base to y-axis [0.944000] speed [26.640000] / animSpeed; //delta=0.89
			turn base to x-axis <-0.944000> speed <26.639998> / animSpeed; //delta=0.89
			turn base to y-axis <0.537499> speed <22.125001> / animSpeed; //delta=-0.74
			turn lbankle to x-axis <9.257405> speed <148.055313> / animSpeed; //delta=4.94
			turn lbhip to y-axis <-44.456048> speed <226.536543> / animSpeed; //delta=7.55
			turn lbleg to x-axis <-10.985914> speed <287.270124> / animSpeed; //delta=-9.58
			turn lbthigh to x-axis <2.373449> speed <123.859007> / animSpeed; //delta=4.13
			turn lffoot to x-axis <-18.516148> speed <162.401323> / animSpeed; //delta=-5.41
			turn lfhip to y-axis <49.439020> speed <288.384862> / animSpeed; //delta=-9.61
			turn lfleg to x-axis <22.346670> speed <373.976780> / animSpeed; //delta=12.47
			turn lfthigh to x-axis <-19.755950> speed <263.561820> / animSpeed; //delta=-8.79
			turn rbankle to x-axis <-0.126020> speed <183.744654> / animSpeed; //delta=-6.12
			turn rbhip to y-axis <52.880291> speed <378.808199> / animSpeed; //delta=12.63
			turn rbleg to x-axis <-24.692111> speed <518.233577> / animSpeed; //delta=17.27
			turn rbthigh to x-axis <20.905353> speed <247.834106> / animSpeed; //delta=-8.26
			turn rffoot to x-axis <-19.140234> speed <230.504080> / animSpeed; //delta=7.68
			turn rfhip to y-axis <-60.920090> speed <138.721552> / animSpeed; //delta=-4.62
			turn rfleg to x-axis <21.684415> speed <136.529881> / animSpeed; //delta=-4.55
			turn rfthigh to x-axis <-1.944896> speed <108.130505> / animSpeed; //delta=-3.60
			turn turret to x-axis <0.356446> speed <31.519525> / animSpeed; //delta=-1.05
			turn turret to y-axis <-1.194753> speed <10.027555> / animSpeed; //delta=0.33
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:39
			move base to y-axis [1.688000] speed [22.320002] / animSpeed; //delta=0.74
			turn base to x-axis <-1.688000> speed <22.319997> / animSpeed; //delta=0.74
			turn base to y-axis <-0.800000> speed <40.124991> / animSpeed; //delta=-1.34
			turn lbankle to x-axis <3.903229> speed <160.625290> / animSpeed; //delta=5.35
			turn lbhip to y-axis <-37.436195> speed <210.595598> / animSpeed; //delta=7.02
			turn lbleg to x-axis <-0.108665> speed <326.317466> / animSpeed; //delta=-10.88
			turn lbthigh to x-axis <-1.700830> speed <122.228387> / animSpeed; //delta=4.07
			turn lffoot to x-axis <-11.598463> speed <207.530542> / animSpeed; //delta=-6.92
			turn lfhip to y-axis <43.682632> speed <172.691634> / animSpeed; //delta=-5.76
			turn lfleg to x-axis <6.621296> speed <471.761200> / animSpeed; //delta=15.73
			turn lfthigh to x-axis <-5.345935> speed <432.300452> / animSpeed; //delta=-14.41
			turn rbankle to x-axis <9.275619> speed <282.049181> / animSpeed; //delta=-9.40
			turn rbhip to y-axis <70.882412> speed <540.063638> / animSpeed; //delta=18.00
			turn rbleg to x-axis <-33.926673> speed <277.036878> / animSpeed; //delta=9.23
			turn rbthigh to x-axis <15.702878> speed <156.074245> / animSpeed; //delta=5.20
			turn rffoot to x-axis <-27.045152> speed <237.147532> / animSpeed; //delta=7.90
			turn rfhip to y-axis <-65.338962> speed <132.566185> / animSpeed; //delta=-4.42
			turn rfleg to x-axis <25.009076> speed <99.739835> / animSpeed; //delta=-3.32
			turn rfthigh to x-axis <2.186168> speed <123.931921> / animSpeed; //delta=-4.13
			turn turret to x-axis <0.959452> speed <18.090185> / animSpeed; //delta=-0.60
			turn turret to y-axis <0.306625> speed <45.041328> / animSpeed; //delta=1.50
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:42
			move base to y-axis [2.0] speed [9.359998] / animSpeed; //delta=0.31
			turn base to x-axis <-2.0> speed <9.360002> / animSpeed; //delta=0.31
			turn base to y-axis <-3.0> speed <65.999990> / animSpeed; //delta=-2.20
			turn lbankle to x-axis <-3.943020> speed <235.387456> / animSpeed; //delta=7.85
			turn lbhip to y-axis <-30.398597> speed <211.127943> / animSpeed; //delta=7.04
			turn lbleg to x-axis <12.471154> speed <377.394551> / animSpeed; //delta=-12.58
			turn lbthigh to x-axis <-6.512069> speed <144.337165> / animSpeed; //delta=4.81
			turn lffoot to x-axis <-4.307208> speed <218.737641> / animSpeed; //delta=-7.29
			turn lfhip to y-axis <42.154650> speed <45.839449> / animSpeed; //delta=-1.53
			turn lfleg to x-axis <-9.072409> speed <470.811155> / animSpeed; //delta=15.69
			turn lfthigh to x-axis <8.838742> speed <425.540307> / animSpeed; //delta=-14.18
			turn rbankle to x-axis <25.135858> speed <475.807165> / animSpeed; //delta=-15.86
			turn rbhip to y-axis <89.279049> speed <551.899092> / animSpeed; //delta=18.40
			turn rbleg to x-axis <-33.495565> speed <12.933236> / animSpeed; //delta=-0.43
			turn rbthigh to x-axis <4.517160> speed <335.571552> / animSpeed; //delta=11.19
			turn rffoot to x-axis <-30.201785> speed <94.699002> / animSpeed; //delta=3.16
			turn rfhip to y-axis <-68.983715> speed <109.342586> / animSpeed; //delta=-3.64
			turn rfleg to x-axis <28.614360> speed <108.158539> / animSpeed; //delta=-3.61
			turn rfthigh to x-axis <3.524175> speed <40.140221> / animSpeed; //delta=-1.34
			turn turret to y-axis <3.0> speed <80.801258> / animSpeed; //delta=2.69
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:45
			move base to y-axis [0.500000] speed [45.0] / animSpeed; //delta=-1.50
			turn base to x-axis <-0.500000> speed <45.0> / animSpeed; //delta=-1.50
			turn base to y-axis <-5.0> speed <59.999993> / animSpeed; //delta=-2.00
			turn lbankle to x-axis <-14.106928> speed <304.917266> / animSpeed; //delta=10.16
			turn lbhip to y-axis <-24.801542> speed <167.911646> / animSpeed; //delta=5.60
			turn lbleg to x-axis <25.831412> speed <400.807744> / animSpeed; //delta=-13.36
			turn lbthigh to x-axis <-11.004732> speed <134.779897> / animSpeed; //delta=4.49
			turn lffoot to x-axis <-0.387417> speed <117.593731> / animSpeed; //delta=-3.92
			turn lfhip to y-axis <43.044798> speed <26.704435> / animSpeed; //delta=0.89
			turn lfleg to x-axis <-14.351693> speed <158.378512> / animSpeed; //delta=5.28
			turn lfthigh to x-axis <9.001692> speed <4.888486> / animSpeed; //delta=-0.16
			turn rbankle to x-axis <25.973630> speed <25.133167> / animSpeed; //delta=-0.84
			turn rbhip to y-axis <99.228210> speed <298.474827> / animSpeed; //delta=9.95
			turn rbleg to x-axis <-32.870736> speed <18.744874> / animSpeed; //delta=-0.62
			turn rbthigh to x-axis <5.373624> speed <25.693929> / animSpeed; //delta=-0.86
			turn rffoot to x-axis <-31.093087> speed <26.739064> / animSpeed; //delta=0.89
			turn rfhip to y-axis <-72.873617> speed <116.697060> / animSpeed; //delta=-3.89
			turn rfleg to x-axis <34.599904> speed <179.566322> / animSpeed; //delta=-5.99
			turn rfthigh to x-axis <-4.637291> speed <244.844000> / animSpeed; //delta=8.16
			turn turret to x-axis <-0.500000> speed <45.0> / animSpeed; //delta=1.50
			turn turret to y-axis <5.0> speed <59.999993> / animSpeed; //delta=2.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:48
			move base to y-axis [-0.500000] speed [30.0] / animSpeed; //delta=-1.00
			turn base to x-axis <0.500000> speed <30.0> / animSpeed; //delta=-1.00
			turn base to y-axis <-3.0> speed <59.999993> / animSpeed; //delta=2.00
			turn lbankle to x-axis <-22.559579> speed <253.579507> / animSpeed; //delta=8.45
			turn lbhip to y-axis <-25.266699> speed <13.954691> / animSpeed; //delta=-0.47
			turn lbleg to x-axis <40.701319> speed <446.097225> / animSpeed; //delta=-14.87
			turn lbthigh to x-axis <-17.139468> speed <184.042077> / animSpeed; //delta=6.13
			turn lffoot to x-axis <1.697481> speed <62.546942> / animSpeed; //delta=-2.08
			turn lfhip to y-axis <43.499573> speed <13.643235> / animSpeed; //delta=0.45
			turn lfleg to x-axis <-1.739220> speed <378.374161> / animSpeed; //delta=-12.61
			turn lfthigh to x-axis <-1.211403> speed <306.392843> / animSpeed; //delta=10.21
			turn rbankle to x-axis <22.699078> speed <98.236545> / animSpeed; //delta=3.27
			turn rbhip to y-axis <84.408482> speed <444.591835> / animSpeed; //delta=-14.82
			turn rbleg to x-axis <-34.158217> speed <38.624412> / animSpeed; //delta=1.29
			turn rbthigh to x-axis <9.649990> speed <128.290982> / animSpeed; //delta=-4.28
			turn rffoot to x-axis <-27.790482> speed <99.078144> / animSpeed; //delta=-3.30
			turn rfhip to y-axis <-83.307080> speed <313.003869> / animSpeed; //delta=-10.43
			turn rfleg to x-axis <36.622706> speed <60.684045> / animSpeed; //delta=-2.02
			turn rfthigh to x-axis <-10.929092> speed <188.754011> / animSpeed; //delta=6.29
			turn turret to x-axis <-1.500000> speed <30.0> / animSpeed; //delta=1.00
			turn turret to y-axis <3.0> speed <59.999993> / animSpeed; //delta=-2.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:51
			move base to y-axis [-1.0] speed [15.0] / animSpeed; //delta=-0.50
			turn base to x-axis <1.0> speed <14.999995> / animSpeed; //delta=-0.50
			turn base to y-axis <-2.0> speed <30.0> / animSpeed; //delta=1.00
			turn lbankle to x-axis <-18.707398> speed <115.565418> / animSpeed; //delta=-3.85
			turn lbhip to y-axis <-27.872327> speed <78.168851> / animSpeed; //delta=-2.61
			turn lbleg to x-axis <30.782399> speed <297.567607> / animSpeed; //delta=9.92
			turn lbthigh to x-axis <-10.961176> speed <185.348786> / animSpeed; //delta=-6.18
			turn lffoot to x-axis <5.040909> speed <100.302839> / animSpeed; //delta=-3.34
			turn lfhip to y-axis <45.819494> speed <69.597647> / animSpeed; //delta=2.32
			turn lfleg to x-axis <8.677691> speed <312.507354> / animSpeed; //delta=-10.42
			turn lfthigh to x-axis <-9.179276> speed <239.036173> / animSpeed; //delta=7.97
			turn rbankle to x-axis <18.467757> speed <126.939629> / animSpeed; //delta=4.23
			turn rbhip to y-axis <71.691503> speed <381.509369> / animSpeed; //delta=-12.72
			turn rbleg to x-axis <-31.630736> speed <75.824423> / animSpeed; //delta=-2.53
			turn rbthigh to x-axis <11.008080> speed <40.742702> / animSpeed; //delta=-1.36
			turn rffoot to x-axis <-25.391392> speed <71.972709> / animSpeed; //delta=-2.40
			turn rfhip to y-axis <-81.211345> speed <62.872028> / animSpeed; //delta=2.10
			turn rfleg to x-axis <37.844200> speed <36.644819> / animSpeed; //delta=-1.22
			turn rfthigh to x-axis <-20.236980> speed <279.236643> / animSpeed; //delta=9.31
			turn turret to x-axis <-2.0> speed <14.999992> / animSpeed; //delta=0.50
			turn turret to y-axis <2.0> speed <30.0> / animSpeed; //delta=-1.00
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:54
			move base to y-axis [-0.688000] speed [9.360001] / animSpeed; //delta=0.31
			turn base to x-axis <0.688000> speed <9.360002> / animSpeed; //delta=0.31
			turn base to y-axis <-1.675000> speed <9.750011> / animSpeed; //delta=0.33
			turn lbankle to x-axis <-10.540153> speed <245.017344> / animSpeed; //delta=-8.17
			turn lbhip to y-axis <-31.959954> speed <122.628824> / animSpeed; //delta=-4.09
			turn lbleg to x-axis <11.373061> speed <582.280150> / animSpeed; //delta=19.41
			turn lbthigh to x-axis <1.198430> speed <364.788153> / animSpeed; //delta=-12.16
			turn lffoot to x-axis <-8.301529> speed <400.273132> / animSpeed; //delta=13.34
			turn lfhip to y-axis <49.701016> speed <116.445641> / animSpeed; //delta=3.88
			turn lfleg to x-axis <16.435957> speed <232.747976> / animSpeed; //delta=-7.76
			turn lfthigh to x-axis <-8.977117> speed <6.064747> / animSpeed; //delta=-0.20
			turn rbankle to x-axis <16.215737> speed <67.560628> / animSpeed; //delta=2.25
			turn rbhip to y-axis <61.543583> speed <304.437582> / animSpeed; //delta=-10.15
			turn rbleg to x-axis <-26.102060> speed <165.860284> / animSpeed; //delta=-5.53
			turn rbthigh to x-axis <9.586359> speed <42.651629> / animSpeed; //delta=1.42
			turn rffoot to x-axis <-28.022390> speed <78.929922> / animSpeed; //delta=2.63
			turn rfhip to y-axis <-71.871212> speed <280.204003> / animSpeed; //delta=9.34
			turn rfleg to x-axis <35.458927> speed <71.558184> / animSpeed; //delta=2.39
			turn rfthigh to x-axis <-24.181906> speed <118.347781> / animSpeed; //delta=3.94
			turn turret to x-axis <-1.688000> speed <9.360002> / animSpeed; //delta=-0.31
			turn turret to y-axis <1.675000> speed <9.750011> / animSpeed; //delta=-0.33
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move base to y-axis [0.0] speed [15.0];
	turn base to x-axis <0.0> speed <15.0>;
	turn base to y-axis <0.0> speed <21.999997>;
	turn lbankle to x-axis <-0.265586> speed <175.255798>;
	turn lbhip to y-axis <-40.907523> speed <192.471043>;
	turn lbleg to x-axis <-0.104884> speed <208.943657>;
	turn lbthigh to x-axis <0.0> speed <132.565269>;
	turn lffoot to x-axis <-0.380651> speed <133.424377>;
	turn lfhip to y-axis <40.806282> speed <116.165262>;
	turn lfleg to x-axis <1.642277> speed <157.253733>;
	turn lfthigh to x-axis <-0.748974> speed <144.100151>;
	turn rbankle to x-axis <0.0> speed <162.658482>;
	turn rbhip to y-axis <41.407571> speed <201.360124>;
	turn rbleg to x-axis <1.295611> speed <273.976704>;
	turn rbthigh to x-axis <-0.262145> speed <129.521438>;
	turn rffoot to x-axis <0.643516> speed <286.659055>;
	turn rfhip to y-axis <-43.061327> speed <288.098848>;
	turn rfleg to x-axis <-3.927708> speed <393.866350>;
	turn rfthigh to x-axis <1.861482> speed <260.433881>;
	turn turret to x-axis <0.0> speed <16.879999>;
	turn turret to y-axis <0.0> speed <26.933753>;
}
// REMEMBER TO animspeed = 11 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 3; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 3) / animSpeed;
		if (animSpeed<2) animSpeed=2;
		if (animspeed>6) animSpeed = 6;
		sleep 98;
	}
}

StartMoving(reversing){
	isMoving=TRUE;
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	start-script UnitSpeed();
	start-script Walk();
}

StopMoving(){
	signal SIGNAL_MOVE;
	isMoving = FALSE;
	call-script StopWalking();
}

Steering(heading)
{
	while( 1 )
	{
		heading = get HEADING;

		if ( heading < oldheading )	bSteering=TRUE;
		if ( heading > oldheading )	bSteering=TRUE;
		if (heading == oldheading ) bSteering=FALSE;

		sleep 66;
		oldheading = heading;
	}
}

#define BASEPIECE base
#define HITSPEED <35.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

RockUnit(anglex, anglez)
{

}

Create()
{
	hide flare;
	hide aimx1;
	hide aimy1;
	hide flare;
	isMoving = FALSE;
	bSteering = FALSE;
	oldHeading = get HEADING;
	animSpeed = 3;
	start-script Steering();
	turn lfhip to y-axis <30> now;
	turn rfhip to y-axis <-30> now;
	turn lbhip to y-axis <-54> now;
	turn rbhip to y-axis <54> now;
	speedmult = 70;
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
	trajectoryMode = LOW_TRAJECTORY;
}

Activate()
{
	signal SIGNAL_AIM1;
	trajectoryMode = HIGH_TRAJECTORY;
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
}

Deactivate()
{
	signal SIGNAL_AIM1;
	trajectoryMode = LOW_TRAJECTORY;
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
}



static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned)
	{
        return (1);
    }
	set-signal-mask 0;
	turn aimy1 to y-axis <0.0> speed <36.0>;
	turn aimx1 to x-axis <0.0> speed <30.0>;
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
	wait-for-turn aimy1 around y-axis;
	wait-for-turn aimx1 around x-axis;
	wpn1_lasthead = 0xbadface;
}

SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}

RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep 8000;
	start-script ExecuteRestoreAfterDelay();
}

fireCommon()
{
	emit-sfx 1024 + 0 from flare;
	sleep 1;
	move barrel to z-axis [-10] speed [25];
	move sleeve to z-axis [-0.5] speed [12];
	sleep 751;
	move sleeve to z-axis [0] speed [0.5];
	move barrel to z-axis [0.0] speed [4.0];
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

AimWeapon1(heading, pitch)
{
	if (trajectoryMode == HIGH_TRAJECTORY)
	{
		return(0);
	}

	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	// values in <> are degrees per second
	// otherwise angles are in COB angular unit (cau) - There are 65536 cau in a circle
	// In general, 6 cau per frame ~= 1 degree per second
	turn aimy1 to y-axis heading speed <30.0>;
	turn aimx1 to x-axis <0.0> - pitch speed <45.0>;
	if ( (get ABS(last_primary_heading - heading)>180) OR (get ABS(last_primary_pitch - pitch)>270) )
	{
		// seems to take 3 frames for wait-for-turn to process
		wait-for-turn aimy1 around y-axis;
		wait-for-turn aimx1 around x-axis;
	}
	last_primary_heading=heading;
	last_primary_pitch=pitch;
	start-script RestoreAfterDelay();

	// Prevent low-trajectory "bonus shots" while high-trajectory is reloading
	var reloading;
	reloading = (get GAME_FRAME) < (get WEAPON_RELOADSTATE(2));
	if( reloading )
	{
		return(0);
	}

	return (1);
}

FireWeapon1()
{
	call-script fireCommon();
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = turret;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flare;
}

AimWeapon2(heading, pitch)
{
	if (trajectoryMode == LOW_TRAJECTORY)
	{
		return(0);
	}

	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	// values in <> are degrees per second
	// otherwise angles are in COB angular unit (cau) - There are 65536 cau in a circle
	// In general, 6 cau per frame ~= 1 degree per second
	turn aimy1 to y-axis heading speed <30.0>;
	turn aimx1 to x-axis <0.0> - pitch speed <45.0>;
	if ( (get ABS(last_primary_heading - heading)>180) OR (get ABS(last_primary_pitch - pitch)>270) )
	{
		// seems to take 3 frames for wait-for-turn to process
		wait-for-turn aimy1 around y-axis;
		wait-for-turn aimx1 around x-axis;
	}
	last_primary_heading=heading;
	last_primary_pitch=pitch;
	start-script RestoreAfterDelay();

	// Prevent high-trajectory "bonus shots" while low-trajectory is reloading
	var reloading;
	reloading = (get GAME_FRAME) < (get WEAPON_RELOADSTATE(1));
	if( reloading )
	{
		return(0);
	}

	return (1);
}

FireWeapon2()
{	
	call-script fireCommon();
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rfthigh type BITMAPONLY | NOHEATCLOUD;
		explode rfleg type BITMAPONLY | NOHEATCLOUD;
		explode rffoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode sleeve type BITMAPONLY | NOHEATCLOUD;
		explode barrel type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}

	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rfthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfleg type FALL | NOHEATCLOUD;
		explode rffoot type FALL | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}

	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rfthigh type SMOKE | FALL | NOHEATCLOUD;
		explode rfleg type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rffoot type SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}

	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rfthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rffoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}