
#include "../recoil_common_includes.h"

piece  pelvis, torso, lleg, lfoot, rleg, rfoot, head,
       rflare , lflare , lancher,tflare ,lthigh,rthigh,neck, rbarrel, lbarrel, rtoe, ltoe,aimy1, aimx1;

static-var  isMoving, isAiming, restore_delay, gun_1, gun_lasthead, gun_lastpitch, torp_lasthead, torp_deploy;

static-var  Stunned;

lua_UnitScriptDecal(lightIndex, xpos,zpos, heading) 
{
	return 0;
}
// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM3 1024
#define SIGNAL_MOVE 1

static-var animSpeed, maxSpeed, animFramesPerKeyframe;
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\coramph_anim_walk.blend 
	if (isMoving) {
			turn lfoot to x-axis <-19.212779> speed <58.412461> / animSpeed; 
			turn lfoot to z-axis <-11.999811> speed <11.729620> / animSpeed; 
			turn lfoot to y-axis <-0.871378> speed <22.713900> / animSpeed; 
			turn lleg to x-axis <3.028262> speed <90.847851> / animSpeed; 
			turn lleg to z-axis <1.158443> speed <34.753296> / animSpeed; 
			turn lleg to y-axis <0.424009> speed <12.720281> / animSpeed; 
			turn lthigh to x-axis <21.818249> speed <654.547461> / animSpeed; 
			turn lthigh to z-axis <3.951662> speed <118.549869> / animSpeed; 
			turn lthigh to y-axis <-5.325483> speed <159.764481> / animSpeed; 
			turn rfoot to x-axis <23.402641> speed <702.079226> / animSpeed; 
			turn rfoot to z-axis <4.790922> speed <143.727654> / animSpeed; 
			turn rfoot to y-axis <-8.966408> speed <268.992230> / animSpeed; 
			turn rleg to x-axis <-1.347558> speed <40.426731> / animSpeed; 
			turn rleg to z-axis <-4.399749> speed <131.992462> / animSpeed; 
			turn rleg to y-axis <1.067651> speed <32.029530> / animSpeed; 
			turn rthigh to x-axis <-26.126997> speed <783.809901> / animSpeed; 
			turn rthigh to z-axis <-4.341707> speed <130.251212> / animSpeed; 
			turn rthigh to y-axis <7.019140> speed <210.574211> / animSpeed; 
			move torso to z-axis [-1.053090] speed [31.592710] / animSpeed; 
			move torso to y-axis [1.0] speed [30.0] / animSpeed; 
			turn torso to x-axis <-5.955115> speed <178.653442> / animSpeed; 
			turn torso to z-axis <7.038173> speed <211.145181> / animSpeed; 
			turn torso to y-axis <-0.733862> speed <22.015845> / animSpeed; 
		sleep 164;
	}
	while(isMoving) {
		if (isMoving) {
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(lfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lfoot) & 0x0000ffff),   get HEADING(0));
			turn lfoot to x-axis <-41.595104> speed <671.469750> / animSpeed; 
			turn lfoot to z-axis <-10.694907> speed <39.147127> / animSpeed; 
			turn lfoot to y-axis <0.330399> speed <36.053302> / animSpeed; 
			turn lleg to x-axis <-5.966092> speed <269.830602> / animSpeed; 
			turn lleg to z-axis <-0.248525> speed <42.209048> / animSpeed; 
			turn lthigh to x-axis <46.056164> speed <727.137448> / animSpeed; 
			turn lthigh to z-axis <5.595148> speed <49.304570> / animSpeed; 
			turn lthigh to y-axis <-10.599895> speed <158.232376> / animSpeed; 
			turn neck to x-axis <0.117721> speed <59.562696> / animSpeed; 
			turn neck to y-axis <-1.281623> speed <7.232732> / animSpeed; 
			turn rfoot to x-axis <46.742915> speed <700.208232> / animSpeed; 
			turn rfoot to z-axis <1.192273> speed <107.959466> / animSpeed; 
			turn rfoot to y-axis <-3.124901> speed <175.245207> / animSpeed; 
			turn rleg to x-axis <-69.068963> speed <2031.642157> / animSpeed; 
			turn rleg to z-axis <-31.206356> speed <804.198208> / animSpeed; 
			turn rleg to y-axis <-22.460766> speed <705.852519> / animSpeed; 
			turn rthigh to x-axis <3.358128> speed <884.553749> / animSpeed; 
			turn rthigh to z-axis <-8.607239> speed <127.965951> / animSpeed; 
			turn rtoe to x-axis <25.062944> speed <751.888312> / animSpeed; 
			turn rtoe to z-axis <0.892703> speed <26.781080> / animSpeed; 
			turn rtoe to y-axis <1.684877> speed <50.546305> / animSpeed; 
			move torso to z-axis [0.0] speed [31.592710] / animSpeed; 
			move torso to y-axis [0.0] speed [30.0] / animSpeed; 
			turn torso to x-axis <0.0> speed <178.653446> / animSpeed; 
			turn torso to z-axis <10.575411> speed <106.117140> / animSpeed; 
			turn torso to y-axis <-0.0> speed <22.015803> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lfoot to x-axis <-30.923924> speed <320.135406> / animSpeed; 
			turn lfoot to z-axis <-0.496717> speed <305.945696> / animSpeed; 
			turn lfoot to y-axis <5.680271> speed <160.496154> / animSpeed; 
			turn lleg to x-axis <33.375132> speed <1180.236710> / animSpeed; 
			turn lleg to z-axis <2.967255> speed <96.473392> / animSpeed; 
			turn lleg to y-axis <-4.463596> speed <149.332138> / animSpeed; 
			turn lthigh to x-axis <8.243115> speed <1134.391473> / animSpeed; 
			turn lthigh to z-axis <1.382561> speed <126.377595> / animSpeed; 
			turn lthigh to y-axis <-1.306338> speed <278.806729> / animSpeed; 
			turn neck to x-axis <5.544177> speed <162.793688> / animSpeed; 
			turn neck to y-axis <-0.633326> speed <19.448889> / animSpeed; 
			turn rfoot to x-axis <18.621618> speed <843.638926> / animSpeed; 
			turn rfoot to z-axis <2.862062> speed <50.093675> / animSpeed; 
			turn rfoot to y-axis <-0.245809> speed <86.372758> / animSpeed; 
			turn rleg to x-axis <-15.746559> speed <1599.672121> / animSpeed; 
			turn rleg to z-axis <-7.084768> speed <723.647636> / animSpeed; 
			turn rleg to y-axis <-1.712709> speed <622.441720> / animSpeed; 
			turn rthigh to x-axis <-13.872848> speed <516.929301> / animSpeed; 
			turn rthigh to z-axis <-8.228560> speed <11.360355> / animSpeed; 
			turn rthigh to y-axis <4.332866> speed <77.782117> / animSpeed; 
			turn rtoe to x-axis <9.761568> speed <459.041271> / animSpeed; 
			turn rtoe to z-axis <-0.874767> speed <53.024090> / animSpeed; 
			turn rtoe to y-axis <-0.641841> speed <69.801528> / animSpeed; 
			move torso to z-axis [1.125118] speed [33.753548] / animSpeed; 
			move torso to y-axis [-1.057961] speed [31.738815] / animSpeed; 
			turn torso to x-axis <5.955115> speed <178.653438> / animSpeed; 
			turn torso to z-axis <7.038173> speed <106.117140> / animSpeed; 
			turn torso to y-axis <0.733860> speed <22.015833> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lfoot to x-axis <-6.470975> speed <733.588455> / animSpeed; 
			turn lfoot to z-axis <-0.319948> speed <5.303065> / animSpeed; 
			turn lfoot to y-axis <1.292647> speed <131.628716> / animSpeed; 
			turn lleg to x-axis <24.737808> speed <259.119721> / animSpeed; 
			turn lleg to z-axis <0.735060> speed <66.965853> / animSpeed; 
			turn lleg to y-axis <0.230679> speed <140.828258> / animSpeed; 
			turn lthigh to x-axis <-18.230132> speed <794.197390> / animSpeed; 
			turn lthigh to z-axis <-0.451354> speed <55.017473> / animSpeed; 
			turn lthigh to y-axis <-0.459061> speed <25.418285> / animSpeed; 
			turn neck to x-axis <7.0> speed <43.674710> / animSpeed; 
			turn neck to y-axis <0.0> speed <18.999787> / animSpeed; 
			turn rfoot to x-axis <-0.059978> speed <560.447874> / animSpeed; 
			turn rfoot to z-axis <11.365723> speed <255.109839> / animSpeed; 
			turn rfoot to y-axis <-1.317479> speed <32.150100> / animSpeed; 
			turn rleg to x-axis <0.102196> speed <475.462635> / animSpeed; 
			turn rleg to z-axis <-4.387379> speed <80.921669> / animSpeed; 
			turn rleg to y-axis <-1.338322> speed <11.231623> / animSpeed; 
			turn rthigh to x-axis <1.011818> speed <446.539985> / animSpeed; 
			turn rthigh to z-axis <-6.936976> speed <38.747522> / animSpeed; 
			turn rthigh to y-axis <3.531519> speed <24.040417> / animSpeed; 
			turn rtoe to x-axis <-0.0> speed <292.847042> / animSpeed; 
			turn rtoe to z-axis <0.0> speed <26.243009> / animSpeed; 
			turn rtoe to y-axis <-0.0> speed <19.255223> / animSpeed; 
			move torso to z-axis [0.0] speed [33.753548] / animSpeed; 
			move torso to y-axis [0.0] speed [31.738815] / animSpeed; 
			turn torso to x-axis <0.0> speed <178.653442> / animSpeed; 
			turn torso to z-axis <-0.0> speed <211.145181> / animSpeed; 
			turn torso to y-axis <0.0> speed <22.015791> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lfoot to x-axis <25.796130> speed <968.013175> / animSpeed; 
			turn lfoot to z-axis <-5.665878> speed <160.377916> / animSpeed; 
			turn lfoot to y-axis <10.132430> speed <265.193497> / animSpeed; 
			turn lleg to x-axis <-4.475613> speed <876.402614> / animSpeed; 
			turn lleg to z-axis <6.214297> speed <164.377133> / animSpeed; 
			turn lleg to y-axis <-1.418322> speed <49.470016> / animSpeed; 
			turn lthigh to x-axis <-22.478204> speed <127.442160> / animSpeed; 
			turn lthigh to z-axis <5.419694> speed <176.131439> / animSpeed; 
			turn lthigh to y-axis <-9.169354> speed <261.308775> / animSpeed; 
			turn ltoe to x-axis <-0.0> speed <94.792842> / animSpeed; 
			turn ltoe to y-axis <0.0> speed <19.687629> / animSpeed; 
			turn neck to x-axis <7.260533> speed <7.815973> / animSpeed; 
			turn neck to y-axis <0.368664> speed <11.059926> / animSpeed; 
			turn rfoot to x-axis <-24.585831> speed <735.775591> / animSpeed; 
			turn rfoot to z-axis <12.215074> speed <25.480533> / animSpeed; 
			turn rfoot to y-axis <-0.234754> speed <32.481758> / animSpeed; 
			turn rleg to x-axis <6.346330> speed <187.324019> / animSpeed; 
			turn rleg to z-axis <0.024124> speed <132.345077> / animSpeed; 
			turn rleg to y-axis <1.066828> speed <72.154479> / animSpeed; 
			turn rthigh to x-axis <21.032413> speed <600.617866> / animSpeed; 
			turn rthigh to z-axis <-0.482123> speed <193.645604> / animSpeed; 
			turn rthigh to y-axis <4.036342> speed <15.144694> / animSpeed; 
			turn rtoe to x-axis <3.159761> speed <94.792842> / animSpeed; 
			turn rtoe to y-axis <-0.656254> speed <19.687629> / animSpeed; 
			move torso to z-axis [-1.000436] speed [30.013075] / animSpeed; 
			move torso to y-axis [1.0] speed [30.0] / animSpeed; 
			turn torso to x-axis <-5.869647> speed <176.089419> / animSpeed; 
			turn torso to z-axis <-12.007560> speed <360.226789> / animSpeed; 
			turn torso to y-axis <1.246064> speed <37.381925> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(rfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rfoot) & 0x0000ffff),   get HEADING(0));
			turn lfoot to x-axis <48.203114> speed <672.209511> / animSpeed; 
			turn lfoot to z-axis <0.242779> speed <177.259717> / animSpeed; 
			turn lfoot to y-axis <2.279161> speed <235.598074> / animSpeed; 
			turn lleg to x-axis <-68.260398> speed <1913.543574> / animSpeed; 
			turn lleg to z-axis <31.210816> speed <749.895553> / animSpeed; 
			turn lleg to y-axis <25.157926> speed <797.287434> / animSpeed; 
			turn lthigh to x-axis <2.941036> speed <762.577191> / animSpeed; 
			turn lthigh to z-axis <9.313246> speed <116.806557> / animSpeed; 
			turn lthigh to y-axis <-7.715771> speed <43.607488> / animSpeed; 
			turn ltoe to x-axis <25.062944> speed <751.888312> / animSpeed; 
			turn ltoe to z-axis <-0.892703> speed <26.781080> / animSpeed; 
			turn ltoe to y-axis <-1.684877> speed <50.546305> / animSpeed; 
			turn neck to x-axis <3.606646> speed <109.616609> / animSpeed; 
			turn neck to z-axis <0.150981> speed <3.132730> / animSpeed; 
			turn neck to y-axis <1.227290> speed <25.758784> / animSpeed; 
			turn rfoot to x-axis <-41.022140> speed <493.089268> / animSpeed; 
			turn rfoot to z-axis <11.541517> speed <20.206722> / animSpeed; 
			turn rfoot to y-axis <0.152900> speed <11.629598> / animSpeed; 
			turn rleg to x-axis <-6.682617> speed <390.868384> / animSpeed; 
			turn rleg to y-axis <-1.610858> speed <80.330584> / animSpeed; 
			turn rthigh to x-axis <46.360011> speed <759.827946> / animSpeed; 
			turn rthigh to z-axis <-5.212039> speed <141.897483> / animSpeed; 
			turn rthigh to y-axis <10.166775> speed <183.912999> / animSpeed; 
			move torso to z-axis [0.0] speed [30.013075] / animSpeed; 
			move torso to y-axis [0.0] speed [30.0] / animSpeed; 
			turn torso to x-axis <0.0> speed <176.089422> / animSpeed; 
			turn torso to z-axis <-10.102087> speed <57.164175> / animSpeed; 
			turn torso to y-axis <0.0> speed <37.381885> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lfoot to x-axis <22.342705> speed <775.812279> / animSpeed; 
			turn lfoot to z-axis <-3.674592> speed <117.521132> / animSpeed; 
			turn lfoot to y-axis <0.899928> speed <41.377006> / animSpeed; 
			turn lleg to x-axis <-19.060918> speed <1475.984397> / animSpeed; 
			turn lleg to z-axis <8.834664> speed <671.284541> / animSpeed; 
			turn lleg to y-axis <2.175174> speed <689.482560> / animSpeed; 
			turn lthigh to x-axis <-10.457805> speed <401.965230> / animSpeed; 
			turn lthigh to z-axis <10.353141> speed <31.196863> / animSpeed; 
			turn lthigh to y-axis <-5.864258> speed <55.545395> / animSpeed; 
			turn ltoe to x-axis <9.761568> speed <459.041271> / animSpeed; 
			turn ltoe to z-axis <0.874767> speed <53.024090> / animSpeed; 
			turn ltoe to y-axis <0.641841> speed <69.801528> / animSpeed; 
			turn neck to x-axis <10.759848> speed <214.596061> / animSpeed; 
			turn neck to z-axis <0.003971> speed <4.410290> / animSpeed; 
			turn neck to y-axis <0.192751> speed <31.036170> / animSpeed; 
			turn rfoot to x-axis <-33.995556> speed <210.797533> / animSpeed; 
			turn rfoot to z-axis <0.586756> speed <328.642838> / animSpeed; 
			turn rfoot to y-axis <-5.987490> speed <184.211699> / animSpeed; 
			turn rleg to x-axis <37.571921> speed <1327.636133> / animSpeed; 
			turn rleg to z-axis <-2.395204> speed <70.563518> / animSpeed; 
			turn rleg to y-axis <7.068942> speed <260.394020> / animSpeed; 
			turn rthigh to x-axis <8.015291> speed <1150.341613> / animSpeed; 
			turn rthigh to z-axis <1.316003> speed <195.841250> / animSpeed; 
			turn rthigh to y-axis <0.625853> speed <286.227655> / animSpeed; 
			move torso to z-axis [1.177773] speed [35.333183] / animSpeed; 
			move torso to y-axis [-1.057961] speed [31.738815] / animSpeed; 
			turn torso to x-axis <5.868210> speed <176.046282> / animSpeed; 
			turn torso to z-axis <-12.073831> speed <59.152324> / animSpeed; 
			turn torso to y-axis <-1.252837> speed <37.585165> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lfoot to x-axis <0.003638> speed <670.171989> / animSpeed; 
			turn lfoot to z-axis <-11.368280> speed <230.810619> / animSpeed; 
			turn lfoot to y-axis <1.319427> speed <12.584983> / animSpeed; 
			turn lleg to x-axis <0.027525> speed <572.653290> / animSpeed; 
			turn lleg to z-axis <4.362450> speed <134.166447> / animSpeed; 
			turn lleg to y-axis <1.284841> speed <26.709986> / animSpeed; 
			turn lthigh to x-axis <1.069603> speed <345.822234> / animSpeed; 
			turn lthigh to z-axis <6.943315> speed <102.294778> / animSpeed; 
			turn lthigh to y-axis <-3.568577> speed <68.870424> / animSpeed; 
			turn ltoe to x-axis <-0.0> speed <292.847042> / animSpeed; 
			turn ltoe to z-axis <-0.0> speed <26.243009> / animSpeed; 
			turn ltoe to y-axis <0.0> speed <19.255223> / animSpeed; 
			turn neck to x-axis <14.0> speed <97.204588> / animSpeed; 
			turn neck to y-axis <0.0> speed <5.782540> / animSpeed; 
			turn rfoot to x-axis <-6.205179> speed <833.711310> / animSpeed; 
			turn rfoot to z-axis <0.341469> speed <7.358602> / animSpeed; 
			turn rfoot to y-axis <-1.233146> speed <142.630313> / animSpeed; 
			turn rleg to x-axis <24.675320> speed <386.898029> / animSpeed; 
			turn rleg to z-axis <0.377003> speed <83.166221> / animSpeed; 
			turn rleg to y-axis <-0.963116> speed <240.961761> / animSpeed; 
			turn rthigh to x-axis <-18.155269> speed <785.116815> / animSpeed; 
			turn rthigh to z-axis <0.036646> speed <38.380702> / animSpeed; 
			move torso to z-axis [0.0] speed [35.333183] / animSpeed; 
			move torso to y-axis [0.0] speed [31.738815] / animSpeed; 
			turn torso to x-axis <0.0> speed <176.046286> / animSpeed; 
			turn torso to z-axis <-0.0> speed <362.214938> / animSpeed; 
			turn torso to y-axis <0.0> speed <37.585124> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lfoot to x-axis <-20.341830> speed <610.364051> / animSpeed; 
			turn lfoot to z-axis <-12.139081> speed <23.124041> / animSpeed; 
			turn lfoot to y-axis <0.945481> speed <11.218371> / animSpeed; 
			turn lleg to x-axis <2.017360> speed <59.695049> / animSpeed; 
			turn lleg to z-axis <1.259198> speed <93.097542> / animSpeed; 
			turn lleg to y-axis <0.772808> speed <15.361002> / animSpeed; 
			turn lthigh to x-axis <22.295349> speed <636.772400> / animSpeed; 
			turn lthigh to z-axis <4.177775> speed <82.966205> / animSpeed; 
			turn lthigh to y-axis <-5.383406> speed <54.444872> / animSpeed; 
			turn ltoe to x-axis <3.159761> speed <94.792842> / animSpeed; 
			turn ltoe to y-axis <0.656254> speed <19.687629> / animSpeed; 
			turn neck to x-axis <2.103144> speed <356.905717> / animSpeed; 
			turn neck to y-axis <-1.040532> speed <31.215945> / animSpeed; 
			turn rfoot to x-axis <23.402641> speed <888.234585> / animSpeed; 
			turn rfoot to z-axis <4.790922> speed <133.483582> / animSpeed; 
			turn rfoot to y-axis <-8.966408> speed <231.997836> / animSpeed; 
			turn rleg to x-axis <-1.347558> speed <780.686338> / animSpeed; 
			turn rleg to z-axis <-4.399749> speed <143.302560> / animSpeed; 
			turn rleg to y-axis <1.067651> speed <60.923023> / animSpeed; 
			turn rthigh to x-axis <-26.126997> speed <239.151817> / animSpeed; 
			turn rthigh to z-axis <-4.341707> speed <131.350596> / animSpeed; 
			turn rthigh to y-axis <7.019140> speed <192.014262> / animSpeed; 
			turn rtoe to x-axis <-0.0> speed <94.792842> / animSpeed; 
			turn rtoe to y-axis <-0.0> speed <19.687629> / animSpeed; 
			move torso to z-axis [-1.053090] speed [31.592710] / animSpeed; 
			move torso to y-axis [1.0] speed [30.0] / animSpeed; 
			turn torso to x-axis <-5.955115> speed <178.653442> / animSpeed; 
			turn torso to z-axis <7.038173> speed <211.145181> / animSpeed; 
			turn torso to y-axis <-0.733862> speed <22.015845> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move torso to y-axis [0] speed [6.347763];
	move torso to z-axis [0] speed [7.066637];
	turn lfoot to x-axis <0> speed <193.602635>;
	turn lfoot to y-axis <0> speed <53.038699>;
	turn lfoot to z-axis <0> speed <61.189139>;
	turn lleg to x-axis <0> speed <382.708715>;
	turn lleg to y-axis <0> speed <159.457487>;
	turn lleg to z-axis <0> speed <149.979111>;
	turn lthigh to x-axis <0> speed <226.878295>;
	turn lthigh to y-axis <0> speed <55.761346>;
	turn lthigh to z-axis <0> speed <35.226288>;
	turn ltoe to x-axis <0> speed <150.377662>;
	turn ltoe to y-axis <0> speed <13.960306>;
	turn ltoe to z-axis <0> speed <10.604818>;
	turn neck to x-axis <0> speed <71.381143>;
	turn neck to y-axis <0> speed <6.243189>;
	turn neck to z-axis <0> speed <0.882058>;
	turn rfoot to x-axis <0> speed <177.646917>;
	turn rfoot to y-axis <0> speed <53.798446>;
	turn rfoot to z-axis <0> speed <65.728568>;
	turn rleg to x-axis <0> speed <406.328431>;
	turn rleg to y-axis <0> speed <141.170504>;
	turn rleg to z-axis <0> speed <160.839642>;
	turn rthigh to x-axis <0> speed <230.068323>;
	turn rthigh to y-axis <0> speed <57.245531>;
	turn rthigh to z-axis <0> speed <39.168250>;
	turn rtoe to x-axis <0> speed <150.377662>;
	turn rtoe to y-axis <0> speed <13.960306>;
	turn rtoe to z-axis <0> speed <10.604818>;
	turn torso to x-axis <0> speed <35.730689>;
	turn torso to y-axis <0> speed <7.517033>;
	turn torso to z-axis <0> speed <72.442988>;
}
UnitSpeed(){
 maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
 animFramesPerKeyframe = 5; //we need to calc the frames per keyframe value, from the known animtime
 maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
 while(TRUE){
  animSpeed = (get CURRENT_SPEED);
  if (animSpeed<1) animSpeed=1;
  animSpeed = (maxSpeed * 5) / animSpeed; 
  //get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed);
  if (animSpeed<2) animSpeed=2;
  if (animspeed>10) animSpeed = 10;
  sleep 164;
 }
}


Create()
{
	hide lflare;
	hide rflare;
	hide aimx1;
	hide aimy1;
	hide tflare;
	hide pelvis;
	isMoving = FALSE;
	animSpeed = 4;
	restore_delay = 3000;
	hide pelvis;
	gun_1 = 0;
	// Initializing with large negative values, to ensure first aim does wait-for-turn
	gun_lasthead = -1000000;
	torp_lasthead = -1000000;
	torp_deploy = FALSE;
}

#define BASEPIECE pelvis
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

StartMoving(reversing)
{
	isMoving = TRUE;
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	start-script UnitSpeed();
	start-script Walk();
}

StopMoving()
{
	isMoving = FALSE;
	signal SIGNAL_MOVE;
	call-script StopWalking();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}



SetStunned(State)
{
    Stunned = State;
}
RestoreAfterDelayGun()
{
	sleep restore_delay;
	if (Stunned) {
        return (1);
    }
	gun_lasthead = -1000000;
	gun_lastpitch = -1000000;
	turn head to y-axis <0.0> speed <90.0>;
	turn head to x-axis <0.0> speed <50.0>;
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM3;
	set-signal-mask SIGNAL_AIM3;
	// values in <> are degrees per second
	// otherwise angles are in COB angular unit (cau) - There are 65536 cau in a circle
	// In general, 6 cau per frame ~= 1 degree per second
	turn head to y-axis heading speed <200.0>;
	turn head to x-axis <0.0> - pitch speed <100.0>;
	// if the turret can turn to its new heading in one frame, just return true and do not wait for turn
	if ( (get ABS(gun_lasthead - heading)<1200) AND (get ABS(gun_lastpitch - pitch)<600) )
	{
		gun_lasthead = heading;
		gun_lastpitch = pitch;
		// start the restore to neutral script
		start-script RestoreAfterDelayGun();
		return (1);
	}
	// if turret needs more than one frame to turn to new heading, wait for the turn
	// seems to take 3 frames for wait-for-turn to process
	wait-for-turn head around y-axis;
	wait-for-turn head around x-axis;
	gun_lasthead = heading;
	gun_lastpitch = pitch;
	// start the restore to neutral script
	start-script RestoreAfterDelayGun();
	return (1);
}

FireWeapon2()
{
	if( !gun_1 )
	{
		sleep 200;
	}
	if( gun_1 )
	{
		sleep 200;
	}
	gun_1 = !gun_1;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = head;
}

QueryWeapon2(pieceIndex)
{
	if( !gun_1 )
	{
		pieceIndex = rflare;
	}
	if( gun_1 )
	{
		pieceIndex = lflare;
	}
}

RestoreAfterDelayTorp()
{
	sleep restore_delay;
	if (Stunned) {
        return (1);
    }
	torp_lasthead = -1000000;
	turn lancher to y-axis <0> speed <200.0>;
	wait-for-turn lancher around y-axis;
	// torpedo tube has started moving down, set variable to FALSE to redeploy on next aim call
	torp_deploy = FALSE;
	move lancher to y-axis [0] speed [25];
}

AimWeapon1(heading, pitch)
{
	if ( get IN_WATER(0) == 0 )
    {
     return (0);
    }	
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	// checks if the torpedo launcher is deployed
	if (torp_deploy == FALSE)
	{
		//if not, move it up to the deploy position, and wait
		move lancher to y-axis [5] speed [25];
		wait-for-move lancher along y-axis;
		// after moving, set variable to true, so deploy is skipped on future aims 
		torp_deploy = TRUE;
	}
	// values in <> are degrees per second
	// otherwise angles are in COB angular unit (cau) - There are 65536 cau in a circle
	// In general, 6 cau per frame ~= 1 degree per second
	turn lancher to y-axis heading speed <200.0>;
	// if the turret can turn to its new heading in one frame, just return true and do not wait for turn
	if (get ABS(torp_lasthead - heading) < 1200)
	{
		torp_lasthead = heading;
		// start the restore to neutral script
		start-script RestoreAfterDelayTorp();	
		return (1);
	}
	// if turret needs more than one frame to turn to new heading, wait for the turn
	// seems to take 3 frames for wait-for-turn to process
	wait-for-turn lancher around y-axis;
	torp_lasthead = heading;
	// start the restore to neutral script
	start-script RestoreAfterDelayTorp();	
	return (1);

}

FireWeapon1()
{
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = head;
}

QueryWeapon1(pieceIndex)
{
	
	pieceIndex = tflare;

}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		explode lancher type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type FALL | NOHEATCLOUD;
		explode lancher type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head type FIRE | SMOKE | FALL | NOHEATCLOUD;

		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lancher type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode neck type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;

		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lancher type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode tflare type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode neck type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;

	return corpsetype;
}
