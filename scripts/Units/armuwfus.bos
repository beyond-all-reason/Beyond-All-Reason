
#include "../recoil_common_includes.h"


piece   door1, door3, door5, door2, door6, door4, base, fan1, fan2;

static-var door;
static-var  Stunned;

Create(){
	spin fan1 around y-axis speed <25>;
	spin fan2 around y-axis speed <25>;
}

Start()
{
	spin fan1 around y-axis speed <25>;
	spin fan2 around y-axis speed <25>;
	return (0);
}
Stop()
{
	spin fan1 around y-axis speed <0.0>;
	spin fan2 around y-axis speed <0.0>;
	return (0);
}

Activate()
{
	while( TRUE )
	{
		if (door==0){
			turn door1 to z-axis <50> speed <100>;
			sleep 250;	
			emit-sfx 256 | 3 from door1;
			sleep 250;
			turn door1 to z-axis <0> speed <100>;
		}
		if (door==1){
			turn door3 to x-axis <50> speed <100>;
			sleep 250;	
			emit-sfx 256 | 3 from door3;
			sleep 250;
			turn door3 to x-axis <0> speed <100>;
		}
		if (door==2){
			turn door5 to x-axis <-50> speed <100>;
			sleep 250;	
			emit-sfx 256 | 3 from door5;
			sleep 250;
			turn door5 to x-axis <0> speed <100>;
		}
		if (door==3){
			turn door2 to x-axis <50> speed <100>;
			sleep 250;	
			emit-sfx 256 | 3 from door2;
			sleep 250;
			turn door2 to x-axis <0> speed <100>;
		}
		if (door==4){
			turn door6 to x-axis <-50> speed <100>;
			sleep 250;	
			emit-sfx 256 | 3 from door6;
			sleep 250;
			turn door6 to x-axis <0> speed <100>;
		}
		if (door==5){
			turn door4 to z-axis <-50> speed <100>;
			sleep 250;	
			emit-sfx 256 | 3 from door4;
			sleep 250;
			turn door4 to z-axis <0> speed <100>;
		}
		door = door+1;
		if (door > 5){
			door=0;
		}
		sleep 2000;
	}
	return (0);
}

SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
	    call-script Stop();
	} else {
	    call-script Start();
	}
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door4 type BITMAPONLY | NOHEATCLOUD;
		explode door6 type BITMAPONLY | NOHEATCLOUD;
		explode door5 type BITMAPONLY | NOHEATCLOUD;
		explode door2 type BITMAPONLY | NOHEATCLOUD;
		explode door3 type BITMAPONLY | NOHEATCLOUD;
		explode fan1 type BITMAPONLY | NOHEATCLOUD;
		explode fan2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door6 type FALL | NOHEATCLOUD;
		explode door5 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door2 type FALL | NOHEATCLOUD;
		explode door3 type FALL | NOHEATCLOUD;
		explode fan1 type FALL | NOHEATCLOUD;
		explode fan2 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door4 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode door6 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door5 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode door3 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode fan1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode fan2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode door4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door6 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode door5 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode fan1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode fan2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
