#include "../recoil_common_includes.h"

#define SIGNAL_BUILD 2
#define SIGNAL_MOVE 1

piece  base, ldoor, rdoor, lturret, rturret, lplate, rplate, lnano, rnano, smoke1, smoke2, cagelight, cagelight_emit, cagelight2, cagelight_emit2;

static-var  nano;

#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 3
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

#define VD_PIECE1 smoke1
#define VD_PIECE2 smoke2
#define VD_AMPHIBIOUS
#include "../vehicle_dirt_cegs.h"

#define TB_BASE base 
#define TB_TURNRATE <10.0> 
#define TB_TILT_X <0.15>
#define TB_BANK_Z <0.15> // Do not define this if you dont want banking
#include "../tilt_bank_mobileunit.h"

Create()
{
	hide lnano;
	hide rnano;
	hide smoke1;
	hide smoke2;
	hide cagelight_emit;
	hide cagelight_emit2;
	call-script TB_Init();
}


StartMoving(reversing)
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	start-script Vehicle_Dirt_Ceg();
	START_TILTBANK;
}

StopMoving()
{
	signal SIGNAL_MOVE;
	STOP_TILTBANK;
}

Activate()
{
}

Deactivate()
{
}

StartBuilding(heading, pitch)
{
	
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	turn ldoor to z-axis <90> speed <180>;
	turn rdoor to z-axis <-90> speed <180>;
	move lplate to x-axis [7.5] speed [15];
	move rplate to x-axis [-7.5] speed [15];
	wait-for-move lplate along x-axis;

	turn rturret to x-axis heading speed <160>;
	turn lturret to x-axis <0> - heading speed <160>;
	wait-for-turn rturret around x-axis;

	set INBUILDSTANCE to 1;

	show cagelight_emit;
	show cagelight_emit2;
	spin cagelight_emit around x-axis speed <200> accelerate <20>;
	spin cagelight_emit2 around x-axis speed <200> accelerate <20>;

}

StopBuilding()
{
	hide lnano;
	hide rnano;
	hide cagelight_emit;
	hide cagelight_emit2;

	stop-spin cagelight_emit around x-axis decelerate <2>;
	stop-spin cagelight_emit2 around x-axis decelerate <2>;

	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	sleep 6000;

	set INBUILDSTANCE to 0;
	
	turn rturret to x-axis <0> speed <160>;
	turn lturret to x-axis <0> speed <160>;
	wait-for-turn lturret around x-axis;
	wait-for-turn rturret around x-axis;
	turn ldoor to z-axis <0> speed <180>;
	turn rdoor to z-axis <0> speed <180>;
	move lplate to x-axis [0] speed [15];
	move rplate to x-axis [0] speed [15];
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = lnano + nano;
	nano= !nano;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rplate type BITMAPONLY | NOHEATCLOUD;
		explode rturret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rdoor type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rturret type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rdoor type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rplate type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rturret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode rdoor type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rplate type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rturret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
