
#include "../recoil_common_includes.h"

piece  base, lwing, rwing, bwing, lblades, rblades, bblades, lflare, rflare;

static-var gun;

#define SIG_AIM				2

#define IDLEHOVERSCALE 24
#define IDLEHOVERSPEED 30
#define IDLEBASEPIECE base
#include "../idlehover.h"

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

Create()
{
	gun = 0;
	hide lflare;
	hide rflare;
	
	SLEEP_UNTIL_UNITFINISHED;
	
	start-script IdleHover();
}

Activate()
{
	spin lblades around y-axis speed <-800>;
	spin rblades around y-axis speed <-800>;
	spin bblades around y-axis speed <-800>;
	
	turn lwing to y-axis <-15> speed <60>;
	turn rwing to y-axis <15> speed <60>;
	
	turn lwing to z-axis <-15> speed <60>;
	turn rwing to z-axis <15> speed <60>;
	turn bwing to x-axis <15> speed <60>;
}

Deactivate()
{
	stop-spin lblades around y-axis decelerate <100>;
	stop-spin rblades around y-axis decelerate <100>;
	stop-spin bblades around y-axis decelerate <100>;
	
	turn lwing to y-axis <0> speed <10>;
	turn rwing to y-axis <0> speed <10>;
	
	turn lwing to z-axis <45> speed <30>;
	turn rwing to z-axis <-45> speed <30>;
	turn bwing to x-axis <-45> speed <30>;
}

QueryPrimary(piecenum)
{	
	if (gun == 0)
	{
		piecenum = lflare;
		gun = 1;
	}
	if (gun == 1)
	{
		piecenum = rflare;
		gun = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

AimPrimary(heading, pitch)
{
	return (1);
}

FirePrimary()
{
	gun = !gun;
	return (1);
}

Shot1(zero)
{
	if(gun == 0)
	{
		emit-sfx 1024 + 0 from rflare;
	}
	if(gun == 1)
	{
		emit-sfx 1024 + 0 from lflare;
	}
	sleep 32;
	
	return(1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode lwing type BITMAPONLY | NOHEATCLOUD;
		explode rwing type BITMAPONLY | NOHEATCLOUD;
		explode bwing type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode lwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode bwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode lwing type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rwing type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode bwing type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode lwing type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rwing type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode bwing type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
