#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, thrust, firepoint;

static-var  statechg_DesiredState, statechg_StateChanging;

#define SIG_AIM				2

Go()
{
}

Stop()
{
}

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 3
#define MAXTILT 100

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide thrust;
	call-script InitState();
}

Activate()
{
	show thrust;
	start-script RequestState(0);
}

Deactivate()
{
	hide thrust;
	start-script RequestState(1);
}

AimWeapon1()
{
	return (FALSE);
}

AimWeapon2()
{
	return (FALSE);
}

AimWeapon3()
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	sleep 10000;
	return (FALSE);
}

FireWeapon1()
{
	sleep 500;
	emit-sfx 1024 + 1 from base;
	emit-sfx 4096 + 1 from base; //Weapon2 detonates the crawling bomb once weapon1 fires
	//sleep 1000;
	return (0);
}

QueryWeapon1(piecenum)
{
	piecenum = thrust;
}

AimFromWeapon1(piecenum)
{
	piecenum = base;
}

FireWeapon2()
{
	return (1);
}

QueryWeapon2(piecenum)
{
	piecenum = base;
}

AimFromWeapon2(piecenum)
{
	piecenum = base;
}

FireWeapon3()
{
	return (1);
}

QueryWeapon3(piecenum)
{
	piecenum = thrust;
}

AimFromWeapon3(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity >= 500 )
	{
		emit-sfx 2048 + 2 from firepoint; //Triggers kamikaze weapon after unit kills itself
	}
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		emit-sfx 1024 from base;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		emit-sfx 1024 from base;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		emit-sfx 1024 from base;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 500 )
	{
		corpsetype = 3 ;
		emit-sfx 1024 from base;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
    explode base type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
