
#include "../recoil_common_includes.h"

piece  base, wingl, wingr, fanl, fanr, turretl, turretr, flarel, flarer, thrust;

static-var  gun_1;

// Signal definitions
#define SIGNAL_MOVE 1

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100


#define BARRELROLLSPEEED <200>
#include "../air_barrelroll.h"

Create()
{
	hide flarel;
	hide flarer;
	hide thrust;
	gun_1=0;
	start-script BarrelRoll();
	
}

Activate()
{
	show thrust;		
	spin fanl around y-axis speed <200> accelerate <8>;
	spin fanr around y-axis speed <-200> accelerate <8>;
	turn wingl to z-axis <90> speed <90.0>;
	turn wingr to z-axis <-90> speed <90.0>;
	
}

Deactivate()
{
	hide thrust;
	stop-spin fanl around y-axis decelerate <8>;
	stop-spin fanr around y-axis decelerate <8>;
	turn wingl to z-axis <0> speed <90.0>;
	turn wingr to z-axis <0> speed <90.0>;
}

StartMoving(reversing)
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;

}

StopMoving()
{
	signal SIGNAL_MOVE;
	
}

AimWeapon1(heading, pitch)
{
	return (1);
}

FireWeapon1()
{
	
}

AimWeapon2(heading, pitch)
{
	return (1);
}

FireWeapon2()
{
	
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flarel;
	
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flarer;
	
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode fanr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode wingr type BITMAPONLY | NOHEATCLOUD;
		explode turretr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode fanl type BITMAPONLY | NOHEATCLOUD;
		explode wingl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode fanr type BITMAPONLY | NOHEATCLOUD;
		explode wingr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode fanl type BITMAPONLY | NOHEATCLOUD;
		explode wingl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode fanr type BITMAPONLY | NOHEATCLOUD;
		explode wingr type BITMAPONLY | NOHEATCLOUD;
		explode turretr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode fanl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode wingl type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode thrust type BITMAPONLY | NOHEATCLOUD;
		explode fanr type BITMAPONLY | NOHEATCLOUD;
		explode wingr type NOHEATCLOUD | NOHEATCLOUD;
		explode turretr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode fanl type BITMAPONLY | NOHEATCLOUD;
		explode wingl type FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
