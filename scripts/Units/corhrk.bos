
#include "../recoil_common_includes.h"

piece  flare1, flare2, torso, lthigh, rthigh, rleg, rfoot, lleg,
       lfoot, pelvis, launcher, rbvent,lbvent,lfvent,rfvent, aimx1, aimy1;

static-var  gun_1, isOpen, isMoving, isAiming, restore_delay, wpn1_lasthead;

// Signal definitions
#define SIGNAL_AIM1 256

lua_UnitScriptDecal(lightIndex, xpos,zpos, heading) 
{
	return 0;
}

// Generated for N:\animations\corhrk_anim_walk.blend
// Using https://github.com/Beherith/Skeletor_S3O 
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var animSpeed, maxSpeed, animFramesPerKeyframe;
#define SIGNAL_MOVE 1
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\corhrk_anim_walk.blend 
	//set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:5
			turn lfoot to x-axis <-43.438135> speed <1502.214769> / animSpeed; //delta=50.07 
			turn lfoot to z-axis <4.911848> speed <171.148067> / animSpeed; //delta=5.70 
			turn lfoot to y-axis <-0.593185> speed <10.152146> / animSpeed; //delta=-0.34 
			turn lleg to x-axis <36.285540> speed <1098.457497> / animSpeed; //delta=-36.62 
			turn lleg to z-axis <-0.046039> speed <140.941511> / animSpeed; //delta=-4.70 
			turn lleg to y-axis <0.058596> speed <189.383020> / animSpeed; //delta=-6.31 
			turn lthigh to x-axis <9.713782> speed <451.505531> / animSpeed; //delta=-15.05 
			turn lthigh to z-axis <-0.062249> speed <202.775908> / animSpeed; //delta=-6.76 
			turn lthigh to y-axis <-0.056947> speed <13.045424> / animSpeed; //delta=0.43 
			move pelvis to y-axis [1.025963] speed [30.778899] / animSpeed; //delta=1.03 
			turn pelvis to x-axis <1.388109> speed <41.643278> / animSpeed; //delta=-1.39 
			turn rfoot to x-axis <38.564252> speed <988.673635> / animSpeed; //delta=-32.96 
			turn rfoot to z-axis <-7.749109> speed <130.826254> / animSpeed; //delta=-4.36 
			turn rfoot to y-axis <-1.027880> speed <10.038702> / animSpeed; //delta=-0.33 
			turn rleg to x-axis <-21.140047> speed <637.542047> / animSpeed; //delta=21.25 
			turn rleg to z-axis <-0.054067> speed <152.148896> / animSpeed; //delta=5.07 
			turn rleg to y-axis <0.127685> speed <207.877818> / animSpeed; //delta=6.93 
			turn rthigh to x-axis <-37.032265> speed <1004.771031> / animSpeed; //delta=33.49 
			turn rthigh to z-axis <-0.077981> speed <218.832853> / animSpeed; //delta=7.29 
			turn rthigh to y-axis <0.042675> speed <10.456137> / animSpeed; //delta=-0.35 
			turn torso to y-axis <-3.0> speed <90.0> / animSpeed; //delta=-3.00 
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:10
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(lfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lfoot) & 0x0000ffff),   get HEADING(0));
			turn lfoot to x-axis <-29.513128> speed <417.750216> / animSpeed; //delta=-13.93 
			turn lfoot to z-axis <0.0> speed <147.355445> / animSpeed; //delta=4.91 
			turn lfoot to y-axis <0.0> speed <17.795554> / animSpeed; //delta=0.59 
			turn lleg to x-axis <47.726510> speed <343.229095> / animSpeed; //delta=-11.44 
			turn lthigh to x-axis <27.689312> speed <539.265889> / animSpeed; //delta=-17.98 
			move pelvis to y-axis [0.069268] speed [28.700852] / animSpeed; //delta=-0.96 
			turn pelvis to x-axis <-2.285478> speed <110.207605> / animSpeed; //delta=3.67 
			turn rfoot to x-axis <31.682048> speed <206.466134> / animSpeed; //delta=6.88 
			turn rfoot to z-axis <-4.359854> speed <101.677641> / animSpeed; //delta=-3.39 
			turn rfoot to y-axis <0.441084> speed <44.068924> / animSpeed; //delta=1.47 
			turn rleg to x-axis <-3.234615> speed <537.162955> / animSpeed; //delta=-17.91 
			turn rleg to z-axis <0.050911> speed <3.149348> / animSpeed; //delta=-0.10 
			turn rleg to y-axis <-0.044278> speed <5.158874> / animSpeed; //delta=-0.17 
			turn rthigh to x-axis <-59.823086> speed <683.724646> / animSpeed; //delta=22.79 
			turn rthigh to z-axis <0.111217> speed <5.675952> / animSpeed; //delta=-0.19 
			turn torso to y-axis <-5.0> speed <59.999993> / animSpeed; //delta=-2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:15
			turn lfoot to x-axis <-49.083222> speed <587.102810> / animSpeed; //delta=19.57 
			turn lleg to x-axis <15.646184> speed <962.409786> / animSpeed; //delta=32.08 
			turn lthigh to x-axis <23.104872> speed <137.533201> / animSpeed; //delta=4.58 
			move pelvis to y-axis [-1.082550] speed [34.554534] / animSpeed; //delta=-1.15 
			turn pelvis to x-axis <8.804122> speed <332.687973> / animSpeed; //delta=-11.09 
			turn rfoot to x-axis <43.708580> speed <360.795966> / animSpeed; //delta=-12.03 
			turn rfoot to z-axis <0.0> speed <130.795634> / animSpeed; //delta=-4.36 
			turn rfoot to y-axis <-0.0> speed <13.232512> / animSpeed; //delta=-0.44 
			turn rleg to x-axis <-8.697524> speed <163.887260> / animSpeed; //delta=5.46 
			turn rthigh to x-axis <-43.678343> speed <484.342306> / animSpeed; //delta=-16.14 
			turn rthigh to z-axis <0.0> speed <3.336480> / animSpeed; //delta=0.11 
			turn torso to y-axis <-3.0> speed <59.999993> / animSpeed; //delta=2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:20
			turn lfoot to x-axis <5.353656> speed <1633.106312> / animSpeed; //delta=-54.44 
			turn lleg to x-axis <-19.312092> speed <1048.748278> / animSpeed; //delta=34.96 
			turn lthigh to x-axis <9.336217> speed <413.059643> / animSpeed; //delta=13.77 
			move pelvis to y-axis [0.015490] speed [32.941178] / animSpeed; //delta=1.10 
			turn pelvis to x-axis <4.399236> speed <132.146577> / animSpeed; //delta=4.40 
			turn rfoot to x-axis <1.479063> speed <1266.885500> / animSpeed; //delta=42.23 
			turn rleg to x-axis <-1.393670> speed <219.115612> / animSpeed; //delta=-7.30 
			turn rthigh to x-axis <-3.826129> speed <1195.566408> / animSpeed; //delta=-39.85 
			turn torso to y-axis <0.0> speed <90.0> / animSpeed; //delta=3.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:25
			turn lfoot to x-axis <38.516335> speed <994.880381> / animSpeed; //delta=-33.16 
			turn lleg to x-axis <-21.270210> speed <58.743537> / animSpeed; //delta=1.96 
			turn lthigh to x-axis <-36.901972> speed <1387.145671> / animSpeed; //delta=46.24 
			move pelvis to y-axis [0.938030] speed [27.676222] / animSpeed; //delta=0.92 
			turn pelvis to x-axis <1.068742> speed <99.914796> / animSpeed; //delta=3.33 
			turn rfoot to x-axis <-43.705667> speed <1355.541897> / animSpeed; //delta=45.18 
			turn rleg to x-axis <36.062849> speed <1123.695567> / animSpeed; //delta=-37.46 
			turn rthigh to x-axis <10.297167> speed <423.698871> / animSpeed; //delta=-14.12 
			turn torso to y-axis <3.0> speed <90.0> / animSpeed; //delta=3.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(rfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rfoot) & 0x0000ffff),   get HEADING(0));
			turn lfoot to x-axis <31.785679> speed <201.919687> / animSpeed; //delta=6.73 
			turn lleg to x-axis <-3.293502> speed <539.301235> / animSpeed; //delta=-17.98 
			turn lthigh to x-axis <-59.802111> speed <687.004162> / animSpeed; //delta=22.90 
			move pelvis to y-axis [-0.004315] speed [28.270363] / animSpeed; //delta=-0.94 
			turn pelvis to x-axis <-2.609185> speed <110.337829> / animSpeed; //delta=3.68 
			turn rfoot to x-axis <-29.759725> speed <418.378252> / animSpeed; //delta=-13.95 
			turn rleg to x-axis <47.576950> speed <345.423020> / animSpeed; //delta=-11.51 
			turn rthigh to x-axis <28.239381> speed <538.266436> / animSpeed; //delta=-17.94 
			turn torso to y-axis <5.0> speed <59.999993> / animSpeed; //delta=2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:35
			turn lfoot to x-axis <43.767053> speed <359.441232> / animSpeed; //delta=-11.98 
			turn lleg to x-axis <-8.328728> speed <151.056771> / animSpeed; //delta=5.04 
			turn lthigh to x-axis <-43.001788> speed <504.009665> / animSpeed; //delta=-16.80 
			move pelvis to y-axis [-1.011689] speed [30.221218] / animSpeed; //delta=-1.01 
			turn pelvis to x-axis <8.017583> speed <318.803032> / animSpeed; //delta=-10.63 
			turn rfoot to x-axis <-49.048715> speed <578.669712> / animSpeed; //delta=19.29 
			turn rleg to x-axis <16.057143> speed <945.594202> / animSpeed; //delta=31.52 
			turn rthigh to x-axis <23.413918> speed <144.763913> / animSpeed; //delta=4.83 
			turn torso to y-axis <3.0> speed <59.999993> / animSpeed; //delta=-2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:40
			turn lfoot to x-axis <1.250820> speed <1275.486992> / animSpeed; //delta=42.52 
			turn lleg to x-axis <-1.664015> speed <199.941364> / animSpeed; //delta=-6.66 
			turn lthigh to x-axis <-3.338458> speed <1189.899915> / animSpeed; //delta=-39.66 
			move pelvis to y-axis [-0.077871] speed [28.014527] / animSpeed; //delta=0.93 
			turn pelvis to x-axis <4.115474> speed <117.063265> / animSpeed; //delta=3.90 
			turn rfoot to x-axis <5.162294> speed <1626.330273> / animSpeed; //delta=-54.21 
			turn rleg to x-axis <-19.574711> speed <1068.955614> / animSpeed; //delta=35.63 
			turn rthigh to x-axis <9.795307> speed <408.558301> / animSpeed; //delta=13.62 
			turn torso to y-axis <0.0> speed <90.0> / animSpeed; //delta=-3.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:45
			turn lfoot to x-axis <-43.408359> speed <1339.775366> / animSpeed; //delta=44.66 
			turn lleg to x-axis <36.272642> speed <1138.099712> / animSpeed; //delta=-37.94 
			turn lthigh to x-axis <9.725091> speed <391.906481> / animSpeed; //delta=-13.06 
			move pelvis to y-axis [1.025963] speed [33.115041] / animSpeed; //delta=1.10 
			turn pelvis to x-axis <1.388109> speed <81.820933> / animSpeed; //delta=2.73 
			turn rfoot to x-axis <38.500752> speed <1000.153744> / animSpeed; //delta=-33.34 
			turn rleg to x-axis <-21.119218> speed <46.335218> / animSpeed; //delta=1.54 
			turn rthigh to x-axis <-37.035120> speed <1404.912812> / animSpeed; //delta=46.83 
			turn torso to y-axis <-3.0> speed <90.0> / animSpeed; //delta=-3.00 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move pelvis to y-axis [0.0] speed [6.910907];
	turn lfoot to x-axis <6.635691> speed <326.621262>;
	turn lfoot to y-axis <-0.254780> speed <3.559111>;
	turn lfoot to z-axis <10.616784> speed <34.229613>;
	turn lleg to x-axis <-0.329709> speed <227.619942>;
	turn lleg to y-axis <6.371363> speed <37.876604>;
	turn lleg to z-axis <-4.744090> speed <28.188302>;
	turn lthigh to x-axis <-5.336402> speed <277.429134>;
	turn lthigh to y-axis <-0.491795> speed <2.609085>;
	turn lthigh to z-axis <-6.821446> speed <40.555182>;
	turn pelvis to x-axis <0.0> speed <66.537595>;
	turn rfoot to x-axis <5.608464> speed <325.266055>;
	turn rfoot to y-axis <-0.693257> speed <8.813785>;
	turn rfoot to z-axis <-12.109984> speed <26.165251>;
	turn rleg to x-axis <0.111355> speed <224.739113>;
	turn rleg to y-axis <-6.801576> speed <41.575564>;
	turn rleg to z-axis <5.017562> speed <30.429779>;
	turn rthigh to x-axis <-3.539897> speed <280.982562>;
	turn rthigh to y-axis <0.391213> speed <2.091227>;
	turn rthigh to z-axis <7.216447> speed <43.766571>;
	turn torso to y-axis <0.0> speed <18.0>;
}
// REMEMBER TO animspeed = 5 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 5; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 5) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>10) animSpeed = 10;
		sleep 164;
	}
}
StartMoving(reversing){
	signal SIGNAL_MOVE;
  set-signal-mask SIGNAL_MOVE;
	isMoving=TRUE;
	start-script UnitSpeed();
  start-script Walk();
}
StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	 call-script StopWalking();
}




#define BASEPIECE pelvis
#define HITSPEED <45.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"


Create()
{
	hide flare2;
	hide flare1;
	hide aimx1;
	hide aimy1;
	isMoving = FALSE;
	isAiming = FALSE;
	gun_1 = flare2;
	hide flare1;
	hide flare2;
	isOpen = 0;
	restore_delay = 200;
	animSpeed = 5;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS;
}



static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn lfvent to y-axis <0> speed <90>;
	turn rfvent to y-axis <0> speed <90>;
	turn lbvent to y-axis <0> speed <90>;
	turn rbvent to y-axis <0> speed <90>;
	turn aimy1 to y-axis <0.0> speed <90.021978>;
	turn launcher to x-axis <0.0> speed <45.010989>;
	wpn1_lasthead = 0xbadface;
	isAiming = FALSE;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	isAiming = TRUE;
	turn lfvent to y-axis <-90> speed <190>;
	turn rfvent to y-axis <90> speed <190>;
	turn lbvent to y-axis <45> speed <190>;
	turn rbvent to y-axis <-45> speed <190>;

	turn aimy1 to y-axis heading speed <150.032967>;
	turn launcher to x-axis <-90.021978> speed <200.043956>;
	if ((wpn1_lasthead == 0xbadface) OR ABSOLUTE_GREATER_THAN(WRAPDELTA(heading - wpn1_lasthead), <7>))
	{
		wpn1_lasthead = 0xbadface;
		wait-for-turn aimy1 around y-axis;
		wait-for-turn launcher around x-axis;
	}
	start-script RestoreAfterDelay();
	wpn1_lasthead = heading;
	return (1);
}

FireWeapon1()
{
	turn aimy1 to x-axis <-6> now;
	turn aimy1 to x-axis <0> speed <9>;
	
	turn aimx1 to x-axis <6> now;
	turn aimx1 to x-axis <0> speed <9>;
	if( gun_1 == 1 )
	{
		gun_1 = 2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		isOpen = 0;
		gun_1 = 1;
		return (0);
	}
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = launcher;
	return (0);
}

QueryWeapon1(pieceIndex)
{
	if( gun_1 == 1 )
	{
		pieceIndex = flare1;
	}
	if( gun_1 == 2 )
	{
		pieceIndex = flare2;
	}
	return (0);
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode lthigh type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode lthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lleg type FALL | NOHEATCLOUD;
		explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type SMOKE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode torso type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
