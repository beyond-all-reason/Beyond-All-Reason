
#include "../recoil_common_includes.h"
#include "../opencloseanim.h"

piece 

chassis,
leftCannister1,
leftCannister2,
leftCannister3,
leftFrontLegPivot,
leftFrontLegJoint1,
leftFrontLegJoint2,
leftFrontLegJoint3,
leftFrontLegFoot,
leftRearLegPivot,
leftRearLegJoint1,
leftRearLegJoint2,
leftRearLegJoint3,
leftRearLegFoot,
rightCannister1,
rightCannister2,
rightCannister3,
rightFrontLegPivot,
rightFrontLegJoint1,
rightFrontLegJoint2,
rightFrontLegJoint3,
rightFrontLegFoot,
rightRearLegPivot,
rightRearLegJoint1,
rightRearLegJoint2,
rightRearLegJoint3,
rightRearLegFoot,
turretHeadingPivot,
turretPitchPivot,
turretMain,
leftBottomChamber,
leftBottomBarrel,
leftTopChamber,
leftTopBarrel,
leftTurretPlate,
rightBottomChamber,
rightBottomBarrel,
rightTopChamber,
rightTopBarrel,
rightTurretPlate,
topTurretPlate,

leftTopFlare,
rightTopFlare,
leftBottomFlare,
rightBottomFlare,

ventDoorA,
ventDoorB,
ventDoorC,
coolingCellPivotA,
coolingCellPivotB,
coolingCellPivotC,
coolingCellA,
coolingCellB,
coolingCellC;

static-var  isMoving, oldHeading, bSteering, wpn1_lasthead, last_primary_heading, last_primary_pitch, speedmult, trajectoryMode, whichBarrel;

#define SIGNAL_MOVE 1
#define SIGNAL_AIM1 256

// #define LOW_TRAJECTORY		0
// #define HIGH_TRAJECTORY		1

// Generated for N:\animations\armvang_anim_walk_2legs_v2.blend
// Using https://github.com/Beherith/Skeletor_S3O
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
// Author Beherith mysterme@gmail.com. License: GNU GPL v2.

static-var animSpeed, maxSpeed, animFramesPerKeyframe;

lua_UnitScriptDecal(lightIndex, xpos,zpos, heading) 
{
	return 0;
}

lua_UnitScriptLight(lightIndex) {
	return 0;
}



#define SMOKEPIECE chassis
// #include "../unit_hitbyweaponid_and_smoke.h"
#include "smokeunit_thread_nohit.h"

SmokeItUp()
{	
	if (issmoking == 0 OR TRUE)
	{
		issmoking = 1;
		emit-sfx 257 from coolingCellA;
		emit-sfx 257 from coolingCellB;
		emit-sfx 257 from coolingCellC;
		sleep 1000;
		emit-sfx 257 from coolingCellA;
		emit-sfx 257 from coolingCellB;
		emit-sfx 257 from coolingCellC;
		sleep 1000;
		emit-sfx 257 from coolingCellA;
		emit-sfx 257 from coolingCellB;
		emit-sfx 257 from coolingCellC;
		sleep 1000;
		emit-sfx 257 from coolingCellA;
		emit-sfx 257 from coolingCellB;
		emit-sfx 257 from coolingCellC;
		sleep 1000;
		emit-sfx 257 from coolingCellA;
		emit-sfx 257 from coolingCellB;
		emit-sfx 257 from coolingCellC;
		sleep 1000;
		emit-sfx 257 from coolingCellA;
		emit-sfx 257 from coolingCellB;
		emit-sfx 257 from coolingCellC;
		sleep 1000;

		issmoking = 0;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes

#define SIGNAL_MOVE 1
Walk() {// For C:\Users\Siam\Desktop\BAR Development\Unit Modelling\Models\Bots\Tier 3\legelrpcmech10SKELETOREXPORT.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 4, 2)) 
	set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:1
			move chassis to y-axis [0.124841] speed [3.745232] / animSpeed; 
			turn chassis to y-axis <0.278947> speed <8.368401> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <-1.787482> speed <8.140006> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <1.239643> speed <16.681813> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <3.060144> speed <12.226241> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-1.034678> speed <22.692063> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <2.525746> speed <10.576187> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <-0.884916> speed <4.663154> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <0.492031> speed <9.895455> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <1.758506> speed <6.995416> / animSpeed; 
			turn leftFrontLegPivot to x-axis <1.118531> speed <4.154658> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-2.989068> speed <48.225767> / animSpeed; 
			turn leftFrontLegPivot to y-axis <4.635506> speed <19.388495> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <1.127227> speed <5.212224> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <0.695021> speed <13.326201> / animSpeed; 
			turn leftRearLegJoint2 to x-axis <-0.713841> speed <4.042453> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-6.105130> speed <35.128132> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <-3.171748> speed <4.493453> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <0.764178> speed <6.110386> / animSpeed; 
			turn leftRearLegPivot to x-axis <-1.013146> speed <3.060289> / animSpeed; 
			turn leftRearLegPivot to z-axis <-13.575496> speed <71.155545> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-34.691723> speed <79.029250> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <15.743205> speed <25.040754> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <9.371989> speed <29.345413> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-13.359102> speed <25.053305> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-9.306175> speed <20.619069> / animSpeed; 
			turn rightFrontLegPivot to z-axis <22.625645> speed <44.551668> / animSpeed; 
			turn rightFrontLegPivot to y-axis <28.284944> speed <50.257932> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-5.076717> speed <12.821422> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-10.664212> speed <39.415912> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-9.117643> speed <15.245623> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <3.603160> speed <15.521195> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-7.393551> speed <8.671813> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-9.633750> speed <32.686169> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-4.516774> speed <4.108730> / animSpeed; 
			turn rightRearLegPivot to x-axis <4.446738> speed <14.970959> / animSpeed; 
			turn rightRearLegPivot to z-axis <10.351100> speed <32.811136> / animSpeed; 
			turn rightRearLegPivot to y-axis <-14.704072> speed <35.819407> / animSpeed; 
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:6
			move chassis to y-axis [0.749046] speed [18.726158] / animSpeed; 
			turn chassis to y-axis <1.673680> speed <41.842005> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <-0.430814> speed <40.700033> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <-1.540659> speed <83.409061> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <1.022437> speed <61.131223> / animSpeed; 
			turn leftFrontLegJoint2 to x-axis <0.170245> speed <3.777659> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-4.816688> speed <113.460322> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <0.763048> speed <52.880954> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <-0.107724> speed <23.315764> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <-1.157212> speed <49.477286> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <0.592603> speed <34.977087> / animSpeed; 
			turn leftFrontLegPivot to x-axis <0.426088> speed <20.773297> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-11.026697> speed <241.128862> / animSpeed; 
			turn leftFrontLegPivot to y-axis <1.404091> speed <96.942444> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <1.995931> speed <26.061120> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <2.916054> speed <66.631000> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <-4.602796> speed <13.501811> / animSpeed; 
			turn leftRearLegJoint2 to x-axis <-0.040099> speed <20.212267> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-0.250441> speed <175.640652> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <-3.920658> speed <22.467273> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <1.782576> speed <30.551931> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <2.455452> speed <11.219790> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <-2.435406> speed <3.128225> / animSpeed; 
			turn leftRearLegPivot to x-axis <-1.523194> speed <15.301447> / animSpeed; 
			turn leftRearLegPivot to z-axis <-1.716238> speed <355.777756> / animSpeed; 
			turn leftRearLegPivot to y-axis <-6.500327> speed <12.355825> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-21.520179> speed <395.146302> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <11.569744> speed <125.203848> / animSpeed; 
			turn rightFrontLegJoint2 to x-axis <0.310774> speed <5.674497> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <4.481088> speed <146.727037> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <6.958590> speed <8.502689> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <2.465839> speed <7.052175> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-9.183553> speed <125.266472> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <4.363319> speed <11.342169> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-5.869662> speed <103.095371> / animSpeed; 
			turn rightFrontLegPivot to z-axis <15.200366> speed <222.758389> / animSpeed; 
			turn rightFrontLegPivot to y-axis <19.908617> speed <251.289814> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-7.213621> speed <64.107122> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-17.233532> speed <197.079610> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-11.658579> speed <76.228087> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <6.190025> speed <77.605950> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-8.838852> speed <43.359040> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <-3.355982> speed <13.619696> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-15.081444> speed <163.430820> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-5.201562> speed <20.543625> / animSpeed; 
			turn rightRearLegPivot to x-axis <6.941897> speed <74.854771> / animSpeed; 
			turn rightRearLegPivot to z-axis <15.819621> speed <164.055628> / animSpeed; 
			turn rightRearLegPivot to y-axis <-20.673979> speed <179.097191> / animSpeed;
			turn turretHeadingPivot to x-axis <-1.274993> speed <5.692584> / animSpeed;  
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:12
			move chassis to y-axis [1.722450] speed [29.202118] / animSpeed; 
			turn chassis to y-axis <2.716076> speed <31.271878> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <1.462034> speed <56.785436> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <2.056554> speed <107.916369> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <-5.602232> speed <198.740060> / animSpeed; 
			turn leftFrontLegJoint2 to x-axis <-1.296602> speed <44.005410> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-8.481644> speed <109.948684> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <-3.544215> speed <129.217875> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <0.487366> speed <49.337334> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <-2.835219> speed <102.834671> / animSpeed; 
			turn leftFrontLegPivot to x-axis <-1.418258> speed <55.330394> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-22.025215> speed <329.955562> / animSpeed; 
			turn leftFrontLegPivot to y-axis <-8.949251> speed <310.600255> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <0.708869> speed <38.611841> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <1.865755> speed <31.508999> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <-1.592037> speed <90.322748> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <0.707720> speed <28.744846> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <-1.391950> speed <75.861236> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <0.658825> speed <33.712532> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <1.345164> speed <33.308644> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <-0.852534> speed <47.486139> / animSpeed; 
			turn leftRearLegPivot to x-axis <-0.498487> speed <30.741216> / animSpeed; 
			turn leftRearLegPivot to z-axis <0.597267> speed <69.405146> / animSpeed; 
			turn leftRearLegPivot to y-axis <-2.206152> speed <128.825248> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <3.576049> speed <26.940915> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-11.055745> speed <313.933014> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <7.252751> speed <129.509787> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <1.619097> speed <85.859746> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <5.290894> speed <50.030871> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <1.961697> speed <15.124248> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-5.057071> speed <123.794455> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <3.501799> speed <25.845604> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-2.951371> speed <87.548748> / animSpeed; 
			turn rightFrontLegPivot to z-axis <7.621549> speed <227.364490> / animSpeed; 
			turn rightFrontLegPivot to y-axis <11.900740> speed <240.236306> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-6.637024> speed <17.297894> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-9.811311> speed <222.666643> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-10.562733> speed <32.875374> / animSpeed; 
			turn rightRearLegJoint2 to x-axis <1.619992> speed <35.911032> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <8.338433> speed <64.452260> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-8.357040> speed <14.454379> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <-2.113329> speed <37.279584> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-10.333409> speed <142.441051> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-5.659184> speed <13.728667> / animSpeed; 
			turn rightRearLegPivot to x-axis <4.825966> speed <63.477934> / animSpeed; 
			turn rightRearLegPivot to z-axis <19.725207> speed <117.167575> / animSpeed; 
			turn rightRearLegPivot to y-axis <-18.716704> speed <58.718231> / animSpeed;
			turn turretHeadingPivot to x-axis <0.180584> speed <43.667291> / animSpeed;  
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:18
			move chassis to y-axis [1.420135] speed [9.069443] / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <1.025905> speed <13.083861> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <16.070916> speed <420.430875> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <-12.736509> speed <214.028319> / animSpeed; 
			turn leftFrontLegJoint2 to x-axis <-2.515255> speed <36.559610> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-12.121423> speed <109.193363> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <-6.336964> speed <83.782473> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <-0.138124> speed <3.604500> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <6.767243> speed <188.396337> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <-4.769057> speed <58.015142> / animSpeed; 
			turn leftFrontLegPivot to x-axis <-4.072913> speed <79.639632> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-35.404747> speed <401.385936> / animSpeed; 
			turn leftFrontLegPivot to y-axis <-22.340203> speed <401.728564> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <-0.734615> speed <43.304527> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <2.408181> speed <16.272789> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <1.742447> speed <100.034544> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <0.426033> speed <8.450621> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <1.520806> speed <87.382659> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <-0.696763> speed <40.667639> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <1.905501> speed <16.810119> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <0.927788> speed <53.409671> / animSpeed; 
			turn leftRearLegPivot to x-axis <0.520607> speed <30.572823> / animSpeed; 
			turn leftRearLegPivot to z-axis <-0.260471> speed <25.732137> / animSpeed; 
			turn leftRearLegPivot to y-axis <2.337328> speed <136.304408> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <1.954317> speed <48.651952> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-4.206975> speed <205.463108> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <3.438302> speed <114.433474> / animSpeed; 
			turn rightFrontLegJoint2 to x-axis <0.074691> speed <4.205687> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <0.390567> speed <36.855877> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <2.800360> speed <74.716031> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <1.053611> speed <27.242584> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-2.021853> speed <91.056560> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <1.907499> speed <47.829006> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-1.135686> speed <54.470537> / animSpeed; 
			turn rightFrontLegPivot to z-axis <2.768563> speed <145.589593> / animSpeed; 
			turn rightFrontLegPivot to y-axis <5.468107> speed <192.978974> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-3.900755> speed <82.088069> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-1.619178> speed <245.763976> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-6.334285> speed <126.853454> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <9.497569> speed <34.774081> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-5.197956> speed <94.772512> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <-0.681009> speed <42.969597> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-4.759651> speed <167.212738> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-3.876664> speed <53.475592> / animSpeed; 
			turn rightRearLegPivot to x-axis <2.036498> speed <83.684035> / animSpeed; 
			turn rightRearLegPivot to z-axis <20.945362> speed <36.604657> / animSpeed; 
			turn rightRearLegPivot to y-axis <-10.695842> speed <240.625857> / animSpeed;
			turn turretHeadingPivot to x-axis <1.397748> speed <36.514944> / animSpeed;  
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:24
			move chassis to y-axis [0.518463] speed [27.050171] / animSpeed; 
			turn chassis to y-axis <1.723470> speed <30.347308> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <1.226606> speed <6.021028> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <32.099331> speed <480.852455> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <-17.733638> speed <149.913884> / animSpeed; 
			turn leftFrontLegJoint2 to x-axis <-1.477753> speed <31.125073> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-13.760084> speed <49.159817> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <-7.571448> speed <37.034536> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <1.282972> speed <42.632896> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <12.669147> speed <177.057111> / animSpeed; 
			turn leftFrontLegPivot to x-axis <-7.600898> speed <105.839570> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-36.870225> speed <43.964357> / animSpeed; 
			turn leftFrontLegPivot to y-axis <-32.464248> speed <303.721334> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <-2.097355> speed <40.882207> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <4.868987> speed <73.824172> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <5.395135> speed <109.580626> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-0.881037> speed <39.212098> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <4.497412> speed <89.298201> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <-1.940163> speed <37.301983> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <4.266318> speed <70.824513> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <2.781487> speed <55.610978> / animSpeed; 
			turn leftRearLegPivot to x-axis <1.864745> speed <40.324135> / animSpeed; 
			turn leftRearLegPivot to z-axis <-3.830438> speed <107.099031> / animSpeed; 
			turn leftRearLegPivot to y-axis <7.454880> speed <153.526550> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <-0.047622> speed <60.058154> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-0.983878> speed <96.692920> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <-0.078657> speed <105.508758> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <0.115071> speed <8.264886> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <-0.066454> speed <86.004411> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <-0.024866> speed <32.354305> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-0.490164> speed <45.950642> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <-0.045565> speed <58.591903> / animSpeed; 
			turn rightFrontLegPivot to x-axis <0.027630> speed <34.899482> / animSpeed; 
			turn rightFrontLegPivot to z-axis <0.773229> speed <59.860007> / animSpeed; 
			turn rightFrontLegPivot to y-axis <-0.085243> speed <166.600505> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-0.558711> speed <100.261314> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <0.524808> speed <64.319571> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-0.912706> speed <162.647357> / animSpeed; 
			turn rightRearLegJoint2 to x-axis <0.274233> speed <41.323358> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <10.397647> speed <27.002342> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-0.789184> speed <132.263165> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <-0.035567> speed <19.363266> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-3.728082> speed <30.947058> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-0.555021> speed <99.649300> / animSpeed; 
			turn rightRearLegPivot to x-axis <0.404896> speed <48.948080> / animSpeed; 
			turn rightRearLegPivot to z-axis <23.140927> speed <65.866929> / animSpeed; 
			turn rightRearLegPivot to y-axis <-1.330151> speed <280.970750> / animSpeed;
			turn turretHeadingPivot to x-axis <0.769568> speed <18.845397> / animSpeed;  
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			move chassis to y-axis [0.008751] speed [15.291367] / animSpeed; 
			turn chassis to y-axis <0.061853> speed <49.848518> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <4.525440> speed <98.965020> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <37.309266> speed <156.298053> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <-16.609161> speed <33.734338> / animSpeed; 
			turn leftFrontLegJoint2 to x-axis <0.538841> speed <60.497827> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-10.329842> speed <102.907241> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <-7.314536> speed <7.707373> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <2.755607> speed <44.179047> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <14.188359> speed <45.576350> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <-3.918532> speed <28.514623> / animSpeed; 
			turn leftFrontLegPivot to x-axis <-10.033708> speed <72.984302> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-24.071520> speed <383.961167> / animSpeed; 
			turn leftFrontLegPivot to y-axis <-29.994284> speed <74.098912> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <-3.145701> speed <31.450377> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <9.879109> speed <150.303666> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <9.238784> speed <115.309465> / animSpeed; 
			turn leftRearLegJoint2 to x-axis <0.254601> speed <5.292741> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-2.910424> speed <60.881614> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <7.092969> speed <77.866692> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <-2.835256> speed <26.852805> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <8.667365> speed <132.031394> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <4.352773> speed <47.138583> / animSpeed; 
			turn leftRearLegPivot to x-axis <3.943628> speed <62.366500> / animSpeed; 
			turn leftRearLegPivot to z-axis <-9.261456> speed <162.930543> / animSpeed; 
			turn leftRearLegPivot to y-axis <13.475804> speed <180.627708> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <-2.068703> speed <60.632448> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-1.828408> speed <25.335902> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <-3.486231> speed <102.227215> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <0.288076> speed <5.190135> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <-2.892596> speed <84.784271> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <-1.045641> speed <30.623268> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-0.836905> speed <10.402225> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <-2.001293> speed <58.671862> / animSpeed; 
			turn rightFrontLegPivot to x-axis <1.261819> speed <37.025676> / animSpeed; 
			turn rightFrontLegPivot to z-axis <1.418420> speed <19.355729> / animSpeed; 
			turn rightFrontLegPivot to y-axis <-5.310177> speed <156.748027> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <2.025288> speed <77.519973> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-0.193774> speed <21.557459> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <3.627301> speed <136.200207> / animSpeed; 
			turn rightRearLegJoint2 to x-axis <-0.844394> speed <33.558802> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <7.325617> speed <92.160912> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <3.007644> speed <113.904827> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <0.558488> speed <17.821661> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-2.849543> speed <26.356165> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <2.299509> speed <85.635901> / animSpeed; 
			turn rightRearLegPivot to x-axis <-0.902912> speed <39.234246> / animSpeed; 
			turn rightRearLegPivot to z-axis <15.933361> speed <216.226970> / animSpeed; 
			turn rightRearLegPivot to y-axis <5.978284> speed <219.253052> / animSpeed;
			turn turretHeadingPivot to x-axis <-0.874616> speed <49.325544> / animSpeed;  
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:36
			move chassis to y-axis [0.305889] speed [8.914146] / animSpeed; 
			turn chassis to y-axis <-1.623108> speed <50.548850> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <21.279489> speed <480.893334> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <-11.614334> speed <149.844805> / animSpeed; 
			turn leftFrontLegJoint2 to x-axis <0.258007> speed <8.425025> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-4.581506> speed <172.450102> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <-6.987344> speed <9.815763> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <2.430949> speed <9.739724> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <9.076112> speed <153.367390> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <-4.406530> speed <14.639960> / animSpeed; 
			turn leftFrontLegPivot to x-axis <-5.834246> speed <125.983885> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-15.464906> speed <258.198414> / animSpeed; 
			turn leftFrontLegPivot to y-axis <-19.961433> speed <300.985536> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <-3.706436> speed <16.822058> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <18.247933> speed <251.064725> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <13.162235> speed <117.703532> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-5.846720> speed <88.088892> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <8.847605> speed <52.639090> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <-3.391217> speed <16.678822> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <15.269139> speed <198.053220> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <5.183857> speed <24.932500> / animSpeed; 
			turn leftRearLegPivot to x-axis <6.896806> speed <88.595336> / animSpeed; 
			turn leftRearLegPivot to z-axis <-16.072009> speed <204.316571> / animSpeed; 
			turn leftRearLegPivot to y-axis <20.668065> speed <215.767853> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <-0.431098> speed <49.128160> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <1.456519> speed <98.547816> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <-1.044783> speed <73.243444> / animSpeed; 
			turn rightFrontLegJoint2 to x-axis <0.178828> speed <4.816422> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <5.025493> speed <142.122521> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <-0.774017> speed <63.557378> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <-0.102442> speed <28.295985> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <1.124444> speed <58.840490> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <-0.602656> speed <41.959110> / animSpeed; 
			turn rightFrontLegPivot to x-axis <0.437189> speed <24.738905> / animSpeed; 
			turn rightFrontLegPivot to z-axis <11.600753> speed <305.469971> / animSpeed; 
			turn rightFrontLegPivot to y-axis <-1.428432> speed <116.452365> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <2.187231> speed <4.858307> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-2.651860> speed <73.742583> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <4.498465> speed <26.134938> / animSpeed; 
			turn rightRearLegJoint2 to x-axis <-0.070547> speed <23.215392> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <0.424034> speed <207.047496> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <3.909713> speed <27.062059> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <1.750287> speed <35.753962> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-2.368853> speed <14.420698> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <2.447875> speed <4.450974> / animSpeed; 
			turn rightRearLegPivot to x-axis <-1.501116> speed <17.946103> / animSpeed; 
			turn rightRearLegPivot to z-axis <1.984599> speed <418.462878> / animSpeed; 
			turn rightRearLegPivot to y-axis <6.488465> speed <15.305404> / animSpeed;
			turn turretHeadingPivot to x-axis <-1.364110> speed <14.684807> / animSpeed;  
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:42
			move chassis to y-axis [1.168015] speed [25.863762] / animSpeed; 
			turn chassis to y-axis <-2.695838> speed <32.181883> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <3.544326> speed <26.773859> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <10.795527> speed <314.518839> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <-7.284551> speed <129.893473> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-1.798481> speed <83.490732> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <-5.306865> speed <50.414365> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <1.920644> speed <15.309150> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <4.917716> speed <124.751903> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <-3.536642> speed <26.096652> / animSpeed; 
			turn leftFrontLegPivot to x-axis <-2.914667> speed <87.587360> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-7.985900> speed <224.370177> / animSpeed; 
			turn leftFrontLegPivot to y-axis <-11.932540> speed <240.866775> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <-2.744936> speed <28.845001> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <10.427034> speed <234.626962> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <12.154585> speed <30.229504> / animSpeed; 
			turn leftRearLegJoint2 to x-axis <1.625022> speed <38.405329> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-8.087455> speed <67.222022> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <8.360541> speed <14.611926> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <-2.085155> speed <39.181865> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <10.655270> speed <138.416063> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <5.663473> speed <14.388489> / animSpeed; 
			turn leftRearLegPivot to x-axis <4.802391> speed <62.832443> / animSpeed; 
			turn leftRearLegPivot to z-axis <-20.196191> speed <123.725479> / animSpeed; 
			turn leftRearLegPivot to y-axis <18.758642> speed <57.282713> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <1.396574> speed <54.830165> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-2.289336> speed <112.375670> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <5.595953> speed <199.222059> / animSpeed; 
			turn rightFrontLegJoint2 to x-axis <-1.318723> speed <44.926532> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <8.721381> speed <110.876625> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <3.501231> speed <128.257450> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-0.604425> speed <51.866083> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <2.804080> speed <102.202079> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-1.395372> speed <54.976834> / animSpeed; 
			turn rightFrontLegPivot to z-axis <22.800367> speed <335.988420> / animSpeed; 
			turn rightFrontLegPivot to y-axis <8.981227> speed <312.289773> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <0.721207> speed <43.980736> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-1.667427> speed <29.533004> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <1.580278> speed <87.545633> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <-0.509683> speed <28.011489> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <1.388116> speed <75.647887> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <0.646641> speed <33.109375> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-1.254284> speed <33.437068> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <0.858172> speed <47.691084> / animSpeed; 
			turn rightRearLegPivot to x-axis <-0.486925> speed <30.425719> / animSpeed; 
			turn rightRearLegPivot to z-axis <-0.267003> speed <67.548039> / animSpeed; 
			turn rightRearLegPivot to y-axis <2.201493> speed <128.609156> / animSpeed; 
			turn turretHeadingPivot to x-axis <-0.052669> speed <39.343218> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:48
			move chassis to y-axis [1.647240] speed [14.376755] / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <1.957355> speed <47.609110> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <4.308352> speed <194.615261> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <-3.426959> speed <115.727761> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-0.308802> speed <44.690371> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <-2.793734> speed <75.393929> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <1.061629> speed <25.770452> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <2.080682> speed <85.111004> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <-1.897411> speed <49.176933> / animSpeed; 
			turn leftFrontLegPivot to x-axis <-1.142044> speed <53.178686> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-2.617312> speed <161.057641> / animSpeed; 
			turn leftFrontLegPivot to y-axis <-5.455448> speed <194.312756> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <-1.533615> speed <36.339640> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <1.698017> speed <261.870525> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <7.287550> speed <146.011046> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-9.219618> speed <33.964909> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <5.224981> speed <94.066804> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <-0.707550> speed <41.328140> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <4.786743> speed <176.055801> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <3.890242> speed <53.196933> / animSpeed; 
			turn leftRearLegPivot to x-axis <2.036311> speed <82.982425> / animSpeed; 
			turn leftRearLegPivot to z-axis <-20.700874> speed <15.140480> / animSpeed; 
			turn leftRearLegPivot to y-axis <10.690167> speed <242.054229> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <1.082664> speed <9.417295> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-15.951359> speed <409.860668> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <12.746581> speed <214.518850> / animSpeed; 
			turn rightFrontLegJoint2 to x-axis <-2.503772> speed <35.551474> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <12.024446> speed <99.091949> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <6.368716> speed <86.024551> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-6.710841> speed <183.192477> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <4.792545> speed <59.653971> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-4.108196> speed <81.384708> / animSpeed; 
			turn rightFrontLegPivot to z-axis <35.095127> speed <368.842817> / animSpeed; 
			turn rightFrontLegPivot to y-axis <22.313859> speed <399.978951> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-0.772388> speed <44.807845> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-2.475963> speed <24.256093> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-1.718882> speed <98.974788> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-1.515290> speed <87.102198> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <-0.698518> speed <40.354761> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-1.946450> speed <20.764965> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-0.921282> speed <53.383635> / animSpeed; 
			turn rightRearLegPivot to x-axis <0.521435> speed <30.250800> / animSpeed; 
			turn rightRearLegPivot to z-axis <0.129116> speed <11.883565> / animSpeed; 
			turn rightRearLegPivot to y-axis <-2.328908> speed <135.912020> / animSpeed; 
			turn turretHeadingPivot to x-axis <1.328306> speed <41.429270> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:54
			move chassis to y-axis [0.813370] speed [25.016098] / animSpeed; 
			turn chassis to y-axis <-1.772457> speed <29.408639> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <-0.056817> speed <60.425166> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <1.112458> speed <95.876806> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <0.093355> speed <105.609418> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-0.006620> speed <9.065470> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <0.079038> speed <86.183155> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <-0.029996> speed <32.748762> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <0.566440> speed <45.427279> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <0.054076> speed <58.544613> / animSpeed; 
			turn leftFrontLegPivot to x-axis <0.029664> speed <35.151252> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-0.578613> speed <61.160966> / animSpeed; 
			turn leftFrontLegPivot to y-axis <0.107834> speed <166.898473> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <-0.175759> speed <40.735665> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <-0.630861> speed <69.866318> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <1.070559> speed <186.509724> / animSpeed; 
			turn leftRearLegJoint2 to x-axis <0.275126> speed <40.750758> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-10.271751> speed <31.563978> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <0.801045> speed <132.718085> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <-0.040163> speed <20.021602> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <3.587456> speed <35.978619> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <0.565155> speed <99.752615> / animSpeed; 
			turn leftRearLegPivot to x-axis <0.403330> speed <48.989402> / animSpeed; 
			turn leftRearLegPivot to z-axis <-22.792930> speed <62.761686> / animSpeed; 
			turn leftRearLegPivot to y-axis <1.351445> speed <280.161655> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <1.313475> speed <6.924317> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-32.033215> speed <482.455688> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <17.757730> speed <150.334479> / animSpeed; 
			turn rightFrontLegJoint2 to x-axis <-1.452857> speed <31.527466> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <13.628882> speed <48.133086> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <7.607173> speed <37.153689> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <1.313499> speed <42.974492> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-12.644044> speed <177.996079> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-7.689326> speed <107.433915> / animSpeed; 
			turn rightFrontLegPivot to z-axis <36.536963> speed <43.255076> / animSpeed; 
			turn rightFrontLegPivot to y-axis <32.444174> speed <303.909438> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-2.509432> speed <52.111310> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-4.836317> speed <70.810605> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-5.194521> speed <104.269176> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <0.810318> speed <39.454613> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-4.482032> speed <89.002240> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <-1.943854> speed <37.360085> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-4.306679> speed <70.806872> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-2.764935> speed <55.309581> / animSpeed; 
			turn rightRearLegPivot to x-axis <1.869371> speed <40.438081> / animSpeed; 
			turn rightRearLegPivot to z-axis <3.660809> speed <105.950785> / animSpeed; 
			turn rightRearLegPivot to y-axis <-7.425672> speed <152.902907> / animSpeed; 
			turn turretHeadingPivot to x-axis <0.955616> speed <11.180704> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:60
			move chassis to y-axis [0.000000] speed [24.401093] / animSpeed; 
			turn chassis to y-axis <-0.123678> speed <49.463375> / animSpeed; 
			turn leftFrontLegJoint1 to x-axis <-2.077962> speed <60.634342> / animSpeed; 
			turn leftFrontLegJoint1 to z-axis <1.855048> speed <22.277684> / animSpeed; 
			turn leftFrontLegJoint1 to y-axis <3.505255> speed <102.356997> / animSpeed; 
			turn leftFrontLegJoint2 to z-axis <-0.304871> speed <8.947528> / animSpeed; 
			turn leftFrontLegJoint2 to y-axis <2.906961> speed <84.837704> / animSpeed; 
			turn leftFrontLegJoint3 to x-axis <-1.050050> speed <30.601618> / animSpeed; 
			turn leftFrontLegJoint3 to z-axis <0.848157> speed <8.451523> / animSpeed; 
			turn leftFrontLegJoint3 to y-axis <2.011379> speed <58.719082> / animSpeed; 
			turn leftFrontLegPivot to x-axis <1.266311> speed <37.099389> / animSpeed; 
			turn leftFrontLegPivot to z-axis <-1.469195> speed <26.717452> / animSpeed; 
			turn leftFrontLegPivot to y-axis <5.338884> speed <156.931485> / animSpeed; 
			turn leftRearLegJoint1 to x-axis <0.949879> speed <33.769143> / animSpeed; 
			turn leftRearLegJoint1 to z-axis <0.192230> speed <24.692716> / animSpeed; 
			turn leftRearLegJoint1 to y-axis <-4.024938> speed <152.864916> / animSpeed; 
			turn leftRearLegJoint2 to x-axis <-0.840641> speed <33.472993> / animSpeed; 
			turn leftRearLegJoint2 to z-axis <-7.282492> speed <89.677763> / animSpeed; 
			turn leftRearLegJoint2 to y-axis <-2.995605> speed <113.899502> / animSpeed; 
			turn leftRearLegJoint3 to x-axis <0.556097> speed <17.887800> / animSpeed; 
			turn leftRearLegJoint3 to z-axis <2.860447> speed <21.810263> / animSpeed; 
			turn leftRearLegJoint3 to y-axis <-2.290412> speed <85.666992> / animSpeed; 
			turn leftRearLegPivot to x-axis <-0.894574> speed <38.937131> / animSpeed; 
			turn leftRearLegPivot to z-axis <-15.937362> speed <205.667053> / animSpeed; 
			turn leftRearLegPivot to y-axis <-5.951190> speed <219.079061> / animSpeed; 
			turn rightFrontLegJoint1 to x-axis <4.540066> speed <96.797716> / animSpeed; 
			turn rightFrontLegJoint1 to z-axis <-37.282075> speed <157.465811> / animSpeed; 
			turn rightFrontLegJoint1 to y-axis <16.641339> speed <33.491730> / animSpeed; 
			turn rightFrontLegJoint2 to x-axis <0.537812> speed <59.720073> / animSpeed; 
			turn rightFrontLegJoint2 to z-axis <10.310803> speed <99.542357> / animSpeed; 
			turn rightFrontLegJoint2 to y-axis <7.331465> speed <8.271222> / animSpeed; 
			turn rightFrontLegJoint3 to x-axis <2.762001> speed <43.455064> / animSpeed; 
			turn rightFrontLegJoint3 to z-axis <-14.179514> speed <46.064102> / animSpeed; 
			turn rightFrontLegJoint3 to y-axis <3.929303> speed <28.743297> / animSpeed; 
			turn rightFrontLegPivot to x-axis <-10.070380> speed <71.431604> / animSpeed; 
			turn rightFrontLegPivot to z-axis <24.044100> speed <374.785901> / animSpeed; 
			turn rightFrontLegPivot to y-axis <30.029688> speed <72.434566> / animSpeed; 
			turn rightRearLegJoint1 to x-axis <-4.619280> speed <63.295446> / animSpeed; 
			turn rightRearLegJoint1 to z-axis <-9.407003> speed <137.120573> / animSpeed; 
			turn rightRearLegJoint1 to y-axis <-8.570558> speed <101.281110> / animSpeed; 
			turn rightRearLegJoint2 to x-axis <0.304042> speed <6.994561> / animSpeed; 
			turn rightRearLegJoint2 to z-axis <3.083134> speed <68.184462> / animSpeed; 
			turn rightRearLegJoint2 to y-axis <-7.070466> speed <77.653027> / animSpeed; 
			turn rightRearLegJoint3 to x-axis <-2.793587> speed <25.492008> / animSpeed; 
			turn rightRearLegJoint3 to z-axis <-8.586787> speed <128.403232> / animSpeed; 
			turn rightRearLegJoint3 to y-axis <-4.359378> speed <47.833302> / animSpeed; 
			turn rightRearLegPivot to x-axis <3.938669> speed <62.078953> / animSpeed; 
			turn rightRearLegPivot to z-axis <9.276026> speed <168.456516> / animSpeed; 
			turn rightRearLegPivot to y-axis <-13.442270> speed <180.497951> / animSpeed;
			turn turretHeadingPivot to x-axis <-0.678704> speed <49.029604> / animSpeed;  
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	animSpeed = 10; // tune restore speed here, higher values are slower restore speeds
	move chassis to y-axis [0] speed [80.260339] / animSpeed;
	turn chassis to y-axis <0> speed <84.250677> / animSpeed;
	turn leftFrontLegJoint1 to x-axis <0> speed <130.905986> / animSpeed;
	turn leftFrontLegJoint1 to y-axis <0> speed <362.044401> / animSpeed;
	turn leftFrontLegJoint1 to z-axis <0> speed <611.987212> / animSpeed;
	turn leftFrontLegJoint2 to x-axis <0> speed <107.996658> / animSpeed;
	turn leftFrontLegJoint2 to y-axis <0> speed <225.565770> / animSpeed;
	turn leftFrontLegJoint2 to z-axis <0> speed <266.124575> / animSpeed;
	turn leftFrontLegJoint3 to x-axis <0> speed <93.531389> / animSpeed;
	turn leftFrontLegJoint3 to y-axis <0> speed <176.614135> / animSpeed;
	turn leftFrontLegJoint3 to z-axis <0> speed <234.254464> / animSpeed;
	turn leftFrontLegPivot to x-axis <0> speed <176.557231> / animSpeed;
	turn leftFrontLegPivot to y-axis <-45> speed <630.225696> / animSpeed;
	turn leftFrontLegPivot to z-axis <0> speed <710.235940> / animSpeed;
	turn leftRearLegJoint1 to x-axis <0> speed <75.427284> / animSpeed;
	turn leftRearLegJoint1 to y-axis <0> speed <272.031120> / animSpeed;
	turn leftRearLegJoint1 to z-axis <0> speed <550.556107> / animSpeed;
	turn leftRearLegJoint2 to x-axis <0> speed <71.076283> / animSpeed;
	turn leftRearLegJoint2 to y-axis <0> speed <192.678201> / animSpeed;
	turn leftRearLegJoint2 to z-axis <0> speed <297.177774> / animSpeed;
	turn leftRearLegJoint3 to x-axis <0> speed <64.471119> / animSpeed;
	turn leftRearLegJoint3 to y-axis <0> speed <149.565823> / animSpeed;
	turn leftRearLegJoint3 to z-axis <0> speed <363.524994> / animSpeed;
	turn leftRearLegPivot to x-axis <0> speed <140.327442> / animSpeed;
	turn leftRearLegPivot to y-axis <45> speed <397.759375> / animSpeed;
	turn leftRearLegPivot to z-axis <0> speed <691.633194> / animSpeed;
	turn rightFrontLegJoint1 to x-axis <0> speed <132.058218> / animSpeed;
	turn rightFrontLegJoint1 to y-axis <0> speed <362.722863> / animSpeed;
	turn rightFrontLegJoint1 to z-axis <0> speed <613.468424> / animSpeed;
	turn rightFrontLegJoint2 to x-axis <0> speed <108.497015> / animSpeed;
	turn rightFrontLegJoint2 to y-axis <0> speed <226.070574> / animSpeed;
	turn rightFrontLegJoint2 to z-axis <0> speed <267.705316> / animSpeed;
	turn rightFrontLegJoint3 to x-axis <0> speed <94.156132> / animSpeed;
	turn rightFrontLegJoint3 to y-axis <0> speed <176.941974> / animSpeed;
	turn rightFrontLegJoint3 to z-axis <0> speed <234.940258> / animSpeed;
	turn rightFrontLegPivot to x-axis <0> speed <176.491064> / animSpeed;
	turn rightFrontLegPivot to y-axis <45> speed <631.695104> / animSpeed;
	turn rightFrontLegPivot to z-axis <0> speed <714.104389> / animSpeed;
	turn rightRearLegJoint1 to x-axis <0> speed <75.197611> / animSpeed;
	turn rightRearLegJoint1 to y-axis <0> speed <272.264296> / animSpeed;
	turn rightRearLegJoint1 to z-axis <0> speed <549.076261> / animSpeed;
	turn rightRearLegJoint2 to x-axis <0> speed <71.212099> / animSpeed;
	turn rightRearLegJoint2 to y-axis <0> speed <192.784731> / animSpeed;
	turn rightRearLegJoint2 to z-axis <0> speed <297.389521> / animSpeed;
	turn rightRearLegJoint3 to x-axis <0> speed <64.341748> / animSpeed;
	turn rightRearLegJoint3 to y-axis <0> speed <149.693174> / animSpeed;
	turn rightRearLegJoint3 to z-axis <0> speed <362.156010> / animSpeed;
	turn rightRearLegPivot to x-axis <0> speed <140.335927> / animSpeed;
	turn rightRearLegPivot to y-axis <-45> speed <398.183540> / animSpeed;
	turn rightRearLegPivot to z-axis <0> speed <692.503681> / animSpeed;
	turn turretHeadingPivot to x-axis <0> speed <82.209240> / animSpeed;
}
// REMEMBER TO animspeed = 6 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 6; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 6) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<3) animSpeed=3;
		if (animspeed>12) animSpeed = 12;
		sleep 197;
	}
}
StartMoving(){
	signal SIGNAL_MOVE;
	isMoving=TRUE;
    animSpeed = 8;
	start-script Walk();
}
StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
static-var isOpen;
Open(){
    // if(isDeployed == 0){
        //turret
        move turretHeadingPivot to y-axis [0] speed [8];
        //turn turretPitchPivot to x-axis <0> speed <50>;

        //plates
        move rightTurretPlate to z-axis [0] speed [40];
        move leftTurretPlate to z-axis [0] speed [40];
        move rightTurretPlate to x-axis [0] speed [40];
        move leftTurretPlate to x-axis [0] speed [40];
        wait-for-move leftTurretPlate along x-axis;

        turn rightTurretPlate to z-axis <0> speed <20>;
        turn leftTurretPlate to z-axis <0> speed <20>;
        move rightTurretPlate to y-axis [0] speed [6];
        move leftTurretPlate to y-axis [0] speed [6];

        //barrel and chamber
        move rightTopChamber to z-axis [0] speed [80];
        sleep 100;
        move leftTopChamber to z-axis [0] speed [80];
        sleep 100;
        move rightBottomChamber to z-axis [0] speed [80];
        sleep 100;
        move leftBottomChamber to z-axis [0] speed [80];
        sleep 100;

        move rightTopBarrel to z-axis [0] speed [88];
        sleep 100;
        move leftTopBarrel to z-axis [0] speed [88];
        sleep 100;
        move rightBottomBarrel to z-axis [0] speed [88];
        sleep 100;
        move leftBottomBarrel to z-axis [0] speed [88];
        sleep 100;
        isOpen = 1;
    // }
}

Close(){
    // if(isDeployed == 1){
        isOpen = 0;
        //barrel and chamber
        move rightTopBarrel to z-axis [-22] speed [22];
        sleep 250;
        move leftTopBarrel to z-axis [-22] speed [22];
        sleep 250;
        move rightBottomBarrel to z-axis [-22] speed [22];
        sleep 250;
        move leftBottomBarrel to z-axis [-22] speed [22];
        sleep 250;

        move rightTopChamber to z-axis [-20] speed [20];
        sleep 250;
        move leftTopChamber to z-axis [-20] speed [20];
        sleep 250;
        move rightBottomChamber to z-axis [-20] speed [20];
        sleep 250;
        move leftBottomChamber to z-axis [-20] speed [20];
        sleep 250;

        //plates
        turn rightTurretPlate to z-axis <10> speed <50>;
        turn leftTurretPlate to z-axis <-10> speed <50>;
        move rightTurretPlate to y-axis [3] speed [1.5];
        move leftTurretPlate to y-axis [3] speed [1.5];
        wait-for-turn rightTurretPlate around z-axis;

        move rightTurretPlate to z-axis [20] speed [10];
        move leftTurretPlate to z-axis [20] speed [10];
        move rightTurretPlate to x-axis [-5] speed [2.5];
        move leftTurretPlate to x-axis [5] speed [2.5];

        //turret
        turn turretHeadingPivot to y-axis <0.0> speed <36.0>;
        wait-for-turn turretHeadingPivot around y-axis;
        move turretHeadingPivot to y-axis [-4] speed [2];
        turn turretPitchPivot to x-axis <24> speed <20>;


        

    // }
}


Steering(heading)
{
	while( 1 )
	{
		heading = get HEADING;

		if ( heading < oldheading )	bSteering=TRUE;
		if ( heading > oldheading )	bSteering=TRUE;
		if (heading == oldheading ) bSteering=FALSE;

		sleep 66;
		oldheading = heading;
	}
}

#define BASEPIECE chassis
#define HITSPEED <35.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 100

// #include "../unit_hitbyweaponid_and_smoke.h"

RockUnit(anglex, anglez)
{

}

Create()
{
	isMoving = FALSE;
	bSteering = FALSE;
	oldHeading = get HEADING;
	start-script Steering();
	turn leftFrontLegPivot to y-axis <-45> now;
    turn leftRearLegPivot to y-axis <45> now;
	turn rightFrontLegPivot to y-axis <45> now;
	turn rightRearLegPivot to y-axis <-45> now;
    
    turn coolingCellPivotA to x-axis <-42> now;
    turn coolingCellPivotB to x-axis <-42> now;
    turn coolingCellPivotC to x-axis <-42> now;

    ///////////////// undeployed state
    //barrel and chamber
    move rightTopBarrel to z-axis [-22] now;
    move leftTopBarrel to z-axis [-22] now;
    move rightBottomBarrel to z-axis [-22] now;
    move leftBottomBarrel to z-axis [-22] now;

    move rightTopChamber to z-axis [-20] now;
    move leftTopChamber to z-axis [-20] now;
    move rightBottomChamber to z-axis [-20] now;
    move leftBottomChamber to z-axis [-20] now;

    //plates
    turn rightTurretPlate to z-axis <10> now;
    turn leftTurretPlate to z-axis <-10> now;
    move rightTurretPlate to y-axis [3] now;
    move leftTurretPlate to y-axis [3] now;

    move rightTurretPlate to z-axis [20] now;
    move leftTurretPlate to z-axis [20] now;
    move rightTurretPlate to x-axis [-5] now;
    move leftTurretPlate to x-axis [5] now;

    //turret
    move turretHeadingPivot to y-axis [-4] now;
    turn turretPitchPivot to x-axis <24> now;
    isOpen = 0;

	speedmult = 70;
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
	// trajectoryMode = LOW_TRAJECTORY;
    whichBarrel = 0;
}

// Activate()
// {
// 	signal SIGNAL_AIM1;
// 	// trajectoryMode = HIGH_TRAJECTORY;
// 	// set last heading values to large negative, ensure first aim waits for the turn
// 	last_primary_heading = -1000000;
// 	last_primary_pitch = -1000000;
// }

// Deactivate()
// {
// 	signal SIGNAL_AIM1;
// 	// trajectoryMode = LOW_TRAJECTORY;
// 	// set last heading values to large negative, ensure first aim waits for the turn
// 	last_primary_heading = -1000000;
// 	last_primary_pitch = -1000000;
// }

Activate()
{
	start-script OpenCloseAnim(1);
    signal SIGNAL_AIM1;
    last_primary_heading = -1000000;
    last_primary_pitch = -1000000;
}

Deactivate()
{
	start-script OpenCloseAnim(0);
    signal SIGNAL_AIM1;
    last_primary_heading = -1000000;
    last_primary_pitch = -1000000;
}



static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned)
	{
        return (1);
    }
	set-signal-mask 0;
	// turn turretHeadingPivot to y-axis <0.0> speed <36.0>;
	// turn turretPitchPivot to x-axis <0.0> speed <30.0>;
	start-script OpenCloseAnim(0);
	// set last heading values to large negative, ensure first aim waits for the turn
	last_primary_heading = -1000000;
	last_primary_pitch = -1000000;
	wait-for-turn turretHeadingPivot around y-axis;
	wait-for-turn turretPitchPivot around x-axis;
	wpn1_lasthead = 0xbadface;
}

SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}

RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep 8000;
	start-script ExecuteRestoreAfterDelay();
}

fireCommon()
{
    if (whichBarrel == 0){
        sleep 1;
        move rightTopBarrel to z-axis [-20] speed [50];
        move rightTopChamber to z-axis [-4] speed [12];
        call-script lua_UnitScriptLight(1);
        call-script lua_UnitScriptLight(1);
        //sleep 751;

        whichBarrel = 1;
    }
    if (whichBarrel == 1){
        sleep 1;
        move leftTopBarrel to z-axis [-20] speed [50];
        move leftTopChamber to z-axis [-4] speed [12];
        call-script lua_UnitScriptLight(2);
        call-script lua_UnitScriptLight(2);
        //sleep 751;
        whichBarrel = 2;
    }
    if (whichBarrel == 2){
        sleep 1;
        move leftBottomBarrel to z-axis [-20] speed [50];
        move leftBottomChamber to z-axis [-4] speed [12];
        call-script lua_UnitScriptLight(3);
        call-script lua_UnitScriptLight(3);
        //sleep 751;
        whichBarrel = 3;
    }
    if (whichBarrel == 3){
        sleep 1;
        move rightBottomBarrel to z-axis [-20] speed [50];
        move rightBottomChamber to z-axis [-4] speed [12];
        call-script lua_UnitScriptLight(4);
        call-script lua_UnitScriptLight(4);
        // ancillary glows
        call-script lua_UnitScriptLight(5);
        call-script lua_UnitScriptLight(6);
        call-script lua_UnitScriptLight(7);
        call-script lua_UnitScriptLight(8);
        call-script lua_UnitScriptLight(9);
        call-script lua_UnitScriptLight(10);
        call-script lua_UnitScriptLight(11);
        call-script lua_UnitScriptLight(12);
        call-script lua_UnitScriptLight(13);
        //sleep 751;
		turn ventDoorA to x-axis <45> speed <300>;
        turn ventDoorB to x-axis <45> speed <300>;
        turn ventDoorC to x-axis <45> speed <300>;
		start-script SmokeItUp();
		sleep 100;
        move coolingCellA to y-axis [15] speed [100];
        move coolingCellB to y-axis [15] speed [100];
        move coolingCellC to y-axis [15] speed [100];
        whichBarrel = 0;
    }
    sleep 500;
    move rightTopBarrel to z-axis [0] speed [6];
    move rightTopChamber to z-axis [0.0] speed [8];
    sleep 150;
    move leftTopBarrel to z-axis [0] speed [6];
    move leftTopChamber to z-axis [0.0] speed [8];
    sleep 150;
    move leftBottomBarrel to z-axis [0] speed [6];
    move leftBottomChamber to z-axis [0.0] speed [8];
    sleep 150;
    move rightBottomBarrel to z-axis [0] speed [6];
    move rightBottomChamber to z-axis [0.0] speed [8];

}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turretMain;
}

QueryWeapon1(pieceIndex)
{
    if (whichBarrel == 0){
        pieceIndex = rightTopBarrel;
    }
    if (whichBarrel == 1){
        pieceIndex = leftTopBarrel;
    }
    if (whichBarrel == 2){
        pieceIndex = leftBottomBarrel;
    }
    if (whichBarrel == 3){
        pieceIndex = rightBottomBarrel;
    }
}

AimWeapon1(heading, pitch)
{
    if (!isOpen){
        turn turretHeadingPivot to y-axis heading speed <30.0>;
        turn turretPitchPivot to x-axis <0.0> - pitch speed <45.0>;
    }

    start-script OpenCloseAnim(1);
    
    signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;

	while( !isOpen )
	{
		sleep 250;
	}

	// values in <> are degrees per second
	// otherwise angles are in COB angular unit (cau) - There are 65536 cau in a circle
	// In general, 6 cau per frame ~= 1 degree per second
	turn turretHeadingPivot to y-axis heading speed <30.0>;

	if ( (get ABS(last_primary_heading - heading)>180) OR (get ABS(last_primary_pitch - pitch)>270) )
	{
		// seems to take 3 frames for wait-for-turn to process
		wait-for-turn turretHeadingPivot around y-axis;
		wait-for-turn turretPitchPivot around x-axis;
	}
	last_primary_heading=heading;
	last_primary_pitch=pitch;
	start-script RestoreAfterDelay();

	// Prevent low-trajectory "bonus shots" while high-trajectory is reloading
	var reloading;
	reloading = (get GAME_FRAME) < (get WEAPON_RELOADSTATE(2));
	if( reloading )
	{
		return(0);
	}

	return (1);
}

FireWeapon1()
{

	call-script fireCommon();
    sleep 4500;
    move coolingCellA to y-axis [0] speed [10];
    sleep 100;
    move coolingCellB to y-axis [0] speed [10];
    sleep 100;
    move coolingCellC to y-axis [0] speed [10];
    sleep 100;
    wait-for-move coolingCellC along y-axis;
    turn ventDoorA to x-axis <0> speed <50>;
    sleep 100;
    turn ventDoorB to x-axis <0> speed <50>;
    sleep 100;
    turn ventDoorC to x-axis <0> speed <50>;
}

Shot1(heading, pitch) {
    if (whichBarrel == 0){
        emit-sfx 1024 + 0 from rightTopBarrel;
        whichBarrel = 1;
    }
    if (whichBarrel == 1){
        emit-sfx 1024 + 0 from leftTopBarrel;
        whichBarrel = 2;
    }
    if (whichBarrel == 2){
        emit-sfx 1024 + 0 from leftBottomBarrel;
        whichBarrel = 3;
    }
    if (whichBarrel == 3){
        emit-sfx 1024 + 0 from rightBottomBarrel;
        whichBarrel = 0;
    }
    if (whichBarrel >= 4) whichBarrel = 0;
}

// AimFromWeapon2(pieceIndex)
// {
// 	pieceIndex = turretMain;
// }

// QueryWeapon2(pieceIndex)
// {
//     if (whichBarrel == 0){
//         pieceIndex = rightTopBarrel;
//     }
//     if (whichBarrel == 1){
//         pieceIndex = leftTopBarrel;
//     }
//     if (whichBarrel == 2){
//         pieceIndex = leftBottomBarrel;
//     }
//     if (whichBarrel == 3){
//         pieceIndex = rightBottomBarrel;
//     }
// }

// AimWeapon2(heading, pitch)
// {
// 	if (trajectoryMode == LOW_TRAJECTORY)
// 	{
// 		return(0);
// 	}

// 	signal SIGNAL_AIM1;
// 	set-signal-mask SIGNAL_AIM1;
// 	// values in <> are degrees per second
// 	// otherwise angles are in COB angular unit (cau) - There are 65536 cau in a circle
// 	// In general, 6 cau per frame ~= 1 degree per second
// 	turn turretHeadingPivot to y-axis heading speed <30.0>;
// 	turn turretPitchPivot to x-axis <0.0> - pitch speed <45.0>;
// 	if ( (get ABS(last_primary_heading - heading)>180) OR (get ABS(last_primary_pitch - pitch)>270) )
// 	{
// 		// seems to take 3 frames for wait-for-turn to process
// 		wait-for-turn turretHeadingPivot around y-axis;
// 		wait-for-turn turretPitchPivot around x-axis;
// 	}
// 	last_primary_heading=heading;
// 	last_primary_pitch=pitch;
// 	start-script RestoreAfterDelay();

// 	// Prevent high-trajectory "bonus shots" while low-trajectory is reloading
// 	var reloading;
// 	reloading = (get GAME_FRAME) < (get WEAPON_RELOADSTATE(1));
// 	if( reloading )
// 	{
// 		return(0);
// 	}

// 	return (1);
// }

// FireWeapon2()
// {	
// 	call-script fireCommon();
// }

// Shot2(heading, pitch) {
//     if (whichBarrel == 0){
//         emit-sfx 1024 + 0 from rightTopBarrel;
//         whichBarrel = 1;
//     }
//     if (whichBarrel == 1){
//         emit-sfx 1024 + 0 from leftTopBarrel;
//         whichBarrel = 2;
//     }
//     if (whichBarrel == 2){
//         emit-sfx 1024 + 0 from leftBottomBarrel;
//         whichBarrel = 3;
//     }
//     if (whichBarrel == 3){
//         emit-sfx 1024 + 0 from rightBottomBarrel;
//         whichBarrel = 0;
//     }
//     if (whichBarrel >= 4) whichBarrel = 0;
// }

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode leftFrontLegPivot type BITMAPONLY | NOHEATCLOUD;
		explode leftFrontLegJoint1 type BITMAPONLY | NOHEATCLOUD;
		explode leftFrontLegFoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretMain type BITMAPONLY | NOHEATCLOUD;
		explode leftTopBarrel type BITMAPONLY | NOHEATCLOUD;
		explode leftTopChamber type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}

	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode leftFrontLegPivot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leftFrontLegJoint1 type FALL | NOHEATCLOUD;
		explode leftFrontLegFoot type FALL | NOHEATCLOUD;
		explode turretMain type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leftTopBarrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leftTopChamber type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}

	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode leftFrontLegPivot type SMOKE | FALL | NOHEATCLOUD;
		explode leftFrontLegJoint1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode leftFrontLegFoot type SMOKE | FALL | NOHEATCLOUD;
		explode turretMain type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode leftTopBarrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leftTopChamber type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}

	corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode leftFrontLegPivot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leftFrontLegJoint1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode leftFrontLegFoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turretMain type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode leftTopBarrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leftTopChamber type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}