
#include "../recoil_common_includes.h"

piece  lturret, lbarrel, lflare, rturret, rbarrel, rflare, uturret, ubarrel, uflare, torso, pelvis, lthigh, lleg, lfoot, rthigh, rleg, rfoot, luparm, lloarm, lhand, ruparm, rloarm, rhand,
       eyes, shoulder, ltooth, rtooth, aimx1;

static-var  gun_1, restore_delay, moveSpeed, currentSpeed, wpn1_lasthead, animSpeed, maxSpeed, animFramesPerKeyframe, isMoving;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_MOVE 1
#define SIGNAL_SHOOT1 16

Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from C:\Users\PtaQ\Documents\GitHub\BAR\support\Animation_sources\armfido_anim_walk2.blend 
	//set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:5
			turn lhand to x-axis <-11.904617> speed <509.978555> / animSpeed; 
			turn lleg to x-axis <51.319873> speed <1547.548193> / animSpeed; 
			turn lloarm to x-axis <-7.847358> speed <332.011073> / animSpeed; 
			turn lthigh to x-axis <-8.632269> speed <1510.135744> / animSpeed; 
			turn luparm to x-axis <23.882334> speed <330.816473> / animSpeed; 
			turn rfoot to x-axis <19.931631> speed <1834.193224> / animSpeed; 
			turn rhand to x-axis <111.071976> speed <3179.319234> / animSpeed; 
			turn rleg to x-axis <30.067623> speed <1006.546481> / animSpeed; 
			turn rloarm to x-axis <-30.336586> speed <342.665758> / animSpeed; 
			turn rthigh to x-axis <41.567104> speed <124.925150> / animSpeed; 
			turn ruparm to x-axis <-22.240009> speed <1052.853819> / animSpeed; 
			turn torso to x-axis <-3.172586> speed <95.177578> / animSpeed; 
		sleep 131;
	}
	while(isMoving) {
		if (isMoving) { //Frame:9
			turn lfoot to x-axis <-55.425424> speed <447.881390> / animSpeed; 
			turn lhand to x-axis <-17.772354> speed <176.032109> / animSpeed; 
			turn lleg to x-axis <41.040657> speed <308.376484> / animSpeed; 
			turn lloarm to x-axis <10.940426> speed <563.633528> / animSpeed; 
			turn lloarm to z-axis <4.918031> speed <147.540577> / animSpeed; 
			turn lthigh to x-axis <15.479835> speed <723.363111> / animSpeed; 
			turn lthigh to z-axis <2.648751> speed <79.462538> / animSpeed; 
			turn luparm to x-axis <34.615129> speed <321.983860> / animSpeed; 
			move pelvis to y-axis [-2.684218] speed [22.468185] / animSpeed; 
			turn pelvis to z-axis <-2.500000> speed <74.999998> / animSpeed; 
			turn rfoot to x-axis <-38.757297> speed <1760.667842> / animSpeed; 
			turn rhand to x-axis <34.603637> speed <2294.050172> / animSpeed; 
			turn rleg to x-axis <75.329842> speed <1357.866571> / animSpeed; 
			turn rloarm to x-axis <14.876838> speed <1356.402725> / animSpeed; 
			turn rloarm to z-axis <2.568569> speed <77.057183> / animSpeed; 
			move rthigh to z-axis [1.092890] speed [32.786690] / animSpeed; 
			move rthigh to y-axis [1.821483] speed [54.644476] / animSpeed; 
			turn rthigh to x-axis <4.900213> speed <1100.006713> / animSpeed; 
			turn rthigh to z-axis <2.248042> speed <67.440789> / animSpeed; 
			turn ruparm to x-axis <-47.361891> speed <753.656443> / animSpeed; 
			turn torso to x-axis <-1.490819> speed <50.453009> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:13
			turn lfoot to x-axis <-43.868229> speed <346.715873> / animSpeed; 
			turn lhand to x-axis <50.947453> speed <2061.594212> / animSpeed; 
			turn lleg to x-axis <2.293790> speed <1162.406004> / animSpeed; 
			turn lloarm to x-axis <-32.840721> speed <1313.434415> / animSpeed; 
			turn lloarm to z-axis <5.521501> speed <18.104108> / animSpeed; 
			turn lthigh to x-axis <38.376586> speed <686.902528> / animSpeed; 
			turn lthigh to z-axis <5.501472> speed <85.581634> / animSpeed; 
			turn luparm to x-axis <50.444632> speed <474.885090> / animSpeed; 
			turn pelvis to z-axis <-5.0> speed <74.999998> / animSpeed; 
			turn rfoot to x-axis <-27.019617> speed <352.130403> / animSpeed; 
			turn rhand to x-axis <40.893575> speed <188.698148> / animSpeed; 
			turn rleg to x-axis <62.865143> speed <373.940973> / animSpeed; 
			turn rloarm to x-axis <-12.685252> speed <826.862709> / animSpeed; 
			turn rloarm to z-axis <4.923324> speed <70.642666> / animSpeed; 
			move rthigh to z-axis [-0.104085] speed [35.909232] / animSpeed; 
			move rthigh to y-axis [1.353101] speed [14.051439] / animSpeed; 
			turn rthigh to x-axis <-30.110834> speed <1050.331430> / animSpeed; 
			turn rthigh to z-axis <3.919265> speed <50.136711> / animSpeed; 
			turn ruparm to x-axis <-27.609959> speed <592.557962> / animSpeed; 
			turn aimx1 to x-axis <-4.501381> speed <212.960133> / animSpeed; 
			turn aimx1 to y-axis <0.186611> speed <8.691639> / animSpeed; 
			turn torso to x-axis <0.190948> speed <50.453006> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:17
			turn lfoot to x-axis <-38.088680> speed <173.386469> / animSpeed; 
			turn lhand to x-axis <67.793978> speed <505.395750> / animSpeed; 
			turn lleg to x-axis <7.177674> speed <146.516529> / animSpeed; 
			turn lloarm to x-axis <-51.572853> speed <561.963957> / animSpeed; 
			turn lloarm to z-axis <2.298255> speed <96.697402> / animSpeed; 
			turn lthigh to x-axis <44.924528> speed <196.438255> / animSpeed; 
			turn lthigh to z-axis <2.656377> speed <85.352851> / animSpeed; 
			turn luparm to x-axis <37.627512> speed <384.513593> / animSpeed; 
			turn pelvis to z-axis <-2.500000> speed <75.0> / animSpeed; 
			turn rfoot to x-axis <0.338432> speed <820.741462> / animSpeed; 
			turn rhand to x-axis <26.140831> speed <442.582325> / animSpeed; 
			turn rleg to x-axis <41.913476> speed <628.550003> / animSpeed; 
			turn rloarm to x-axis <-25.299279> speed <378.420800> / animSpeed; 
			turn rloarm to z-axis <2.751657> speed <65.150016> / animSpeed; 
			move rthigh to z-axis [0.0] speed [3.122542] / animSpeed; 
			move rthigh to y-axis [0.0] speed [40.593038] / animSpeed; 
			turn rthigh to x-axis <-40.592504> speed <314.450093> / animSpeed; 
			turn rthigh to z-axis <1.806943> speed <63.369661> / animSpeed; 
			turn ruparm to x-axis <1.963109> speed <887.192024> / animSpeed; 
			turn aimx1 to x-axis <-8.050717> speed <106.480079> / animSpeed; 
			turn aimx1 to y-axis <0.331472> speed <4.345820> / animSpeed; 
			turn torso to x-axis <-1.490819> speed <50.453010> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:21
			turn lfoot to x-axis <18.476638> speed <1696.959543> / animSpeed; 
			turn lhand to x-axis <111.071976> speed <1298.339936> / animSpeed; 
			turn lleg to x-axis <24.763254> speed <527.567389> / animSpeed; 
			turn lloarm to x-axis <-30.336599> speed <637.087602> / animSpeed; 
			turn lloarm to z-axis <0.0> speed <68.947509> / animSpeed; 
			turn lthigh to x-axis <44.551213> speed <11.199427> / animSpeed; 
			turn lthigh to z-axis <0.0> speed <79.691318> / animSpeed; 
			turn luparm to x-axis <-22.240006> speed <1796.025546> / animSpeed; 
			move pelvis to y-axis [-1.935278] speed [22.468185] / animSpeed; 
			turn pelvis to z-axis <0.0> speed <75.0> / animSpeed; 
			turn rfoot to x-axis <-40.519687> speed <1225.743574> / animSpeed; 
			turn rhand to x-axis <-11.904617> speed <1141.363440> / animSpeed; 
			turn rleg to x-axis <51.098182> speed <275.541169> / animSpeed; 
			turn rloarm to x-axis <-7.847351> speed <523.557820> / animSpeed; 
			turn rloarm to z-axis <-0.0> speed <82.550025> / animSpeed; 
			turn rthigh to x-axis <-8.556187> speed <961.089527> / animSpeed; 
			turn rthigh to z-axis <0.0> speed <54.208287> / animSpeed; 
			turn ruparm to x-axis <23.882332> speed <657.576697> / animSpeed; 
			turn aimx1 to x-axis <-11.600052> speed <106.480054> / animSpeed; 
			turn aimx1 to y-axis <0.476332> speed <4.345819> / animSpeed; 
			turn torso to x-axis <-3.172586> speed <50.453006> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:25
			move lfoot to z-axis [1.092890] speed [32.786690] / animSpeed; 
			move lfoot to y-axis [1.821483] speed [54.644476] / animSpeed; 
			turn lfoot to x-axis <-17.922510> speed <1091.974462> / animSpeed; 
			turn lhand to x-axis <35.705726> speed <2260.987515> / animSpeed; 
			move lleg to z-axis [1.092890] speed [32.786690] / animSpeed; 
			move lleg to y-axis [1.821483] speed [54.644476] / animSpeed; 
			turn lleg to x-axis <50.242202> speed <764.368451> / animSpeed; 
			turn lloarm to x-axis <15.947363> speed <1388.518872> / animSpeed; 
			turn lloarm to z-axis <-2.692466> speed <80.774116> / animSpeed; 
			move lthigh to z-axis [1.092890] speed [32.786690] / animSpeed; 
			move lthigh to y-axis [1.821483] speed [54.644476] / animSpeed; 
			turn lthigh to x-axis <24.344807> speed <606.192181> / animSpeed; 
			turn lthigh to z-axis <-2.438294> speed <73.148824> / animSpeed; 
			turn luparm to x-axis <-49.266998> speed <810.809759> / animSpeed; 
			turn pelvis to z-axis <2.500000> speed <74.999998> / animSpeed; 
			turn rfoot to x-axis <-46.356296> speed <175.098251> / animSpeed; 
			turn rhand to x-axis <-14.549152> speed <79.336045> / animSpeed; 
			turn rleg to x-axis <32.794023> speed <549.124772> / animSpeed; 
			turn rloarm to x-axis <11.038929> speed <566.588396> / animSpeed; 
			turn rloarm to z-axis <-4.993410> speed <149.801971> / animSpeed; 
			turn rthigh to x-axis <17.595646> speed <784.554989> / animSpeed; 
			turn rthigh to z-axis <-2.673589> speed <80.207678> / animSpeed; 
			turn ruparm to x-axis <32.505198> speed <258.685987> / animSpeed; 
			turn torso to x-axis <0.190948> speed <100.906015> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:29
			move lfoot to z-axis [-0.104085] speed [35.909232] / animSpeed; 
			move lfoot to y-axis [1.353101] speed [14.051439] / animSpeed; 
			turn lfoot to x-axis <7.066146> speed <749.659681> / animSpeed; 
			turn lhand to x-axis <40.390918> speed <140.555765> / animSpeed; 
			move lleg to z-axis [-0.104085] speed [35.909232] / animSpeed; 
			move lleg to y-axis [1.353101] speed [14.051439] / animSpeed; 
			turn lleg to x-axis <0.805912> speed <1483.088696> / animSpeed; 
			turn lloarm to x-axis <-12.457089> speed <852.133573> / animSpeed; 
			turn lloarm to z-axis <-4.937320> speed <67.345605> / animSpeed; 
			move lthigh to z-axis [-0.104085] speed [35.909232] / animSpeed; 
			move lthigh to y-axis [1.353101] speed [14.051439] / animSpeed; 
			turn lthigh to x-axis <-5.508104> speed <895.587330> / animSpeed; 
			turn lthigh to z-axis <-4.447339> speed <60.271359> / animSpeed; 
			turn luparm to x-axis <-27.668272> speed <647.961793> / animSpeed; 
			move pelvis to y-axis [-2.684218] speed [22.468185] / animSpeed; 
			turn pelvis to z-axis <5.0> speed <74.999985> / animSpeed; 
			turn rfoot to x-axis <-45.385777> speed <29.115560> / animSpeed; 
			turn rhand to x-axis <49.760909> speed <1929.301832> / animSpeed; 
			turn rleg to x-axis <6.570218> speed <786.714145> / animSpeed; 
			turn rloarm to x-axis <-32.386237> speed <1302.754962> / animSpeed; 
			turn rloarm to z-axis <-5.551282> speed <16.736183> / animSpeed; 
			turn rthigh to x-axis <36.997335> speed <582.050655> / animSpeed; 
			turn rthigh to z-axis <-5.436170> speed <82.877430> / animSpeed; 
			turn ruparm to x-axis <50.379998> speed <536.243992> / animSpeed; 
			turn aimx1 to x-axis <-4.501381> speed <212.960133> / animSpeed; 
			turn aimx1 to y-axis <0.186611> speed <8.691639> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:33
			move lfoot to z-axis [0.0] speed [3.122542] / animSpeed; 
			move lfoot to y-axis [0.0] speed [40.593038] / animSpeed; 
			turn lfoot to x-axis <0.441607> speed <198.736165> / animSpeed; 
			turn lhand to x-axis <26.392753> speed <419.944960> / animSpeed; 
			move lleg to z-axis [0.0] speed [3.122542] / animSpeed; 
			move lleg to y-axis [0.0] speed [40.593038] / animSpeed; 
			turn lleg to x-axis <42.207472> speed <1242.046778> / animSpeed; 
			turn lloarm to x-axis <-25.426511> speed <389.082657> / animSpeed; 
			turn lloarm to z-axis <-2.746616> speed <65.721100> / animSpeed; 
			move lthigh to z-axis [0.0] speed [3.122542] / animSpeed; 
			move lthigh to y-axis [0.0] speed [40.593038] / animSpeed; 
			turn lthigh to x-axis <-40.752880> speed <1057.343302> / animSpeed; 
			turn lthigh to z-axis <-1.806381> speed <79.228758> / animSpeed; 
			turn luparm to x-axis <2.016109> speed <890.531411> / animSpeed; 
			turn pelvis to z-axis <2.500000> speed <74.999998> / animSpeed; 
			turn rfoot to x-axis <-9.583143> speed <1074.079024> / animSpeed; 
			turn rfoot to z-axis <2.431991> speed <72.959767> / animSpeed; 
			turn rhand to x-axis <67.594161> speed <534.997550> / animSpeed; 
			turn rleg to x-axis <-40.379074> speed <1408.478773> / animSpeed; 
			turn rloarm to x-axis <-51.512925> speed <573.800640> / animSpeed; 
			turn rloarm to z-axis <-2.299499> speed <97.553492> / animSpeed; 
			turn rthigh to x-axis <63.439180> speed <793.255336> / animSpeed; 
			turn rthigh to z-axis <-3.324512> speed <63.349721> / animSpeed; 
			turn ruparm to x-axis <37.637747> speed <382.267520> / animSpeed; 
			turn aimx1 to x-axis <-8.050717> speed <106.480079> / animSpeed; 
			turn aimx1 to y-axis <0.331472> speed <4.345820> / animSpeed; 
			turn torso to x-axis <-1.490819> speed <50.453010> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:37
			turn lfoot to x-axis <-40.496045> speed <1228.129549> / animSpeed; 
			turn lhand to x-axis <-11.904617> speed <1148.921078> / animSpeed; 
			turn lleg to x-axis <51.319873> speed <273.372038> / animSpeed; 
			turn lloarm to x-axis <-7.847358> speed <527.374598> / animSpeed; 
			turn lloarm to z-axis <0.0> speed <82.398847> / animSpeed; 
			turn lthigh to x-axis <-8.632269> speed <963.618345> / animSpeed; 
			turn lthigh to z-axis <-0.0> speed <54.191421> / animSpeed; 
			turn luparm to x-axis <23.882334> speed <655.986744> / animSpeed; 
			move pelvis to y-axis [-1.935278] speed [22.468185] / animSpeed; 
			turn pelvis to z-axis <-0.0> speed <74.999998> / animSpeed; 
			turn rfoot to x-axis <19.931631> speed <885.443219> / animSpeed; 
			turn rfoot to z-axis <0.0> speed <72.959707> / animSpeed; 
			turn rhand to x-axis <111.071976> speed <1304.334451> / animSpeed; 
			turn rleg to x-axis <30.067623> speed <2113.400924> / animSpeed; 
			turn rloarm to x-axis <-30.336586> speed <635.290170> / animSpeed; 
			turn rloarm to z-axis <-0.0> speed <68.984855> / animSpeed; 
			turn rthigh to x-axis <41.567104> speed <656.162272> / animSpeed; 
			turn rthigh to z-axis <0.0> speed <99.735834> / animSpeed; 
			turn ruparm to x-axis <-22.240009> speed <1796.332700> / animSpeed; 
			turn aimx1 to x-axis <-11.600052> speed <106.480054> / animSpeed; 
			turn aimx1 to y-axis <0.476332> speed <4.345819> / animSpeed; 
			turn torso to x-axis <-3.172586> speed <50.453006> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move lfoot to y-axis [0.0] speed [13.661119];
	move lfoot to z-axis [0.0] speed [8.977308];
	move lleg to y-axis [0.0] speed [13.661119];
	move lleg to z-axis [0.0] speed [8.977308];
	move lthigh to y-axis [0.0] speed [13.661119];
	move lthigh to z-axis [0.0] speed [8.977308];
	move pelvis to y-axis [-1.935278] speed [5.617046];
	move pelvis to z-axis [1.539426] speed [-1.282855];
	move rthigh to y-axis [0.0] speed [13.661119];
	move rthigh to z-axis [0.0] speed [8.977308];
	turn lfoot to x-axis <-40.477439> speed <424.239886>;
	turn lhand to x-axis <5.094668> speed <565.246879>;
	turn lleg to x-axis <-0.265067> speed <386.887048>;
	turn lloarm to x-axis <-18.914394> speed <347.129718>;
	turn lloarm to z-axis <0.0> speed <36.885144>;
	turn lthigh to x-axis <41.705589> speed <377.533936>;
	turn lthigh to z-axis <0.0> speed <21.395409>;
	turn luparm to x-axis <12.855118> speed <449.006386>;
	turn pelvis to z-axis <0.0> speed <18.750001>;
	turn rfoot to x-axis <-41.208143> speed <458.548306>;
	turn rfoot to z-axis <0.0> speed <18.239942>;
	turn rhand to x-axis <5.094668> speed <794.829808>;
	turn rleg to x-axis <-3.483926> speed <528.350231>;
	turn rloarm to x-axis <-18.914394> speed <339.100681>;
	turn rloarm to z-axis <0.0> speed <37.450493>;
	turn rthigh to x-axis <45.731275> speed <275.001678>;
	turn rthigh to z-axis <0.0> speed <24.933959>;
	turn ruparm to x-axis <12.855118> speed <449.083175>;
	turn aimx1 to x-axis <-11.600052> speed <53.240033>;
	turn aimx1 to y-axis <0.476332> speed <2.172910>;
	turn aimx1 to z-axis <-0.114163> speed <-0.095136>;
	turn torso to x-axis <0.0> speed <25.226504>;
}
// REMEMBER TO animspeed = 4 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 3; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
	if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 3) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>8) animSpeed = 8;
		sleep 131;
	}
}

StartMoving(reversing){
	signal SIGNAL_MOVE;
  set-signal-mask SIGNAL_MOVE;
	isMoving=TRUE;
	start-script UnitSpeed();
  start-script Walk();
}

StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
  call-script StopWalking();
}


#define BASEPIECE pelvis
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 4
#define MAXTILT 100


Create()
{
	hide aimx1;
	hide lflare;
	hide rflare;
	hide uflare;
	gun_1 = 0;
	move pelvis to y-axis 4000 speed <500>; 
	restore_delay = 100;
	animspeed = 4;
	moveSpeed = get MAX_SPEED;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn aimx1 to y-axis <0.0> speed <90.0>;
	turn aimx1 to x-axis <0.0> speed <50.0>;
	move lturret to z-axis [0.0] speed [2.250000];
	move rturret to z-axis [0.0] speed [2.250000];
	move uturret to z-axis [0.0] speed [2.250000];
	wait-for-move lturret along z-axis;
	wait-for-turn aimx1 around x-axis;
	wait-for-turn aimx1 around y-axis;
	gun_1 = 0;
	wpn1_lasthead = 0xbadface;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}



AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	turn aimx1 to y-axis heading speed <200.0>;
	turn aimx1 to x-axis <0.0> - pitch speed <100.0>;
	if ((wpn1_lasthead == 0xbadface) OR ABSOLUTE_GREATER_THAN(WRAPDELTA(heading - wpn1_lasthead), <7>))
	{
		wpn1_lasthead = 0xbadface;
        wait-for-turn aimx1 around x-axis;
        wait-for-turn aimx1 around y-axis;
	}
	start-script RestoreAfterDelay();
	wpn1_lasthead = heading;
	return (1);
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = aimx1;
}

FireWeapon1()
{
	return(1);
}

Shot1(zero)
{
	signal SIGNAL_SHOOT1;
	set-signal-mask SIGNAL_SHOOT1;
	
	if (gun_1 == 0)
	{
		emit-sfx 1024 + 0 from lflare;
		move lturret to z-axis [-1.5] now;
		move rturret to z-axis [-1.5] now;
		move uturret to z-axis [-1.5] now;
	}
	else if (gun_1 == 1)
	{
		emit-sfx 1024 + 0 from rflare;
		move lturret to z-axis [-3] now;
		move rturret to z-axis [-3] now;
		move uturret to z-axis [-3] now;
	}
	else if (gun_1 == 2)
	{
		emit-sfx 1024 + 0 from uflare;
		move lturret to z-axis [-4.5] now;
		move rturret to z-axis [-4.5] now;
		move uturret to z-axis [-4.5] now;
		move lturret to z-axis [0.0] speed [2.50000];
		move rturret to z-axis [0.0] speed [2.50000];
		move uturret to z-axis [0.0] speed [2.50000];
	}
	sleep 32;
	++gun_1;
	if(gun_1>=3)
	{
		gun_1=0;
	}
	return(1);
}

QueryWeapon1(pieceIndex)
{
	if (gun_1 == 0)
	{
	pieceIndex = lflare;
	}
	else if (gun_1 == 1)
	{
	pieceIndex = rflare;
	}
	else if (gun_1 == 2)
	{
	pieceIndex = uflare;
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lfoot type FALL | BITMAP4 | NOHEATCLOUD;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	return corpsetype;
}
