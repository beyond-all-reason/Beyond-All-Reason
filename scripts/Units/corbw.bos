
#include "../recoil_common_includes.h"

piece  base, flare, thrusta, thrustb;

#define SIGNAL_AIM1 256

#define IDLEHOVERSCALE 24
#define IDLEHOVERSPEED 30
#define IDLEBASEPIECE base
#include "../idlehover.h"

//#define DEBUG
#include "../debug.h"

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

Create()
{
	hide flare;
	hide thrusta;
	hide thrustb;
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
}

Activate()
{
	show thrusta;
	show thrustb;
}

Deactivate()
{
	hide thrusta;
	hide thrustb;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

AimWeapon1(heading, pitch)
{
	var tmp;
    signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	 	while( 255 > heading )
		{
			
			set HEADING to (0 - 1500 + get HEADING);
			heading = heading + 1500;
			sleep 1;
		}
		while( heading > 255 )
		{
			set HEADING to (1500 + get HEADING);
			heading = heading - 1500;
			sleep 1;
		}	
	return (1);
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode flare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
