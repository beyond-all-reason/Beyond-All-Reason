
#include "../recoil_common_includes.h"

piece  pelvis, lfleg, rfleg, lbleg, rbleg, lbfoot, lffoot, rbfoot, rffoot, torso, flakgun, flareflak, flare1, flare2, flare3, flare4, aimy1, aimx1, aimx2;

static-var  isMoving;
static-var animSpeed, maxSpeed, animFramesPerKeyframe;

#define SIGNAL_MOVE 1
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\coraak_anim_walk.blend 
	set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:5
			turn lbfoot to x-axis <19.449998> speed <583.499953> / animSpeed; //delta=-19.45 
			turn lbleg to x-axis <-10.149999> speed <304.499976> / animSpeed; //delta=10.15 
			turn lbleg to y-axis <0.0> speed <168.0> / animSpeed; //delta=-5.60 
			turn lffoot to x-axis <-41.749992> speed <1252.499770> / animSpeed; //delta=41.75 
			turn lfleg to x-axis <7.749997> speed <232.499913> / animSpeed; //delta=-7.75 
			turn lfleg to y-axis <0.0> speed <452.999985> / animSpeed; //delta=-15.10 
			move pelvis to x-axis [-0.270000] speed [8.099999] / animSpeed; //delta=-0.27 
			move pelvis to z-axis [-1.0] speed [29.999998] / animSpeed; //delta=-1.00 
			move pelvis to y-axis [0.330000] speed [9.899999] / animSpeed; //delta=0.33 
			turn pelvis to x-axis <3.250000> speed <97.499992> / animSpeed; //delta=-3.25 
			turn pelvis to z-axis <3.743052> speed <112.291550> / animSpeed; //delta=-3.74 
			turn rbfoot to x-axis <-40.799998> speed <1223.999952> / animSpeed; //delta=40.80 
			turn rbleg to x-axis <29.199998> speed <875.999936> / animSpeed; //delta=-29.20 
			turn rbleg to y-axis <0.0> speed <122.999959> / animSpeed; //delta=4.10 
			turn rffoot to x-axis <29.017642> speed <870.529261> / animSpeed; //delta=-29.02 
			turn rffoot to z-axis <0.437783> speed <13.133476> / animSpeed; //delta=-0.44 
			turn rffoot to y-axis <-3.208612> speed <96.258353> / animSpeed; //delta=-3.21 
			turn rfleg to x-axis <-6.202686> speed <186.080581> / animSpeed; //delta=6.20 
			turn rfleg to z-axis <0.561451> speed <16.843519> / animSpeed; //delta=-0.56 
			turn rfleg to y-axis <-3.507352> speed <347.779423> / animSpeed; //delta=11.59 
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:10
			turn lbfoot to x-axis <83.0> speed <1906.500287> / animSpeed; //delta=-63.55 
			turn lbleg to x-axis <-47.999995> speed <1135.499859> / animSpeed; //delta=37.85 
			turn lffoot to x-axis <-77.799994> speed <1081.500042> / animSpeed; //delta=36.05 
			turn lfleg to x-axis <45.199996> speed <1123.499968> / animSpeed; //delta=-37.45 
			move pelvis to x-axis [0.030000] speed [9.0] / animSpeed; //delta=0.30 
			move pelvis to z-axis [0.0] speed [29.999998] / animSpeed; //delta=1.00 
			turn pelvis to x-axis <-0.0> speed <97.499992> / animSpeed; //delta=3.25 
			turn pelvis to z-axis <1.120324> speed <78.681833> / animSpeed; //delta=2.62 
			turn rbfoot to x-axis <-35.150001> speed <169.499921> / animSpeed; //delta=-5.65 
			turn rbleg to x-axis <-25.750003> speed <1648.500017> / animSpeed; //delta=54.95 
			turn rffoot to x-axis <30.441880> speed <42.727136> / animSpeed; //delta=-1.42 
			turn rffoot to z-axis <0.875565> speed <13.133476> / animSpeed; //delta=-0.44 
			turn rffoot to y-axis <-6.417224> speed <96.258366> / animSpeed; //delta=-3.21 
			turn rfleg to x-axis <32.794624> speed <1169.919300> / animSpeed; //delta=-39.00 
			turn rfleg to z-axis <1.122901> speed <16.843519> / animSpeed; //delta=-0.56 
			turn rfleg to y-axis <-7.014704> speed <105.220563> / animSpeed; //delta=-3.51 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:15
			turn lbfoot to x-axis <1.168085> speed <2454.957688> / animSpeed; //delta=81.83 
			turn lbleg to x-axis <13.068085> speed <1832.042380> / animSpeed; //delta=-61.07 
			turn lffoot to x-axis <-42.996174> speed <1044.114592> / animSpeed; //delta=-34.80 
			turn lfleg to x-axis <23.331913> speed <656.042504> / animSpeed; //delta=21.87 
			move pelvis to x-axis [0.420000] speed [11.700000] / animSpeed; //delta=0.39 
			move pelvis to z-axis [-1.970000] speed [59.099997] / animSpeed; //delta=-1.97 
			turn pelvis to x-axis <3.399999> speed <101.999983> / animSpeed; //delta=-3.40 
			turn pelvis to z-axis <-4.203243> speed <159.707018> / animSpeed; //delta=5.32 
			turn rbfoot to x-axis <-37.499999> speed <70.499949> / animSpeed; //delta=2.35 
			turn rbleg to x-axis <-0.800002> speed <748.500030> / animSpeed; //delta=-24.95 
			turn rffoot to x-axis <47.968613> speed <525.801998> / animSpeed; //delta=-17.53 
			turn rffoot to z-axis <0.437783> speed <13.133476> / animSpeed; //delta=0.44 
			turn rffoot to y-axis <-3.208612> speed <96.258353> / animSpeed; //delta=3.21 
			turn rfleg to x-axis <-23.999997> speed <1703.838636> / animSpeed; //delta=56.79 
			turn rfleg to z-axis <-0.0> speed <33.687037> / animSpeed; //delta=1.12 
			turn rfleg to y-axis <0.0> speed <210.441125> / animSpeed; //delta=7.01 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:20
			turn lbfoot to x-axis <-15.599998> speed <503.042504> / animSpeed; //delta=16.77 
			turn lbleg to x-axis <28.699997> speed <468.957373> / animSpeed; //delta=-15.63 
			turn lffoot to x-axis <-0.0> speed <1289.885220> / animSpeed; //delta=-43.00 
			turn lfleg to x-axis <-0.0> speed <699.957376> / animSpeed; //delta=23.33 
			move pelvis to x-axis [0.630000] speed [6.299999] / animSpeed; //delta=0.21 
			move pelvis to z-axis [-1.795625] speed [5.231252] / animSpeed; //delta=0.17 
			turn pelvis to x-axis <6.799999> speed <101.999983> / animSpeed; //delta=-3.40 
			turn pelvis to z-axis <-5.899999> speed <50.902681> / animSpeed; //delta=1.70 
			turn rbfoot to x-axis <-17.799999> speed <591.0> / animSpeed; //delta=-19.70 
			turn rbleg to x-axis <6.900000> speed <231.0> / animSpeed; //delta=-7.70 
			turn rffoot to x-axis <-0.0> speed <1439.058396> / animSpeed; //delta=47.97 
			turn rffoot to z-axis <-0.0> speed <13.133476> / animSpeed; //delta=0.44 
			turn rffoot to y-axis <0.0> speed <96.258366> / animSpeed; //delta=3.21 
			turn rfleg to x-axis <-20.399999> speed <107.999942> / animSpeed; //delta=-3.60 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:25
			turn lbfoot to x-axis <-40.799998> speed <756.0> / animSpeed; //delta=25.20 
			turn lbleg to x-axis <29.199998> speed <15.0> / animSpeed; //delta=-0.50 
			turn lffoot to x-axis <29.017642> speed <870.529261> / animSpeed; //delta=-29.02 
			turn lffoot to z-axis <0.437783> speed <13.133476> / animSpeed; //delta=-0.44 
			turn lffoot to y-axis <-3.208612> speed <96.258353> / animSpeed; //delta=-3.21 
			turn lfleg to x-axis <-6.202686> speed <186.080581> / animSpeed; //delta=6.20 
			turn lfleg to z-axis <0.561451> speed <16.843519> / animSpeed; //delta=-0.56 
			turn lfleg to y-axis <-3.507352> speed <105.220563> / animSpeed; //delta=-3.51 
			move pelvis to x-axis [0.330000] speed [9.0] / animSpeed; //delta=-0.30 
			move pelvis to z-axis [-1.0] speed [23.868747] / animSpeed; //delta=0.80 
			turn pelvis to x-axis <3.399999> speed <101.999983> / animSpeed; //delta=3.40 
			turn pelvis to z-axis <-4.260209> speed <49.193703> / animSpeed; //delta=-1.64 
			turn rbfoot to x-axis <19.449998> speed <1117.499920> / animSpeed; //delta=-37.25 
			turn rbleg to x-axis <-10.149999> speed <511.499966> / animSpeed; //delta=17.05 
			turn rffoot to x-axis <-41.749992> speed <1252.499770> / animSpeed; //delta=41.75 
			turn rfleg to x-axis <7.749997> speed <844.499889> / animSpeed; //delta=-28.15 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			turn lbfoot to x-axis <-35.150001> speed <169.499921> / animSpeed; //delta=-5.65 
			turn lbleg to x-axis <-25.750003> speed <1648.500017> / animSpeed; //delta=54.95 
			turn lffoot to x-axis <30.441880> speed <42.727136> / animSpeed; //delta=-1.42 
			turn lffoot to z-axis <0.875565> speed <13.133476> / animSpeed; //delta=-0.44 
			turn lffoot to y-axis <-6.417224> speed <96.258366> / animSpeed; //delta=-3.21 
			turn lfleg to x-axis <32.794624> speed <1169.919300> / animSpeed; //delta=-39.00 
			turn lfleg to z-axis <1.122901> speed <16.843519> / animSpeed; //delta=-0.56 
			turn lfleg to y-axis <-7.014704> speed <105.220563> / animSpeed; //delta=-3.51 
			move pelvis to x-axis [0.030000] speed [9.0] / animSpeed; //delta=-0.30 
			move pelvis to z-axis [0.0] speed [29.999998] / animSpeed; //delta=1.00 
			turn pelvis to x-axis <-0.0> speed <101.999983> / animSpeed; //delta=3.40 
			turn pelvis to z-axis <-0.0> speed <127.806278> / animSpeed; //delta=-4.26 
			turn rbfoot to x-axis <83.0> speed <1906.500287> / animSpeed; //delta=-63.55 
			turn rbleg to x-axis <-47.999995> speed <1135.499859> / animSpeed; //delta=37.85 
			turn rffoot to x-axis <-77.799994> speed <1081.500042> / animSpeed; //delta=36.05 
			turn rfleg to x-axis <45.199996> speed <1123.499968> / animSpeed; //delta=-37.45 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:35
			turn lbfoot to x-axis <-37.499999> speed <70.499949> / animSpeed; //delta=2.35 
			turn lbleg to x-axis <-0.800002> speed <748.500030> / animSpeed; //delta=-24.95 
			turn lffoot to x-axis <47.968613> speed <525.801998> / animSpeed; //delta=-17.53 
			turn lffoot to z-axis <0.437783> speed <13.133476> / animSpeed; //delta=0.44 
			turn lffoot to y-axis <-3.208612> speed <96.258353> / animSpeed; //delta=3.21 
			turn lfleg to x-axis <-23.999997> speed <1703.838636> / animSpeed; //delta=56.79 
			turn lfleg to z-axis <-0.0> speed <33.687037> / animSpeed; //delta=1.12 
			turn lfleg to y-axis <0.0> speed <210.441125> / animSpeed; //delta=7.01 
			move pelvis to x-axis [-0.270000] speed [8.999999] / animSpeed; //delta=-0.30 
			move pelvis to z-axis [-1.970000] speed [59.099997] / animSpeed; //delta=-1.97 
			turn pelvis to x-axis <3.249999> speed <97.499979> / animSpeed; //delta=-3.25 
			turn pelvis to z-axis <3.664823> speed <109.944688> / animSpeed; //delta=-3.66 
			turn rbfoot to x-axis <1.168085> speed <2454.957688> / animSpeed; //delta=81.83 
			turn rbleg to x-axis <13.068085> speed <1832.042380> / animSpeed; //delta=-61.07 
			turn rffoot to x-axis <-42.996174> speed <1044.114592> / animSpeed; //delta=-34.80 
			turn rfleg to x-axis <23.331913> speed <656.042504> / animSpeed; //delta=21.87 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:40
			turn lbfoot to x-axis <-17.799999> speed <591.0> / animSpeed; //delta=-19.70 
			turn lbleg to x-axis <6.900000> speed <231.0> / animSpeed; //delta=-7.70 
			turn lffoot to x-axis <-0.0> speed <1439.058396> / animSpeed; //delta=47.97 
			turn lffoot to z-axis <-0.0> speed <13.133476> / animSpeed; //delta=0.44 
			turn lffoot to y-axis <0.0> speed <96.258366> / animSpeed; //delta=3.21 
			turn lfleg to x-axis <-20.399999> speed <107.999942> / animSpeed; //delta=-3.60 
			move pelvis to x-axis [-0.570000] speed [8.999999] / animSpeed; //delta=-0.30 
			move pelvis to z-axis [-1.795625] speed [5.231252] / animSpeed; //delta=0.17 
			turn pelvis to x-axis <6.499999> speed <97.499992> / animSpeed; //delta=-3.25 
			turn pelvis to z-axis <5.400000> speed <52.055301> / animSpeed; //delta=-1.74 
			turn rbfoot to x-axis <-15.599998> speed <503.042504> / animSpeed; //delta=16.77 
			turn rbleg to x-axis <28.699997> speed <468.957373> / animSpeed; //delta=-15.63 
			turn rffoot to x-axis <-0.0> speed <1289.885220> / animSpeed; //delta=-43.00 
			turn rfleg to x-axis <-0.0> speed <699.957376> / animSpeed; //delta=23.33 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:45
			turn lbfoot to x-axis <19.449998> speed <1117.499920> / animSpeed; //delta=-37.25 
			turn lbleg to x-axis <-10.149999> speed <511.499966> / animSpeed; //delta=17.05 
			turn lffoot to x-axis <-41.749992> speed <1252.499770> / animSpeed; //delta=41.75 
			turn lfleg to x-axis <7.749997> speed <844.499889> / animSpeed; //delta=-28.15 
			move pelvis to x-axis [-0.270000] speed [9.0] / animSpeed; //delta=0.30 
			move pelvis to z-axis [-1.0] speed [23.868747] / animSpeed; //delta=0.80 
			turn pelvis to x-axis <3.250000> speed <97.499979> / animSpeed; //delta=3.25 
			turn pelvis to z-axis <3.654281> speed <52.371547> / animSpeed; //delta=1.75 
			turn rbfoot to x-axis <-40.799998> speed <756.0> / animSpeed; //delta=25.20 
			turn rbleg to x-axis <29.199998> speed <15.0> / animSpeed; //delta=-0.50 
			turn rffoot to x-axis <29.017642> speed <870.529261> / animSpeed; //delta=-29.02 
			turn rffoot to z-axis <0.437783> speed <13.133476> / animSpeed; //delta=-0.44 
			turn rffoot to y-axis <-3.208612> speed <96.258353> / animSpeed; //delta=-3.21 
			turn rfleg to x-axis <-6.202686> speed <186.080581> / animSpeed; //delta=6.20 
			turn rfleg to z-axis <0.561451> speed <16.843519> / animSpeed; //delta=-0.56 
			turn rfleg to y-axis <-3.507352> speed <105.220563> / animSpeed; //delta=-3.51 
		sleep ((33*animSpeed) -1);
		}

	}
}
// Call this from StopMoving()!
StopWalking() {
	move pelvis to x-axis [0.0] speed [2.340000];
	move pelvis to y-axis [0.0] speed [1.980000];
	move pelvis to z-axis [0.0] speed [11.819999];
	turn lbfoot to x-axis <0.0> speed <490.991538>;
	turn lbleg to x-axis <0.0> speed <366.408476>;
	turn lbleg to y-axis <5.600000> speed <33.600002>;
	turn lffoot to x-axis <0.0> speed <287.811679>;
	turn lffoot to y-axis <0.0> speed <19.251673>;
	turn lffoot to z-axis <0.0> speed <2.626695>;
	turn lfleg to x-axis <0.0> speed <340.767727>;
	turn lfleg to y-axis <15.100000> speed <90.599997>;
	turn lfleg to z-axis <0.0> speed <6.737407>;
	turn pelvis to x-axis <0.0> speed <20.399997>;
	turn pelvis to z-axis <0.0> speed <17.699998>;
	turn rbfoot to x-axis <0.0> speed <490.991538>;
	turn rbleg to x-axis <0.0> speed <366.408476>;
	turn rbleg to y-axis <-4.099999> speed <24.599992>;
	turn rffoot to x-axis <0.0> speed <287.811679>;
	turn rffoot to y-axis <0.0> speed <19.251673>;
	turn rffoot to z-axis <0.0> speed <2.626695>;
	turn rfleg to x-axis <0.0> speed <340.767727>;
	turn rfleg to y-axis <-15.100000> speed <69.555885>;
	turn rfleg to z-axis <0.0> speed <6.737407>;
}
// REMEMBER TO animspeed = 5 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 5; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
	if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 5) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>10) animSpeed = 10;
		sleep 164;
	}
}
StartMoving(reversing){
	signal SIGNAL_MOVE;
  set-signal-mask SIGNAL_MOVE;
	isMoving=TRUE;
	start-script UnitSpeed();
	start-script Walk();
}
StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}


Create()
{
	hide flareflak;
	hide flare4;
	hide flare3;
	hide flare2;
	hide flare1;
	hide aimy1;
	animSpeed = 5;
	isMoving = FALSE;
	turn aimx1 to x-axis <-15> speed <50>;
	turn aimx2 to x-axis <-5> speed <50>;
}


#define BASEPIECE pelvis
#include "../unit_hitbyweaponid_and_smoke.h"

RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1 | SIGNAL_AIM2 | SIGNAL_AIM3 | SIGNAL_AIM4 | SIGNAL_AIM5 | SIGNAL_AIM6;
	sleep 5000;
	set-signal-mask 0;
	turn aimy1 to y-axis <0.000000> speed <90.000000>;

	turn aimx1 to x-axis <-15> speed <50>;
	turn aimx2 to x-axis <-5> speed <50>;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare1;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = flakgun;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flare1;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = flakgun;
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn aimy1 to y-axis heading speed <225.000000>;
	turn aimx1 to x-axis 0 - pitch speed <225.000000>;
	turn aimx2 to x-axis 0 - pitch speed <225.000000>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
}

QueryWeapon3(pieceIndex)
{
	pieceIndex = flare2;
}

AimFromWeapon3(pieceIndex)
{
	pieceIndex = flakgun;
}

AimWeapon3(heading, pitch)
{
	signal SIGNAL_AIM3;
	set-signal-mask SIGNAL_AIM3;
	turn aimy1 to y-axis heading speed <225.000000>;
	turn aimx1 to x-axis 0 - pitch speed <225.000000>;
	turn aimx2 to x-axis 0 - pitch speed <225.000000>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon3()
{
}

QueryWeapon4(pieceIndex)
{
	pieceIndex = flare3;
}

AimFromWeapon4(pieceIndex)
{
	pieceIndex = flakgun;
}

AimWeapon4(heading, pitch)
{
	signal SIGNAL_AIM4;
	set-signal-mask SIGNAL_AIM4;
	turn aimy1 to y-axis heading speed <225.000000>;
	turn aimx1 to x-axis 0 - pitch speed <225.000000>;
	turn aimx2 to x-axis 0 - pitch speed <225.000000>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon4()
{
}

QueryWeapon5(pieceIndex)
{
	pieceIndex = flare4;
}

AimFromWeapon5(pieceIndex)
{
	pieceIndex = flakgun;
}

AimWeapon5(heading, pitch)
{
	signal SIGNAL_AIM5;
	set-signal-mask SIGNAL_AIM5;
	turn aimy1 to y-axis heading speed <225.000000>;
	turn aimx1 to x-axis 0 - pitch speed <225.000000>;
	turn aimx2 to x-axis 0 - pitch speed <225.000000>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

QueryWeapon6(pieceIndex)
{
	pieceIndex = flareflak;
}

AimFromWeapon6(pieceIndex)
{
	pieceIndex = flakgun;
}

AimWeapon6(heading, pitch)
{
	signal SIGNAL_AIM6;
	set-signal-mask SIGNAL_AIM6;

	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon6()
{
	emit-sfx 1024 from flareflak;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lfleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pelvis type FALL | BITMAP2 | NOHEATCLOUD;
		explode lfleg type FALL | BITMAP3 | NOHEATCLOUD;
		explode rfleg type FALL | BITMAP4 | NOHEATCLOUD;
		explode torso type FALL | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		explode lfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode rfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode lfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode rfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
	return corpsetype;
}
