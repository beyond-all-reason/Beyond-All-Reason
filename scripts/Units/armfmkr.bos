
#include "../recoil_common_includes.h"

piece  base, cover1, cover2, light;

static-var  mmState, Active;

#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 200

#include "../unit_hitbyweaponid_and_smoke.h"



#define WATER_ROCK_UNITSIZE 10
#include "../floatmotion.h"

MMStatus(State)
{
	Active = State;
	if (State) {
		show light;
		turn cover1 to x-axis <75.0> speed <60.0>;
		turn cover2 to x-axis <-75.0> speed <60.0>;
	}else{
		hide light;
		turn cover1 to x-axis <0.0> speed <60.0>;
		turn cover2 to x-axis <0.0> speed <60.0>;
	}
	//get PRINT(get GAME_FRAME, Active);
}

Create()
{
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cover1 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cover1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode cover1 type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cover2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode cover1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
