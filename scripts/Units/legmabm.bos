
#include "../recoil_common_includes.h"

piece  chassis, hatch, insides, ltrack, rtrack, turret, dummy;

// Signal definitions
#define SIGNAL_MOVE 1
#define SIGNAL_AIM1 256


#define BASEPIECE chassis
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 8
#define MAXTILT 100
#include "../unit_hitbyweaponid_and_smoke.h"

#define TB_BASE chassis 
#define TB_TURNRATE <10.0> 
#define TB_TILT_X <0.15>
#define TB_BANK_Z <0.15> // Do not define this if you dont want banking
#include "../tilt_bank_mobileunit.h"


static-var  Stunned;

Create()
{
	call-script TB_Init();
}

StartMoving(reversing)
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	START_TILTBANK;
}

StopMoving()
{
	signal SIGNAL_MOVE;
	STOP_TILTBANK;
}


ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn hatch to x-axis [0] speed [0.025];
	turn hatch to z-axis [0] speed [0.025];
	turn hatch to y-axis [0] speed [0.025];
	//move hatch to z-axis [-7.89458] speed [5];
	//move hatch to y-axis [7.27634] speed [5];
	move hatch to z-axis [0] speed [3];
	move hatch to y-axis [0] speed [1.5];
}

SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 5000;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn hatch to x-axis <50> speed [0.083];
	move hatch to z-axis [20] speed [10];
	move hatch to y-axis [-10] speed [5];
	wait-for-move hatch along z-axis;

	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	sleep 500;
	return (0);
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = dummy;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode hatch type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;


		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode hatch type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;


		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode hatch type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;


		return(corpsetype);
	}
	corpsetype = 3 ;

	return corpsetype;
}
