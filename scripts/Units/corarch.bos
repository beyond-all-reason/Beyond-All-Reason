
#include "../recoil_common_includes.h"

piece  rflare, lflare, flarea, flareb, base, boxb, boxa, turret,
       turreta, turretb, wake, rbarrel, lbarrel, sleeve ;

static-var  gun_3, restore_delay, gun_2, oldHead, aimDir1;

// Signal definitions
#define SIGNAL_MOVE 1
#define SIGNAL_AIM2 512
#define SIGNAL_AIM3 1024

#define RB_MASS 30
#define RB_LENGTH 7
#define RB_WIDTH 3
#define RB_PITCH_SPEED 100
#define RB_PITCH_ACCELERATION 20
#define RB_ROLL_ACCELERATION 8
#define RB_ROCKUNIT 5
#define RB_WAKE_PIECE wake
#define RB_WAKE_CEG 1024 + 1
#define RB_IDLE_KICK 5000
#define RB_RECOIL_ENERGY_1 100

#include "../bar_ships_common.h"



Create()
{
	hide wake;
	hide flarea;
	hide lflare;
	hide rflare;
	hide flareb;
	hide lflare;
	hide rflare;
	gun_3 = rflare;
	gun_2 = rflare;
	restore_delay = 3000;
	turn turret to x-axis <-25.0> speed <25.0>;
	turn boxa to x-axis <-25.0> speed <25.0>;
	turn boxb to x-axis <-25.0> speed <25.0>;
    spin turret around y-axis speed <25.0>;
	start-script InitRockBoat();
	SLEEP_UNTIL_UNITFINISHED;
	start-script BoatPhysics();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 3;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
    spin turret around y-axis speed <25.0>;
	turn sleeve to x-axis <0.0> speed <25.0>;
	turn turreta to y-axis <-25.0> speed <25.0>;
	turn boxa to x-axis <0.0> speed <25.0>;
	turn turretb to y-axis <-25.0> speed <25.0>;
	turn boxb to x-axis <0.0> speed <25.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}


StartMoving(reversing)
{

}

StopMoving()
{

}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	if( gun_2 )
	{
		turn turretb to y-axis heading speed <455.0>;
		turn boxb to x-axis <0.0> - pitch speed <430.0>;
		wait-for-turn turretb around y-axis;
		wait-for-turn boxb around x-axis;
	}
	else
	{
		turn turreta to y-axis heading speed <455.0>;
		turn boxa to x-axis <0.0> - pitch speed <430.0>;
		wait-for-turn turreta around y-axis;
		wait-for-turn boxa around x-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal SIGNAL_AIM3;
	set-signal-mask SIGNAL_AIM3;
	turn turret to y-axis heading speed <755.0>;
	turn sleeve to x-axis <0.0> - pitch speed <730.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	gun_2 = !gun_2;
}

FireWeapon3()
{
	if( gun_3 )
	{
	    emit-sfx 1024 + 0 from lflare;
		move lbarrel to z-axis [-2.400000] speed [500.0];
		sleep 100;
		wait-for-move lbarrel along z-axis;
		move lbarrel to z-axis [0.0] speed [3.0];
	}
	else
	{
	    emit-sfx 1024 + 0 from rflare;
		move rbarrel to z-axis [-2.400000] speed [500.0];
		sleep 100;
		wait-for-move rbarrel along z-axis;
		move rbarrel to z-axis [0.0] speed [3.0];
	}
	gun_3 = !gun_3;
	RB_RECOILBOAT(aimDir1, RB_RECOIL_ENERGY_1)
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = turreta + gun_2;
}

AimFromWeapon3(pieceIndex)
{
	pieceIndex = sleeve;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = base;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flarea + gun_2;
}

QueryWeapon3(pieceIndex)
{
	pieceIndex = gun_3;
}

/*
AimWeapon4(heading, pitch)
{
	sleep 100;
	return (1);
}

FireWeapon4()
{
	sleep 100;
}

QueryWeapon4(pieceIndex)
{
	sleep 100;
}

AimFromWeapon4(pieceIndex)
{
	pieceIndex = base;
}
*/



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turreta type BITMAPONLY | NOHEATCLOUD;
		explode turretb type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode sleeve type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turreta type FALL | NOHEATCLOUD;
		explode boxa type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretb type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turreta type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode boxa type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flarea type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode boxb type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turreta type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode boxa type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turretb type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode boxb type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
