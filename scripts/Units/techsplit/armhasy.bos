
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, pad, main1, mid1, end1, nano1, nano2, nano3, nano4, main2, mid2, end2,  main3, mid3, end3, main4, mid4, end4, beam1,beam2,beam3,beam4;
static-var  spray;

// Signal definitions
#define SIGNAL_TURNON 4

#define BASEPIECE base
#define HITSPEED <15.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 15
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"


#define WATER_ROCK_PIECE base
#define WATER_ROCK_AMPLITUDE <1.0>
#define WATER_ROCK_FRAMES 15
#define WATER_ROCK_FREQ_X 20
#define WATER_ROCK_FREQ_Z 23
#define WATER_ROCK_FREQ_Y 52
#define WATER_BOB_HEIGHT 64000
#include "../floatmotion.h"


Create()
{
	hide beam4;
	hide beam3;
	hide beam2;
	hide beam1;
	hide pad;

	spray = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script FloatMotion();
}

QueryNanoPiece(pieceIndex)
{
	spray = (spray + 1) % 4;
	pieceIndex = nano1 + spray;
}

StartBuilding()
{
	show beam1;
	show beam2;
	show beam3;
	show beam4;
}

StopBuilding()
{
	hide beam1;
	hide beam2;
	hide beam3;
	hide beam4;
}

Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	turn main1 to y-axis <-135> speed <135>;
	turn mid1 to z-axis <100> speed <100>;
	turn end1 to z-axis <110> speed <110>;
	turn nano1 to y-axis <180> speed <180>;
	
	turn main2 to y-axis <135> speed <135>;
	turn mid2 to z-axis <-100> speed <100>;
	turn end2 to z-axis <-110> speed <110>;
	turn nano2 to y-axis <180> speed <180>;
	
	turn main3 to y-axis <-135> speed <135>;
	turn mid3 to z-axis <-100> speed <100>;
	turn end3 to z-axis <-110> speed <110>;
	turn nano3 to y-axis <180> speed <180>;
	
	turn main4 to y-axis <135> speed <135>;
	turn mid4 to z-axis <100> speed <100>;
	turn end4 to z-axis <110> speed <110>;
	turn nano4 to y-axis <180> speed <180>;
	sleep 1000;
	
	FACTORY_OPEN_BUILD;

}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	sleep 5000;
	
	turn main1 to y-axis <0> speed <135>;
	turn mid1 to z-axis <0> speed <100>;
	turn end1 to z-axis <0> speed <110>;
	turn nano1 to y-axis <0> speed <180>;
	
	turn main2 to y-axis <0> speed <135>;
	turn mid2 to z-axis <0> speed <100>;
	turn end2 to z-axis <0> speed <110>;
	turn nano2 to y-axis <0> speed <180>;
	
	turn main3 to y-axis <0> speed <135>;
	turn mid3 to z-axis <0> speed <100>;
	turn end3 to z-axis <0> speed <110>;
	turn nano3 to y-axis <0> speed <180>;
	
	turn main4 to y-axis <0> speed <135>;
	turn mid4 to z-axis <0> speed <100>;
	turn end4 to z-axis <0> speed <110>;
	turn nano4 to y-axis <0> speed <180>;
	
	sleep 1000;
	
	FACTORY_CLOSE_BUILD;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
	return (0);
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		explode main1 type BITMAPONLY | NOHEATCLOUD;
		explode mid1 type BITMAPONLY | NOHEATCLOUD;
		explode end1 type BITMAPONLY | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type BITMAPONLY | NOHEATCLOUD;
		explode main2 type BITMAPONLY | NOHEATCLOUD;
		explode mid2 type BITMAPONLY | NOHEATCLOUD;
		explode end2 type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode beam2 type BITMAPONLY | NOHEATCLOUD;
		explode main3 type BITMAPONLY | NOHEATCLOUD;
		explode mid3 type BITMAPONLY | NOHEATCLOUD;
		explode end3 type BITMAPONLY | NOHEATCLOUD;
		explode nano3 type BITMAPONLY | NOHEATCLOUD;
		explode beam3 type BITMAPONLY | NOHEATCLOUD;
		explode main4 type BITMAPONLY | NOHEATCLOUD;
		explode mid4 type BITMAPONLY | NOHEATCLOUD;
		explode end4 type BITMAPONLY | NOHEATCLOUD;
		explode nano4 type BITMAPONLY | NOHEATCLOUD;
		explode beam4 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type FALL | NOHEATCLOUD;
		explode main2 type FALL | NOHEATCLOUD;
		explode mid2 type FALL | NOHEATCLOUD;
		explode end2 type FALL | NOHEATCLOUD;
		explode nano2 type FALL | NOHEATCLOUD;
		explode beam2 type FALL | NOHEATCLOUD;
		explode main3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type SMOKE | FALL | NOHEATCLOUD;
		explode main1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end1 type SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type SMOKE | FALL | NOHEATCLOUD;
		explode main2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main3 type SMOKE | FALL | NOHEATCLOUD;
		explode mid3 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode end3 type SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid4 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode end4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode main1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode mid1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode end1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode main2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode mid2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode end2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode main3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode mid3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode end3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode beam3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode main4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode mid4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode end4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
