
#include "../recoil_common_includes.h"

piece  base, turret, arm, beam, lpump, rpump, nano1, nano2, wake;

#define SIGNAL_BUILD 2
#define SIGNAL_MOVE 1

static-var  nano, pump, readyToBuild;

#define RB_MASS 20
#define RB_LENGTH 5
#define RB_WIDTH 3
#define RB_PITCH_SPEED 200
#define RB_PITCH_ACCELERATION 20
#define RB_ROLL_ACCELERATION 3
#define RB_WAKE_PIECE wake
#define RB_WAKE_PERIOD 6 
#define RB_WAKE_CEG 1024 + 0
#define RB_BOUNCE_HEIGHT [1.0]

#include "../bar_ships_common.h"



MovementControl()
{
	while (pump)
	{ 
			move lpump to y-axis [1] speed [1];
			move lpump to x-axis [1] speed [1];
			sleep 2000;
			move lpump to y-axis [0] speed [1];
			move lpump to x-axis [0] speed [1];
			sleep 2000;
	}

}


Create()
{
	hide wake;
	hide nano2;
	hide nano1;
	turn arm to x-axis <-90> now;
	turn beam to x-axis <-180> now;

	readyToBuild = FALSE;
	start-script InitRockBoat();
	SLEEP_UNTIL_UNITFINISHED;
	start-script BoatPhysics();
}


StartBuilding(heading,pitch)
{
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;

	if (!readyToBuild){
		pump = 1;
		
		turn arm to x-axis <45> speed <90>;
		turn beam to x-axis <-45> speed <180>;
		wait-for-turn beam around x-axis;

	}
	start-script MovementControl();
	
	turn turret to y-axis heading speed <360.0>;
	turn beam to x-axis <-45> -pitch speed <90>;

	set INBUILDSTANCE to 1;
	show nano1;
	show nano2;
}

StopBuilding()
{
	signal SIGNAL_BUILD;	
	set-signal-mask SIGNAL_BUILD;
	hide nano1;
	hide nano2;

	sleep 6000;
	set INBUILDSTANCE to 0;
	readyToBuild = FALSE;

	turn arm to x-axis <-90> speed <90>;
	turn beam to x-axis <-180> speed <180>;
	turn turret to y-axis <0> speed <180>;
	wait-for-turn beam around x-axis;
	move lpump to y-axis [0] speed [1];
	move lpump to x-axis [0] speed [1];
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = nano1 + nano;
	nano = !nano;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type FALL | NOHEATCLOUD;
		explode nano1 type FALL | NOHEATCLOUD;
		explode nano2 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
