
#include "../recoil_common_includes.h"

piece  base, turret, arm, head1, head2, claw1, claw2;

static-var  resourceRate;
static-var  Stunned;

// Signal definitions
#define SIGNAL_TURNON 4


DoWork()
{
	if (Stunned) {
		return(0);
	}
	
	spin claw1 around z-axis speed resourceRate accelerate resourceRate/100.0;
	spin claw2 around z-axis speed -1*resourceRate accelerate resourceRate/100.0;
	spin turret around y-axis speed resourceRate/3 accelerate resourceRate/300.0;
	while(TRUE){
		turn arm to z-axis <90> speed <45>;
		move head1 to x-axis [-12] speed [6];
		move head2 to y-axis [12] speed [6];
		sleep 3000;
		
		turn arm to z-axis <0> speed <45>;
		move head1 to x-axis [0] speed [6];
		move head2 to y-axis [0] speed [6];
		sleep 3000;
	
	}
}

EmitBubbles(){
	while( TRUE )
	{
		emit-sfx 259 from claw1;
		emit-sfx 259 from claw2;
		sleep 250;
	}
}

SetStunned(State)
{
	Stunned = State;
	if (Stunned) {
	    call-script Deactivate();
	} else {
	    call-script Activate();
	}
}

Create()
{
	resourceRate = 0;
}

Activate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	start-script DoWork();
	start-script EmitBubbles();
}

Deactivate()
{
	signal SIGNAL_TURNON;	
	stop-spin claw1 around z-axis decelerate resourceRate/100.0;
	stop-spin claw2 around z-axis decelerate resourceRate/100.0;
	stop-spin turret around y-axis decelerate resourceRate/300.0;
	turn arm to z-axis <0> speed <45>;
	move head1 to x-axis [0] speed [6];
	move head2 to y-axis [0] speed [6];
}



SetSpeed(windOrMetal)
{
	resourceRate = windOrMetal * 4;
	if (resourceRate > 0) call-script Activate(); // Because SetSpeed is called after Activate
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode arm type BITMAPONLY | NOHEATCLOUD;
		explode head1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type BITMAPONLY | NOHEATCLOUD;
		explode claw2 type BITMAPONLY | NOHEATCLOUD;
		explode claw1 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode arm type FALL | NOHEATCLOUD;
		explode head1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type FALL | NOHEATCLOUD;
		explode claw2 type FALL | NOHEATCLOUD;
		explode claw1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type SMOKE | FALL | NOHEATCLOUD;
		explode arm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode claw2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode claw1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode arm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode claw2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode claw1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
