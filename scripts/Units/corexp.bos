
#include "../recoil_common_includes.h"

piece  base, column, turret, barrel1, barrel2, flare1, flare2;

static-var  restore_delay, resourceRate, gun_1, Stunned;

// Signal definitions
#define SIGNAL_AIM1 256

Stop()
{
	stop-spin column around y-axis decelerate <0.5>;
}

Create()
{
	hide flare1;
	hide flare2;
	resourceRate = 500;
	gun_1 = 0;
}

#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

Activate()
{
	spin column around y-axis speed resourceRate accelerate <0.5>;
}

Deactivate()
{
	stop-spin column around y-axis decelerate <0.5>;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 8;
}

ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0> speed <300>;
	turn turret to x-axis <0.0> speed <300>;
}

SetStunned(State)
{
	Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}

RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

SetSpeed(windOrMetal)
{
	resourceRate = windOrMetal * 20;
	if (resourceRate > 0) call-script Activate(); // Because SetSpeed is called after Activate
}

AimWeapon1(heading, pitch)
{
	if (resourceRate < 1) {
		return (0);
	}
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret to y-axis heading speed <300>;
	turn turret to x-axis <0.0> - pitch speed <300>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	gun_1 = ! gun_1;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare1 + gun_1;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel2 type BITMAPONLY | NOHEATCLOUD;
		explode column type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode column type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode column type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode column type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
