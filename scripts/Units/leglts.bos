
#include "../recoil_common_includes.h"

piece  		base, lwing, rwing, bwing, lguard, rguard, bguard, lblades, rblades, bblades, lclaw, rclaw, mclaw, lthrust, rthrust, link;

static-var 	isActivated;

#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 200

#define IDLEHOVERSCALE 16
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "../idlehover.h"



Create()
{
	hide link;
	hide lthrust;
	hide rthrust;
	isActivated = FALSE;
	
	turn lwing to y-axis <-30.0> now;
	turn rwing to y-axis <30.0> now;
	turn lclaw to y-axis <30.0> now;
	turn rclaw to y-axis <-30.0> now;
	turn lthrust to y-axis <-5.0> now;
	turn rthrust to y-axis <5.0> now;
	
	turn lguard to y-axis <90.0> now;
	turn rguard to y-axis <-90.0> now;
	turn lwing to z-axis <110> now;
	turn rwing to z-axis <-110> now;
	turn bwing to x-axis <-110> now;
	turn lguard to x-axis <-110.0> now;
	turn rguard to x-axis <-110.0> now;
	turn bguard to x-axis <110.0> now;
	
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
}



QueryTransport(pieceIndex)
{
	pieceIndex = link;
}


BeginTransport(targetHeight) //Called when the unit aquires its cargo
{
	turn lclaw to z-axis <0> speed <60>;
	turn rclaw to z-axis <0> speed <60>;
	move mclaw to z-axis [0] speed [6];
	
	move link to y-axis [0.0] - targetHeight now;
}

EndTransport() //Called when the unit drops its cargo
{
	turn lclaw to z-axis <-30> speed <60>;
	turn rclaw to z-axis <30> speed <60>;
	move mclaw to z-axis [3] speed [6];
}

Activate() // Called immediately when the unit starts moving or takes off
{
	spin lblades around y-axis speed <-800>;
	spin rblades around y-axis speed <-800>;
	spin bblades around y-axis speed <-800>;
	
	turn lguard to y-axis <30.0> speed <60>;
	turn rguard to y-axis <-30.0> speed <60>;
	
	turn lwing to z-axis <-15> speed <60>;
	turn rwing to z-axis <15> speed <60>;
	turn bwing to x-axis <15> speed <60>;
	
	turn lguard to x-axis <0.0> speed <60.0>;
	turn rguard to x-axis <0.0> speed <60.0>;
	turn bguard to x-axis <0.0> speed <60.0>;
	
	move base to y-axis [-10.0] speed [2.0];
	
	show lthrust;
	show rthrust;
	
	isActivated = TRUE;
	
}

Deactivate() // Called when the unit has landed
{
	hide lthrust;
	hide rthrust;
	
	isActivated = FALSE;
	
	turn lguard to y-axis <90.0> speed <60>;
	turn rguard to y-axis <-90.0> speed <60>;
	
	turn lwing to z-axis <110> speed <120>;
	turn rwing to z-axis <-110> speed <120>;
	turn bwing to x-axis <-110> speed <120>;
	
	turn lguard to x-axis <-110.0> speed <120.0>;
	turn rguard to x-axis <-110.0> speed <120.0>;
	turn bguard to x-axis <110.0> speed <120.0>;
	
	move base to y-axis [4.0] speed [16.0];
	
	wait-for-move base along y-axis;
	
	stop-spin lblades around y-axis decelerate <5.5>;
	stop-spin rblades around y-axis decelerate <6.0>;
	stop-spin bblades around y-axis decelerate <6.5>;
	
	move base to y-axis [0.0] speed [4.0];
}

MoveRate0()
{
	if (isActivated) // Stop this from excecuting during the deactivate phase
	{
		turn lguard to x-axis <0.0> speed <150.0>;
		turn rguard to x-axis <0.0> speed <150.0>;
		turn bguard to x-axis <0.0> speed <150.0>;
	}

}

MoveRate1()
{
	if (isActivated) // Stop this from excecuting during the deactivate phase
	{
		turn lguard to x-axis <30.0> speed <75.0>;
		turn rguard to x-axis <30.0> speed <75.0>;
		turn bguard to x-axis <30.0> speed <75.0>;
	}
}

MoveRate2()
{
	if (isActivated) // Stop this from excecuting during the deactivate phase
	{
		turn lguard to x-axis <60.0> speed <55.0>;
		turn rguard to x-axis <60.0> speed <55.0>;
		turn bguard to x-axis <60.0> speed <55.0>;
	}

}

MoveRate3()
{
	if (isActivated) // Stop this from excecuting during the deactivate phase
	{
		turn lguard to x-axis <90.0> speed <85.0>;
		turn rguard to x-axis <90.0> speed <85.0>;
		turn bguard to x-axis <90.0> speed <85.0>;
	}
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode bwing type BITMAPONLY | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode lwing type BITMAPONLY | NOHEATCLOUD;
		explode rwing type BITMAPONLY | NOHEATCLOUD;
		explode bwing type BITMAPONLY | NOHEATCLOUD;
		explode lguard type FALL | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode lwing type BITMAPONLY | NOHEATCLOUD;
		explode rwing type BITMAPONLY | NOHEATCLOUD;
		explode bwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		explode lguard type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | NOHEATCLOUD;
	explode lwing type BITMAPONLY | NOHEATCLOUD;
	explode rwing type BITMAPONLY | NOHEATCLOUD;
	explode bwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode lguard type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	return corpsetype;
}
