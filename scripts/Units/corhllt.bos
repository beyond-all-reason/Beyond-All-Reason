
#include "../recoil_common_includes.h"

piece  base, body, turret1, flare1, turret2, flare2;

static-var  restore_delay;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512


Create()
{
	hide flare2;
	hide flare1;
	hide base;
	restore_delay = 2000;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret2 to x-axis <0> speed <16.0>;
	turn turret1 to x-axis <0> speed <16.0>;
}

SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
	    call-script ExecuteRestoreAfterDelay();
	}
}

RestoreAfterDelay()
{
	sleep 2200;
	start-script ExecuteRestoreAfterDelay();
}

#define BASEPIECE base
#include "../unit_hitbyweaponid_and_smoke.h"

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flare1;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = turret1;
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret1 to y-axis heading speed <400.0>;
	turn turret1 to x-axis <0.0> - pitch speed <400.0>;
	wait-for-turn turret1 around y-axis;
	return (1);
}

FireWeapon2()
{
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare2;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret2;
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn turret2 to y-axis heading speed <300.0>;
	turn turret2 to x-axis <0.0> - pitch speed <300.0>;
	wait-for-turn turret2 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode turret1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type BITMAPONLY | NOHEATCLOUD;
		explode turret2 type BITMAPONLY | NOHEATCLOUD;
		explode flare2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type FALL | NOHEATCLOUD;
		explode turret1 type FALL | NOHEATCLOUD;
		explode flare1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode body type BITMAPONLY | NOHEATCLOUD;
		explode turret1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode turret2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare2 type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode body type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flare2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
