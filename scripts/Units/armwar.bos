
#include "../recoil_common_includes.h"

piece  torso,rflare, lflare , pelvis, lthigh, rthigh, luparm,
       ruparm, rarm, larm, rleg, rfoot, lleg, lfoot, aimy1, aimx1;

static-var  isMoving, isAiming, restore_delay, gun_1, wpn1_lasthead;

// Signal definitions
#define SIGNAL_AIM1 256


#define BASEPIECE pelvis
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 3
#define MAXTILT 100
#include "../unit_hitbyweaponid_and_smoke.h"

lua_UnitScriptDecal(lightIndex, xpos,zpos, heading) 
{
	return 0;
}


// Generated for N:\animations\armwar_anim_walk.blend
// Using https://github.com/Beherith/Skeletor_S3O 
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var animSpeed, maxSpeed, animFramesPerKeyframe;
#define SIGNAL_MOVE 1
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\armwar_anim_walk.blend 
	// Author Beherith mysterme@gmail.com. License: GNU GPL v2.
	set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:6
			turn larm to x-axis <-17.134373> speed <514.031192> / animSpeed; //delta=17.13 
			turn lfoot to x-axis <5.854170> speed <127.681961> / animSpeed; //delta=-4.26 
			turn lfoot to z-axis <0.001105> speed <174.034157> / animSpeed; //delta=5.80 
			turn lfoot to y-axis <4.245974> speed <132.160570> / animSpeed; //delta=4.41 
			turn lleg to x-axis <22.140340> speed <669.009297> / animSpeed; //delta=-22.30 
			turn lthigh to x-axis <-42.979181> speed <1266.258892> / animSpeed; //delta=42.21 
			turn lthigh to z-axis <11.761602> speed <537.898080> / animSpeed; //delta=-17.93 
			turn luparm to x-axis <17.493749> speed <524.812458> / animSpeed; //delta=-17.49 
			turn luparm to z-axis <0.0> speed <212.999987> / animSpeed; //delta=-7.10 
			turn luparm to y-axis <1.375000> speed <41.249997> / animSpeed; //delta=1.37 
			turn pelvis to z-axis <-3.0> speed <90.0> / animSpeed; //delta=3.00 
			turn pelvis to y-axis <-7.0> speed <210.0> / animSpeed; //delta=-7.00 
			turn rarm to x-axis <22.489496> speed <674.684874> / animSpeed; //delta=-22.49 
			turn rfoot to x-axis <-12.169493> speed <419.942373> / animSpeed; //delta=14.00 
			turn rfoot to z-axis <-3.014340> speed <86.659464> / animSpeed; //delta=-2.89 
			turn rfoot to y-axis <-1.007537> speed <35.813015> / animSpeed; //delta=-1.19 
			turn rleg to x-axis <-19.655835> speed <581.357328> / animSpeed; //delta=19.38 
			turn rthigh to x-axis <36.170742> speed <1116.706276> / animSpeed; //delta=-37.22 
			turn rthigh to z-axis <4.232133> speed <41.816023> / animSpeed; //delta=1.39 
			turn rthigh to y-axis <-16.777164> speed <40.495611> / animSpeed; //delta=-1.35 
			turn ruparm to x-axis <-22.787495> speed <683.624857> / animSpeed; //delta=22.79 
			turn ruparm to z-axis <-0.0> speed <203.999979> / animSpeed; //delta=6.80 
			turn ruparm to y-axis <8.199999> speed <245.999969> / animSpeed; //delta=8.20 
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:10
			turn larm to x-axis <-23.413887> speed <188.385411> / animSpeed; //delta=6.28 
			turn lfoot to x-axis <10.248314> speed <131.824324> / animSpeed; //delta=-4.39 
			turn lfoot to y-axis <5.001051> speed <22.652322> / animSpeed; //delta=0.76 
			turn lleg to x-axis <-22.578140> speed <1341.554389> / animSpeed; //delta=44.72 
			turn lthigh to x-axis <-40.655424> speed <69.712701> / animSpeed; //delta=-2.32 
			turn lthigh to z-axis <5.570704> speed <185.726927> / animSpeed; //delta=6.19 
			turn lthigh to y-axis <13.107760> speed <120.958484> / animSpeed; //delta=-4.03 
			turn luparm to x-axis <23.500000> speed <180.187545> / animSpeed; //delta=-6.01 
			turn luparm to y-axis <6.400000> speed <150.749989> / animSpeed; //delta=5.02 
			move pelvis to y-axis [-1.080000] speed [32.399998] / animSpeed; //delta=-1.08 
			turn pelvis to z-axis <-0.0> speed <90.0> / animSpeed; //delta=-3.00 
			turn pelvis to y-axis <-10.0> speed <90.0> / animSpeed; //delta=-3.00 
			turn rarm to x-axis <33.599999> speed <333.315093> / animSpeed; //delta=-11.11 
			turn rfoot to x-axis <-18.983353> speed <204.415797> / animSpeed; //delta=6.81 
			turn rfoot to z-axis <-0.007030> speed <90.219281> / animSpeed; //delta=-3.01 
			turn rleg to x-axis <-20.713679> speed <31.735330> / animSpeed; //delta=1.06 
			turn rthigh to x-axis <62.304904> speed <784.024847> / animSpeed; //delta=-26.13 
			turn rthigh to z-axis <39.694122> speed <1063.859687> / animSpeed; //delta=-35.46 
			turn rthigh to y-axis <-51.356807> speed <1037.389280> / animSpeed; //delta=-34.58 
			turn ruparm to x-axis <-34.499996> speed <351.375018> / animSpeed; //delta=11.71 
			turn ruparm to y-axis <12.799999> speed <138.0> / animSpeed; //delta=4.60 
			sleep ((33*animSpeed) -1);

		}
		if (isMoving) { //Frame:14
		
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(lfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lfoot) & 0x0000ffff),   get HEADING(0));
			turn larm to x-axis <-16.707549> speed <201.190120> / animSpeed; //delta=-6.71 
			turn lfoot to x-axis <29.136907> speed <566.657808> / animSpeed; //delta=-18.89 
			turn lfoot to y-axis <5.294691> speed <8.809190> / animSpeed; //delta=0.29 
			turn lleg to x-axis <-10.248701> speed <369.883174> / animSpeed; //delta=-12.33 
			turn lthigh to x-axis <-24.421152> speed <487.028158> / animSpeed; //delta=-16.23 
			turn lthigh to z-axis <4.762540> speed <24.244939> / animSpeed; //delta=0.81 
			turn lthigh to y-axis <13.572397> speed <13.939118> / animSpeed; //delta=0.46 
			turn luparm to x-axis <17.087501> speed <192.374976> / animSpeed; //delta=6.41 
			turn luparm to y-axis <5.0> speed <41.999990> / animSpeed; //delta=-1.40 
			move pelvis to y-axis [-0.509000] speed [17.130001] / animSpeed; //delta=0.57 
			turn pelvis to z-axis <3.0> speed <90.0> / animSpeed; //delta=-3.00 
			turn pelvis to y-axis <-7.0> speed <90.0> / animSpeed; //delta=3.00 
			turn rarm to x-axis <21.984374> speed <348.468738> / animSpeed; //delta=11.62 
			turn rfoot to x-axis <-39.468999> speed <614.569391> / animSpeed; //delta=20.49 
			turn rfoot to y-axis <-2.090762> speed <30.843046> / animSpeed; //delta=-1.03 
			turn rleg to x-axis <15.463393> speed <1085.312158> / animSpeed; //delta=-36.18 
			turn rthigh to x-axis <47.612436> speed <440.774032> / animSpeed; //delta=14.69 
			turn rthigh to z-axis <9.963140> speed <891.929482> / animSpeed; //delta=29.73 
			turn rthigh to y-axis <-20.788830> speed <917.039315> / animSpeed; //delta=30.57 
			turn ruparm to x-axis <-22.793748> speed <351.187427> / animSpeed; //delta=-11.71 
			turn ruparm to y-axis <10.175000> speed <78.749964> / animSpeed; //delta=-2.62 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:18
			turn larm to x-axis <0.688889> speed <521.893166> / animSpeed; //delta=-17.40 
			turn lfoot to x-axis <-7.949016> speed <1112.577702> / animSpeed; //delta=37.09 
			turn lfoot to y-axis <3.881794> speed <42.386916> / animSpeed; //delta=-1.41 
			turn lleg to x-axis <14.329513> speed <737.346412> / animSpeed; //delta=-24.58 
			turn lthigh to x-axis <-7.430781> speed <509.711140> / animSpeed; //delta=-16.99 
			turn lthigh to z-axis <3.245164> speed <45.521288> / animSpeed; //delta=1.52 
			turn luparm to x-axis <-0.199998> speed <518.624972> / animSpeed; //delta=17.29 
			turn luparm to y-axis <0.0> speed <149.999996> / animSpeed; //delta=-5.00 
			move pelvis to y-axis [-0.243000] speed [7.980000] / animSpeed; //delta=0.27 
			turn pelvis to z-axis <5.0> speed <59.999993> / animSpeed; //delta=-2.00 
			turn pelvis to y-axis <0.0> speed <210.0> / animSpeed; //delta=7.00 
			turn rarm to x-axis <-0.299999> speed <668.531198> / animSpeed; //delta=22.28 
			turn rfoot to x-axis <-17.900679> speed <647.049604> / animSpeed; //delta=-21.57 
			turn rfoot to y-axis <-3.164010> speed <32.197424> / animSpeed; //delta=-1.07 
			turn rleg to x-axis <37.614852> speed <664.543785> / animSpeed; //delta=-22.15 
			turn rthigh to x-axis <-16.383737> speed <1919.885187> / animSpeed; //delta=64.00 
			turn rthigh to z-axis <-12.121561> speed <662.541011> / animSpeed; //delta=22.08 
			turn rthigh to y-axis <-13.039227> speed <232.488079> / animSpeed; //delta=7.75 
			turn ruparm to x-axis <-0.099999> speed <680.812476> / animSpeed; //delta=-22.69 
			turn ruparm to y-axis <4.400000> speed <173.250002> / animSpeed; //delta=-5.78 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:22
			turn larm to x-axis <22.489496> speed <654.018190> / animSpeed; //delta=-21.80 
			turn lfoot to x-axis <-9.306533> speed <40.725515> / animSpeed; //delta=1.36 
			turn lfoot to y-axis <2.469710> speed <42.362526> / animSpeed; //delta=-1.41 
			turn lleg to x-axis <-28.210169> speed <1276.190452> / animSpeed; //delta=42.54 
			turn lthigh to x-axis <39.716905> speed <1414.430552> / animSpeed; //delta=-47.15 
			turn lthigh to z-axis <-3.603881> speed <205.471349> / animSpeed; //delta=6.85 
			turn lthigh to y-axis <18.581820> speed <149.611213> / animSpeed; //delta=4.99 
			turn luparm to x-axis <-22.787495> speed <677.624912> / animSpeed; //delta=22.59 
			turn luparm to y-axis <-8.199999> speed <245.999969> / animSpeed; //delta=-8.20 
			move pelvis to y-axis [0.0] speed [7.289996] / animSpeed; //delta=0.24 
			turn pelvis to z-axis <3.0> speed <59.999993> / animSpeed; //delta=2.00 
			turn pelvis to y-axis <7.0> speed <210.0> / animSpeed; //delta=7.00 
			turn rarm to x-axis <-17.134373> speed <505.031222> / animSpeed; //delta=16.83 
			turn rfoot to x-axis <6.225505> speed <723.785537> / animSpeed; //delta=-24.13 
			turn rfoot to y-axis <-4.246402> speed <32.471774> / animSpeed; //delta=-1.08 
			turn rleg to x-axis <21.890427> speed <471.732769> / animSpeed; //delta=15.72 
			turn rthigh to x-axis <-43.310540> speed <807.804100> / animSpeed; //delta=26.93 
			turn rthigh to z-axis <-10.174558> speed <58.410079> / animSpeed; //delta=-1.95 
			turn rthigh to y-axis <-15.205031> speed <64.974104> / animSpeed; //delta=-2.17 
			turn ruparm to x-axis <17.493749> speed <527.812430> / animSpeed; //delta=-17.59 
			turn ruparm to y-axis <-1.375000> speed <173.250002> / animSpeed; //delta=-5.78 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:26
			turn larm to x-axis <33.599999> speed <333.315093> / animSpeed; //delta=-11.11 
			turn lfoot to x-axis <-18.952197> speed <289.369920> / animSpeed; //delta=9.65 
			turn lfoot to y-axis <1.062793> speed <42.207492> / animSpeed; //delta=-1.41 
			turn lleg to x-axis <-21.468980> speed <202.235652> / animSpeed; //delta=-6.74 
			turn lthigh to x-axis <61.359373> speed <649.274060> / animSpeed; //delta=-21.64 
			turn lthigh to z-axis <-40.189677> speed <1097.573855> / animSpeed; //delta=36.59 
			turn lthigh to y-axis <53.220236> speed <1039.152494> / animSpeed; //delta=34.64 
			turn luparm to x-axis <-34.499996> speed <351.375018> / animSpeed; //delta=11.71 
			turn luparm to y-axis <-12.799999> speed <138.0> / animSpeed; //delta=-4.60 
			move pelvis to y-axis [-1.080000] speed [32.399998] / animSpeed; //delta=-1.08 
			turn pelvis to z-axis <-0.0> speed <90.0> / animSpeed; //delta=3.00 
			turn pelvis to y-axis <9.999999> speed <89.999964> / animSpeed; //delta=3.00 
			turn rarm to x-axis <-23.413887> speed <188.385411> / animSpeed; //delta=6.28 
			turn rfoot to x-axis <11.229584> speed <150.122363> / animSpeed; //delta=-5.00 
			turn rfoot to y-axis <-5.001491> speed <22.652655> / animSpeed; //delta=-0.76 
			turn rleg to x-axis <-22.644521> speed <1336.048420> / animSpeed; //delta=44.53 
			turn rthigh to x-axis <-41.185498> speed <63.751278> / animSpeed; //delta=-2.13 
			turn rthigh to z-axis <-3.958758> speed <186.473987> / animSpeed; //delta=-6.22 
			turn rthigh to y-axis <-11.727769> speed <104.317838> / animSpeed; //delta=3.48 
			turn ruparm to x-axis <23.500000> speed <180.187545> / animSpeed; //delta=-6.01 
			turn ruparm to y-axis <-6.400000> speed <150.749989> / animSpeed; //delta=-5.02 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			call-script lua_UnitScriptDecal(2, (get PIECE_XZ(rfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rfoot) & 0x0000ffff),   get HEADING(0));
			turn larm to x-axis <21.984374> speed <348.468738> / animSpeed; //delta=11.62 
			turn lfoot to x-axis <-39.359109> speed <612.207341> / animSpeed; //delta=20.41 
			turn lfoot to y-axis <2.091009> speed <30.846478> / animSpeed; //delta=1.03 
			turn lleg to x-axis <15.643693> speed <1113.380189> / animSpeed; //delta=-37.11 
			turn lthigh to x-axis <46.596613> speed <442.882819> / animSpeed; //delta=14.76 
			turn lthigh to z-axis <-10.562774> speed <888.807078> / animSpeed; //delta=-29.63 
			turn lthigh to y-axis <22.502197> speed <921.541195> / animSpeed; //delta=-30.72 
			turn luparm to x-axis <-22.793748> speed <351.187427> / animSpeed; //delta=-11.71 
			turn luparm to y-axis <-10.175000> speed <78.749964> / animSpeed; //delta=2.62 
			move pelvis to y-axis [-0.509000] speed [17.130001] / animSpeed; //delta=0.57 
			turn pelvis to z-axis <-3.0> speed <90.0> / animSpeed; //delta=3.00 
			turn pelvis to y-axis <7.0> speed <89.999964> / animSpeed; //delta=-3.00 
			turn rarm to x-axis <-16.707549> speed <201.190120> / animSpeed; //delta=-6.71 
			turn rfoot to x-axis <29.656039> speed <552.793659> / animSpeed; //delta=-18.43 
			turn rfoot to y-axis <-5.294995> speed <8.805130> / animSpeed; //delta=-0.29 
			turn rleg to x-axis <-10.406169> speed <367.150552> / animSpeed; //delta=-12.24 
			turn rthigh to x-axis <-24.727788> speed <493.731289> / animSpeed; //delta=-16.46 
			turn rthigh to z-axis <-3.705405> speed <7.600617> / animSpeed; //delta=-0.25 
			turn rthigh to y-axis <-12.229969> speed <15.065972> / animSpeed; //delta=-0.50 
			turn ruparm to x-axis <17.087501> speed <192.374976> / animSpeed; //delta=6.41 
			turn ruparm to y-axis <-5.0> speed <41.999990> / animSpeed; //delta=1.40 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:34
			turn larm to x-axis <-0.299999> speed <668.531198> / animSpeed; //delta=22.28 
			turn lfoot to x-axis <-17.562921> speed <653.885616> / animSpeed; //delta=-21.80 
			turn lfoot to y-axis <3.163811> speed <32.184048> / animSpeed; //delta=1.07 
			turn lleg to x-axis <37.754106> speed <663.312404> / animSpeed; //delta=-22.11 
			turn lthigh to x-axis <-16.412823> speed <1890.283079> / animSpeed; //delta=63.01 
			turn lthigh to z-axis <12.740923> speed <699.110911> / animSpeed; //delta=-23.30 
			turn lthigh to y-axis <14.550514> speed <238.550470> / animSpeed; //delta=-7.95 
			turn luparm to x-axis <-0.099999> speed <680.812476> / animSpeed; //delta=-22.69 
			turn luparm to y-axis <-4.400000> speed <173.250002> / animSpeed; //delta=5.78 
			move pelvis to y-axis [-0.243000] speed [7.980000] / animSpeed; //delta=0.27 
			turn pelvis to z-axis <-5.0> speed <59.999993> / animSpeed; //delta=2.00 
			turn pelvis to y-axis <0.0> speed <210.0> / animSpeed; //delta=-7.00 
			turn rarm to x-axis <0.688889> speed <521.893166> / animSpeed; //delta=-17.40 
			turn rfoot to x-axis <-8.039787> speed <1130.874805> / animSpeed; //delta=37.70 
			turn rleg to x-axis <13.914479> speed <729.619445> / animSpeed; //delta=-24.32 
			turn rthigh to x-axis <-7.232092> speed <524.870881> / animSpeed; //delta=-17.50 
			turn rthigh to z-axis <-3.286871> speed <12.555992> / animSpeed; //delta=-0.42 
			turn rthigh to y-axis <-12.123547> speed <3.192635> / animSpeed; //delta=0.11 
			turn ruparm to x-axis <-0.199998> speed <518.624972> / animSpeed; //delta=17.29 
			turn ruparm to y-axis <-0.0> speed <149.999996> / animSpeed; //delta=5.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:38
			turn larm to x-axis <-17.134373> speed <505.031222> / animSpeed; //delta=16.83 
			turn lfoot to x-axis <5.854170> speed <702.512729> / animSpeed; //delta=-23.42 
			turn lfoot to y-axis <4.245974> speed <32.464897> / animSpeed; //delta=1.08 
			turn lleg to x-axis <22.140340> speed <468.412990> / animSpeed; //delta=15.61 
			turn lthigh to x-axis <-42.979181> speed <796.990715> / animSpeed; //delta=26.57 
			turn lthigh to z-axis <11.761602> speed <29.379632> / animSpeed; //delta=0.98 
			turn lthigh to y-axis <17.139709> speed <77.675848> / animSpeed; //delta=2.59 
			turn luparm to x-axis <17.493749> speed <527.812430> / animSpeed; //delta=-17.59 
			turn luparm to y-axis <1.375000> speed <173.250002> / animSpeed; //delta=5.78 
			move pelvis to y-axis [0.0] speed [7.289996] / animSpeed; //delta=0.24 
			turn pelvis to z-axis <-3.0> speed <59.999993> / animSpeed; //delta=-2.00 
			turn pelvis to y-axis <-7.0> speed <210.0> / animSpeed; //delta=-7.00 
			turn rarm to x-axis <22.489496> speed <654.018190> / animSpeed; //delta=-21.80 
			turn rfoot to x-axis <-12.188812> speed <124.470721> / animSpeed; //delta=4.15 
			turn rleg to x-axis <-19.740643> speed <1009.653683> / animSpeed; //delta=33.66 
			turn rthigh to x-axis <36.121367> speed <1300.603759> / animSpeed; //delta=-43.35 
			turn rthigh to z-axis <1.810315> speed <152.915579> / animSpeed; //delta=-5.10 
			turn rthigh to y-axis <-16.008954> speed <116.562207> / animSpeed; //delta=-3.89 
			turn ruparm to x-axis <-22.787495> speed <677.624912> / animSpeed; //delta=22.59 
			turn ruparm to y-axis <8.199999> speed <245.999969> / animSpeed; //delta=8.20 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move pelvis to y-axis [0.0] speed [8.099999];
	turn larm to x-axis <0.0> speed <167.132799>;
	turn lfoot to x-axis <1.598104> speed <278.144425>;
	turn lfoot to y-axis <-0.159378> speed <33.040143>;
	turn lfoot to z-axis <5.802244> speed <43.508539>;
	turn lleg to x-axis <-0.159970> speed <335.388597>;
	turn lthigh to x-axis <-0.770551> speed <472.570770>;
	turn lthigh to y-axis <17.054521> speed <259.788123>;
	turn lthigh to z-axis <-6.168334> speed <274.393464>;
	turn luparm to x-axis <0.0> speed <170.203119>;
	turn luparm to y-axis <0.0> speed <61.499992>;
	turn luparm to z-axis <-7.100000> speed <53.249997>;
	turn pelvis to y-axis <0.0> speed <52.500000>;
	turn pelvis to z-axis <0.0> speed <22.500001>;
	turn rarm to x-axis <0.0> speed <168.671218>;
	turn rfoot to x-axis <1.828586> speed <282.718701>;
	turn rfoot to y-axis <0.186230> speed <8.953254>;
	turn rfoot to z-axis <-5.902988> speed <22.554820>;
	turn rleg to x-axis <-0.277257> speed <334.012105>;
	turn rthigh to x-axis <-1.052800> speed <479.971297>;
	turn rthigh to y-axis <-15.427311> speed <259.347320>;
	turn rthigh to z-axis <5.626000> speed <265.964922>;
	turn ruparm to x-axis <0.0> speed <170.906214>;
	turn ruparm to y-axis <0.0> speed <61.499992>;
	turn ruparm to z-axis <6.799999> speed <50.999995>;
}
// REMEMBER TO animspeed = 4 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 4; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 4) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>8) animSpeed = 8;
		sleep 131;
	}
}
StartMoving(reversing){
	signal SIGNAL_MOVE;
	isMoving=TRUE;
	set-signal-mask SIGNAL_MOVE;
	start-script UnitSpeed();
	start-script Walk();
}
StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}


Create()
{
	hide rflare;
	hide lflare;
	hide aimx1;
	hide aimy1;
	hide rflare;
	hide lflare;
	isMoving = FALSE;
	isAiming = FALSE;
	restore_delay = 3000;
	gun_1 = rflare;
	animSpeed = 4;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}



static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn aimy1 to y-axis <0.0> speed <90.0>;
	turn aimx1 to x-axis <0.0> speed <45.0>;
	wait-for-turn aimy1 around y-axis;
	wait-for-turn aimx1 around x-axis;
	wpn1_lasthead = 0xbadface;
	isAiming = FALSE;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = aimx1;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = rflare + gun_1;
}

FireWeapon1()
{
	gun_1 = !gun_1;
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	isAiming = TRUE;
	// any other prep
	turn aimy1 to y-axis heading speed <200.0>;
	turn aimx1 to x-axis <0.0> - pitch speed <200.0>;
	if ((wpn1_lasthead == 0xbadface) OR ANGLE_DIFFERENCE_GREATER_THAN((heading - wpn1_lasthead), <7>))
	
	//if ((wpn1_lasthead == 0xbadface) OR ABSOLUTE_GREATER_THAN(WRAPDELTA(heading - wpn1_lasthead), <7>))
	{
		wpn1_lasthead = 0xbadface;
		wait-for-turn aimy1 around y-axis;
		wait-for-turn aimx1 around x-axis;
	}
	start-script RestoreAfterDelay();
	wpn1_lasthead = heading;
	return (1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type BITMAPONLY | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type FALL | NOHEATCLOUD;
		explode torso type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
