
#include "../recoil_common_includes.h"

piece  base, door1, door2, flare, greenlight, orangelight;

static-var  restore_delay, missiles_stockpiled;

// Signal definitions
#define SIGNAL_AIM1 256


Create()
{
	hide flare;
	restore_delay = 3000;
	missiles_stockpiled = 0;
	hide greenlight;
	show orangelight;
	return (0);
}


#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

Activate()
{

}

Deactivate()
{

}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
	return (0);
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn door1 to z-axis <0> speed <60>;
	turn door2 to z-axis <0> speed <60>;
}

AimWeapon1(heading, pitch)
{

	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;

	turn door1 to z-axis <180> speed <60>;
	turn door2 to z-axis <-180> speed <60>;
	wait-for-turn door1 around z-axis;

	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
	return (0);
}

lights_orange()
{
	hide greenlight;
	show orangelight;
}

lights_green()
{
	show greenlight;
	hide orangelight;
}

SetStockpile(num_stockpiled)
{
	if (num_stockpiled == 0)
	{
		start-script lights_orange();
		sleep 100;
		missiles_stockpiled = 0;
	}
	if (num_stockpiled >= 1)
	{
		start-script lights_green();
		sleep 100;
		missiles_stockpiled = 1;
	}
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door2 type BITMAPONLY | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door2 type FALL | NOHEATCLOUD;
		explode flare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type SMOKE | FALL | NOHEATCLOUD;
		explode door2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode door2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
