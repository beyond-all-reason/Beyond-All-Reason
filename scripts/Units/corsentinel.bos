#include "../recoil_common_includes.h"

piece  base, nano, wake1, wake2, drone1, drone2, drone3, drone4, drone5,  turret,  flare, aimy, aimfromy, bow;

static-var  restore_delay, aimDir;
static-var  Stunned;

// Signal definitions
#define SIGNAL_AIM2 512
#define SIGNAL_AIM1 256


#define RB_MASS 40
#define RB_LENGTH 8
#define RB_WIDTH 3
#define RB_PITCH_ACCELERATION 10
#define RB_ROLL_ACCELERATION 8
#define RB_RECOIL_ENERGY_1 700
#define RB_RECOIL_ENERGY_3 250
#define RB_BOWSPLASH_PIECE bow
#define RB_WAKE_PIECE wake1

#include "../bar_ships_common.h"

Create()
{
	hide wake1;
	hide flare;
    restore_delay = 3000;
	start-script InitRockBoat();
	SLEEP_UNTIL_UNITFINISHED;
	start-script BoatPhysics();
}

ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn turret to y-axis <0.0> speed <55.0>;
}


RestoreAfterDelay()
{
	sleep 3000;
	start-script ExecuteRestoreAfterDelay();
}

SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}


StartMoving(reversing)
{
	RB_bounce_frame = RAND(0, <180>);
}

StopMoving()
{
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	start-script RestoreAfterDelay();
	emit-sfx 258 from nano;
	return (0);
}

FireWeapon1()
{
	emit-sfx 258 from nano;
	sleep 150;
	return (1);
}

QueryWeapon1(piecenum)
{
	piecenum = aimfromy;
}

AimFromWeapon1(piecenum)
{
	piecenum = aimfromy;
}


AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn turret to y-axis heading speed <200.000000>;
	wait-for-turn turret around y-axis;
	return (1);
}

FireWeapon2()
{
}

AimFromWeapon2(piecenum)
{
	piecenum = turret;
}

QueryWeapon2(piecenum)
{
	piecenum = turret;
}

//--------------------





Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		return(corpsetype);
	}
	corpsetype = 3 ;
	return corpsetype;
}
