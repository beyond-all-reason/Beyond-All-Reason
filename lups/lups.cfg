//==verbose mode?==
//ShowWarnings = true

//Quality=4 //0=very low,1=low,2=normal,3=high,4=very high


//==Distortions==
//Distortions               = false  // force distortions? (you can force it on, too!)
//DistortionUpdateSkip      = 0      // must be larger zero (larger := better performance)
//DistortionCopyDepthBuffer = true   // do depthtest? (can increase performance if turned off)


//==Force Card Detection==
//Vendor  = "NVIDIA Corporation"
//Renderer= "GeForce 7600"


//==Deactivate Specific Classes==
//DisableFX= {
//  ShockWave   = true,
//  UnitCloaker = true,
//  UnitJitter  = true,
//}


//==NanoTower FXs==
// NanoFxType[0..FACTIONS_COUNT-1] : determines the used particle class
//                                   (only NanoLasers and NanoParticles possible)
//                                   (Note: NanoParticles doesn't work on all PCs)
// NanoFx[0..FACTIONS_COUNT-1]     : fx config
// note: if you want to make a param dependent on the nano density,
//       then you can put " " around the param and put any lua code
//       in it (see core example fx)
//       (any lua function except math.random(),random(),r() are prohibited)
//       allowed variables to use are:
//         count       (nano density/strength)
//         limcount    (count scaled between 0..1)
//         and inverse (->reclaim)

NanoFx = {
// EXAMPLE CUSTOM ARM NANOFX (freaky!)
//arm = {
//  fxtype      = "NanoParticles",
//  alpha       = 0.25,
//  size        = 3,
//  sizeSpread  = 5,
//  sizeGrowth  = 0.35,
//  rotSpeed    = 0.1,
//  rotSpread   = 360,
//  texture     = "bitmaps/Other/Poof.png",
//  particles   = 1.75, // -> count*2.5 particles
//}

// DEFAULT CORE ONE
//core = {
//  fxtype          = "NanoLasers",
//  alpha           = "0.2+count/30",
//  corealpha       = "0.7+count/15",
//  corethickness   = "limcount",
//  streamThickness = "1+4*limcount",
//  streamSpeed     = "(inversed)and(70-count) or (120-count*3)",
//}
}